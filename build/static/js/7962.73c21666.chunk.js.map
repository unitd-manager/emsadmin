{"version":3,"file":"static/js/7962.73c21666.chunk.js","mappings":"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","sources":["components/dashboard/dashboardCards/DashCard.js","components/dashboard/ecommerceDashboard/OrderStatsData.js","components/dashboard/ecommerceDashboard/OrderStats.js","components/dashboard/classicDashboard/RecentComments.js","components/dashboard/cryptoDashboard/CryptoExchange.js","components/dashboard/ecommerceDashboard/ProductTable.js","components/dashboard/classicDashboard/ActiveVisitors.js","components/widgets/Feeds.js","components/widgets/TaskList.js","components/widgets/Profile.js","views/widget/Widget.js","components/dashboard/ecommerceDashboard/Earnings.js","components/dashboard/cryptoDashboard/CryptoOrder.js","components/dashboard/classicDashboard/Chat.js"],"sourcesContent":["import { Card, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst DashCard = ({ children, title, subtitle, actions }) => {\r\n  return (\r\n    <Card>\r\n      <CardBody className=\"p-4\">\r\n        <div className=\"d-flex\">\r\n          <div>\r\n            <CardTitle tag=\"h4\">{title}</CardTitle>\r\n            <CardSubtitle className=\"text-muted\">{subtitle}</CardSubtitle>\r\n          </div>\r\n          <div className=\"ms-auto\">{actions}</div>\r\n        </div>\r\n        <div className=\"mt-3\">{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nDashCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.string,\r\n  actions: PropTypes.node,\r\n};\r\n\r\nexport default DashCard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst OrderStatsData = ({ iconColor, title, subtitle }) => {\r\n  return (\r\n    <>\r\n      <i className={`bi bi-record-fill text-${iconColor} fs-4`} />\r\n      <h3 className=\"mb-0 font-medium\">{title}</h3>\r\n      <span className=\"text-muted\">{subtitle}</span>\r\n    </>\r\n  );\r\n};\r\n\r\nOrderStatsData.defaultProps = {\r\n  iconColor: 'default',\r\n};\r\n\r\nOrderStatsData.propTypes = {\r\n  iconColor: PropTypes.oneOf([\r\n    'primary',\r\n    'success',\r\n    'info',\r\n    'danger',\r\n    'warning',\r\n    'orange',\r\n    'cyan',\r\n    'default',\r\n  ]),\r\n  title: PropTypes.node,\r\n  subtitle: PropTypes.node,\r\n};\r\n\r\nexport default OrderStatsData;\r\n","import React from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\nimport Chart from 'react-apexcharts';\r\nimport DashCard from '../dashboardCards/DashCard';\r\nimport OrderStatsData from \"./OrderStatsData\";\r\n\r\nconst OrderStats = () => {\r\n  const optionsorder = {\r\n    chart: {\r\n      id: 'donut-chart',\r\n      fontFamily: '\"Nunito\", sans-serif',\r\n    },\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    grid: {\r\n      padding: {\r\n        left: 0,\r\n        right: 0,\r\n      },\r\n    },\r\n    plotOptions: {\r\n      pie: {\r\n        donut: {\r\n          size: '70px',\r\n          labels: {\r\n            show: true,\r\n            total: {\r\n              show: true,\r\n              label: 'Ratio',\r\n              color: '#99abb4',\r\n            },\r\n          },\r\n        },\r\n      },\r\n    },\r\n    stroke: {\r\n      width: 0,\r\n    },\r\n    labels: ['Open Ratio', 'Un-Open Ratio', 'Clicked Ratio', 'Bounced Ratio'],\r\n    legend: {\r\n      show: false,\r\n    },\r\n    colors: ['rgb(64, 196, 255)', 'rgb(255, 130, 28)', 'rgb(126, 116, 251)', 'rgb(41, 97, 255)'],\r\n    tooltip: {\r\n      fillSeriesColor: false,\r\n    },\r\n  };\r\n  const seriesorder = [45, 27, 15, 18];\r\n  return (\r\n    /*--------------------------------------------------------------------------------*/\r\n    /* Used In Dashboard-1 [Classic]                                                  */\r\n    /*--------------------------------------------------------------------------------*/\r\n    <DashCard title=\"Order Stats\" subtitle=\"Overview of orders\">\r\n      <div className=\"mt-5\">\r\n        <Chart options={optionsorder} series={seriesorder} type=\"donut\" height=\"245\" />\r\n      </div>\r\n      <Row className=\"mt-4\">\r\n        <Col className=\"xs-4\">\r\n          <OrderStatsData iconColor=\"primary\" title=\"5489\" subtitle=\"Success\" />\r\n        </Col>\r\n        <Col className=\"xs-4\">\r\n          <OrderStatsData iconColor=\"info\" title=\"954\" subtitle=\"Pending\" />\r\n        </Col>\r\n        <Col className=\"xs-4\">\r\n          <OrderStatsData iconColor=\"danger\" title=\"736\" subtitle=\"Failed\" />\r\n        </Col>\r\n      </Row>\r\n    </DashCard>\r\n  );\r\n};\r\n\r\nexport default OrderStats;\r\n","import {\r\n  Badge,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  ListGroupItemHeading,\r\n  ListGroupItemText,\r\n} from 'reactstrap';\r\nimport SimpleBar from 'simplebar-react';\r\nimport DashCard from '../dashboardCards/DashCard';\r\nimport user1 from '../../../assets/images/users/user1.jpg';\r\nimport user2 from '../../../assets/images/users/user2.jpg';\r\nimport user3 from '../../../assets/images/users/user3.jpg';\r\nimport user4 from '../../../assets/images/users/user4.jpg';\r\nimport user5 from '../../../assets/images/users/user5.jpg';\r\n\r\nconst commentsData = [\r\n  {\r\n    image: user1,\r\n    name: 'James Anderson',\r\n    comment: 'Lorem Ipsum is simply dummy text of the printing and type setting industry.',\r\n    status: 'Pending',\r\n    date: 'April 14, 2021',\r\n  },\r\n  {\r\n    image: user2,\r\n    name: 'Michael Jorden',\r\n    comment: 'Rpsum is simply dummy text of the printing and type setting industry.',\r\n    status: 'Approved',\r\n    date: 'May 14, 2021',\r\n  },\r\n  {\r\n    image: user3,\r\n    name: 'Johnathan Doeting',\r\n    comment: 'Frem Ipsum is simply dummy text of the printing and type setting industry.',\r\n    status: 'Approved',\r\n    date: 'June 14, 2021',\r\n  },\r\n  {\r\n    image: user4,\r\n    name: 'Daniel Kristeen',\r\n    comment: 'LorTsum is simply dummy text of the printing and type setting industry.',\r\n    status: 'Pending',\r\n    date: 'July 14, 2021',\r\n  },\r\n  {\r\n    image: user5,\r\n    name: 'Jan Petrovic',\r\n    comment: 'Mem Ipsum is simply dummy text of the printing and type setting industry.',\r\n    status: 'Rejected',\r\n    date: 'Aug 14, 2021',\r\n  },\r\n  {\r\n    image: user1,\r\n    name: 'Hanna Gover',\r\n    comment: 'Lorem Ipsum is simply dummy text of the printing and type setting industry.',\r\n    status: 'Pending',\r\n    date: 'April 14, 2021',\r\n  },\r\n];\r\n\r\nconst RecentComments = () => {\r\n  return (\r\n    <DashCard title=\"Recent Comments\" subtitle=\"Comments that needs to read\">\r\n      <SimpleBar style={{ height: '620px' }}>\r\n        <ListGroup flush>\r\n          {commentsData.map((icomment) => (\r\n            <ListGroupItem\r\n              action\r\n              href=\"#\"\r\n              tag=\"a\"\r\n              key={icomment.name}\r\n              className=\"d-flex border-0 p-3 w-100 rounded\"\r\n            >\r\n              <div>\r\n                <img src={icomment.image} alt=\"user\" width=\"50\" className=\"rounded-circle me-3\" />\r\n              </div>\r\n              <div className=\"w-100\">\r\n                <ListGroupItemHeading className=\"fw-bold mb-0\">\r\n                  {icomment.name}\r\n                </ListGroupItemHeading>\r\n                <ListGroupItemText className=\"my-1\">{icomment.comment}</ListGroupItemText>\r\n                <div className=\"d-flex\">\r\n                  <div>\r\n                    {icomment.status === 'Pending' ? (\r\n                      <Badge color=\"primary\" className='text-dark-white'>Pending</Badge>\r\n                    ) : icomment.status === 'Rejected' ? (\r\n                      <Badge color=\"danger\" className='text-dark-white'>Rejected</Badge>\r\n                    ) : (\r\n                      <Badge color=\"success\" className='text-dark-white'>Approved</Badge>\r\n                    )}\r\n                  </div>\r\n                  <small className=\"ms-auto\">{icomment.date}</small>\r\n                </div>\r\n              </div>\r\n            </ListGroupItem>\r\n          ))}\r\n        </ListGroup>\r\n      </SimpleBar>\r\n    </DashCard>\r\n  );\r\n};\r\n\r\nexport default RecentComments;\r\n","import React from 'react';\r\nimport { Row, Col, Form, Input, Button, InputGroup, InputGroupText } from 'reactstrap';\r\nimport DashCard from '../dashboardCards/DashCard';\r\n\r\nconst CryptoExchange = () => {\r\n  return (\r\n    /*--------------------------------------------------------------------------------*/\r\n    /* Used In Dashboard-2 [Cryptocurrency]                                           */\r\n    /*--------------------------------------------------------------------------------*/\r\n    <DashCard title=\"Currency Exchange\" subtitle=\"Exchange currency from here\">\r\n      <Form className=\"text-center pt-3 mb-4\">\r\n        <Row className=\"no-gutters\">\r\n          <Col xs=\"12\">\r\n            <InputGroup>\r\n              <Input />\r\n              <InputGroupText>\r\n                <Input type=\"select\" className=\"\">\r\n                  <option value=\"1\">BTC</option>\r\n                  <option value=\"2\">ETH</option>\r\n                  <option value=\"3\">DASH</option>\r\n                  <option value=\"4\">LTC</option>\r\n                  <option value=\"5\">NEO</option>\r\n                  <option value=\"6\">XRP</option>\r\n                  <option value=\"7\">EOS</option>\r\n                  <option value=\"8\">NEM</option>\r\n                  <option value=\"9\">ADA</option>\r\n                </Input>\r\n              </InputGroupText>\r\n            </InputGroup>\r\n          </Col>\r\n        </Row>\r\n        <div className=\"circle-box d-inline-block text-white bg-danger my-3 mx-auto\">\r\n          <i className=\"bi bi-arrow-down-up\" />\r\n        </div>\r\n        <Row className=\"no-gutters\">\r\n          <Col xs=\"12\">\r\n            <InputGroup>\r\n              <Input />\r\n              <InputGroupText>\r\n                <Input type=\"select\" className=\"\">\r\n                  <option value=\"1\">USD</option>\r\n                  <option value=\"2\">EUR</option>\r\n                  <option value=\"3\">INR</option>\r\n                  <option value=\"4\">AUD</option>\r\n                  <option value=\"5\">GBP</option>\r\n                  <option value=\"6\">CAD</option>\r\n                </Input>\r\n              </InputGroupText>\r\n            </InputGroup>\r\n          </Col>\r\n        </Row>\r\n      </Form>\r\n      <Button type=\"button\" color=\"primary\">\r\n        Exchange Now\r\n      </Button>\r\n    </DashCard>\r\n  );\r\n};\r\n\r\nexport default CryptoExchange;\r\n","import { Input, Table } from 'reactstrap';\r\nimport user1 from '../../../assets/images/products/s1.jpg';\r\nimport user2 from '../../../assets/images/products/s2.jpg';\r\nimport user3 from '../../../assets/images/products/s3.jpg';\r\nimport user4 from '../../../assets/images/products/s4.jpg';\r\nimport DashCard from '../dashboardCards/DashCard';\r\n\r\nconst tableData = [\r\n  {\r\n    pavatar: user1,\r\n    name: 'Orange Shoes',\r\n    customer: 'Rotating Chair',\r\n    status: 'pending',\r\n    weeks: '35',\r\n    budget: '95K',\r\n  },\r\n  {\r\n    pavatar: user2,\r\n    name: 'Red Sandle',\r\n    customer: 'Dummy Product',\r\n    status: 'done',\r\n    weeks: '35',\r\n    budget: '95K',\r\n  },\r\n  {\r\n    pavatar: user3,\r\n    name: 'Gourgeous Purse',\r\n    customer: 'Comfortable Chair',\r\n    status: 'holt',\r\n    weeks: '35',\r\n    budget: '95K',\r\n  },\r\n  {\r\n    pavatar: user4,\r\n    name: 'Puma T-shirt',\r\n    customer: 'Wooden Chair',\r\n    status: 'pending',\r\n    weeks: '35',\r\n    budget: '95K',\r\n  },\r\n];\r\n\r\nconst ProductTable = () => {\r\n  return (\r\n    <DashCard\r\n      title=\"Products of the Month\"\r\n      subtitle=\"Overview of Latest Month\"\r\n      actions={\r\n        <Input type=\"select\" className=\"custom-select\">\r\n          <option value=\"0\">Monthly</option>\r\n          <option value=\"1\">Daily</option>\r\n          <option value=\"2\">Weekly</option>\r\n          <option value=\"3\">Yearly</option>\r\n        </Input>\r\n      }\r\n    >\r\n      <div className=\"table-responsive\">\r\n        <Table className=\"text-nowrap mt-3 align-middle mb-0\" borderless>\r\n          <thead>\r\n            <tr>\r\n              <th>Products</th>\r\n              <th>Customers</th>\r\n              <th>Status</th>\r\n              <th>Invoice</th>\r\n              <th>Amount</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {tableData.map((tdata) => (\r\n              <tr key={tdata.pavatar} className=\"border-top\">\r\n                <td>\r\n                  <div className=\"d-flex align-items-center p-2\">\r\n                    <img src={tdata.pavatar} alt=\"pavatar\" width=\"50\" height=\"50\" className='rounded'/>\r\n                    <h5 className=\"mb-0 ms-3\">{tdata.name}</h5>\r\n                  </div>\r\n                </td>\r\n                <td>{tdata.customer}</td>\r\n                <td>\r\n                  {tdata.status === 'pending' ? (\r\n                    <span className=\"p-2 bg-danger rounded-circle d-inline-block ms-3\" />\r\n                  ) : tdata.status === 'holt' ? (\r\n                    <span className=\"p-2 bg-warning rounded-circle d-inline-block ms-3\" />\r\n                  ) : (\r\n                    <span className=\"p-2 bg-success rounded-circle d-inline-block ms-3\" />\r\n                  )}\r\n                </td>\r\n                <td>{tdata.weeks}</td>\r\n                <td>{tdata.budget}</td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </Table>\r\n      </div>\r\n    </DashCard>\r\n  );\r\n};\r\n\r\nexport default ProductTable;\r\n","import React from 'react';\r\nimport { Progress, Card, CardBody, Row, Col, Button } from 'reactstrap';\r\n\r\nimport img1 from '../../../assets/images/background/active-bg.png';\r\n\r\nconst ActiveVisitors = () => {\r\n  return (\r\n    /*--------------------------------------------------------------------------------*/\r\n    /* Used In Dashboard-1 [Classic]                                                  */\r\n    /*--------------------------------------------------------------------------------*/\r\n    <Card className=\"card-hover\">\r\n      <CardBody style={{ background: `url(${img1}) no-repeat top center` }}>\r\n        <div className=\"pt-3 text-center\">\r\n          <i className=\"bi bi-bar-chart-line display-4 text-primary d-block\" />\r\n          <span className=\"display-5 d-block fw-bold\">368</span>\r\n          <span>Active Visitors on Site</span>\r\n          <Progress multi className=\"mt-5\" style={{ height: '0.3rem' }}>\r\n            <Progress bar color=\"primary\" value=\"15\" />\r\n            <Progress bar color=\"success\" value=\"60\" />\r\n            <Progress bar color=\"warning\" value=\"25\" />\r\n          </Progress>\r\n          <Row className=\"mt-4 mb-4\">\r\n            <Col xs=\"4\" md=\"12\" lg=\"4\" className=\"border-right text-left\">\r\n              <h4 className=\"mb-0 fw-bold\">60%</h4>Desktop\r\n            </Col>\r\n            <Col xs=\"4\" md=\"12\" lg=\"4\" className=\"border-right text-md-left\">\r\n              <h4 className=\"mb-0 fw-bold\">28%</h4>Mobile\r\n            </Col>\r\n            <Col xs=\"4\" md=\"12\" lg=\"4\" className=\"text-right text-md-left\">\r\n              <h4 className=\"mb-0 fw-bold\">12%</h4>Tablet\r\n            </Col>\r\n          </Row>\r\n          <Button color=\"primary\" className=\"mb-2\">\r\n            View More Details\r\n          </Button>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default ActiveVisitors;\r\n","import React from 'react';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  ListGroup,\r\n  CardSubtitle,\r\n  ListGroupItem,\r\n  Button,\r\n} from 'reactstrap';\r\n\r\nconst FeedData = [\r\n  {\r\n    title: 'Cras justo odio',\r\n    icon: 'bi bi-bell',\r\n    color: 'primary',\r\n    date: '6 minute ago',\r\n    id: 1,\r\n  },\r\n  {\r\n    title: 'New user registered.',\r\n    icon: 'bi bi-person',\r\n    color: 'info',\r\n    date: '6 minute ago',\r\n    id: 2,\r\n  },\r\n  {\r\n    title: 'Server #1 overloaded.',\r\n    icon: 'bi bi-hdd',\r\n    color: 'danger',\r\n    date: '6 minute ago',\r\n    id: 3,\r\n  },\r\n  {\r\n    title: 'New order received.',\r\n    icon: 'bi bi-bag-check',\r\n    color: 'success',\r\n    date: '6 minute ago',\r\n    id: 4,\r\n  },\r\n  {\r\n    title: 'Cras justo odio',\r\n    icon: 'bi bi-bell',\r\n    color: 'dark',\r\n    date: '6 minute ago',\r\n    id: 5,\r\n  },\r\n  {\r\n    title: 'Server #1 overloaded.',\r\n    icon: 'bi bi-hdd',\r\n    color: 'warning',\r\n    date: '6 minute ago',\r\n    id: 6,\r\n  },\r\n];\r\n\r\nconst Feeds = () => {\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <CardTitle tag=\"h4\">Feeds</CardTitle>\r\n        <CardSubtitle className=\"text-muted\">\r\n          Widget you can use\r\n        </CardSubtitle>\r\n      </CardBody>\r\n      <ListGroup flush>\r\n        {FeedData.map((feed) => (\r\n          <ListGroupItem\r\n            key={feed.id}\r\n            action\r\n            href=\"/\"\r\n            tag=\"a\"\r\n            className=\"d-flex align-items-center py-3 border-0\"\r\n          >\r\n            <Button className=\"rounded-circle me-3\" size=\"sm\" color={feed.color}>\r\n              <i className={feed.icon} />\r\n            </Button>\r\n            {feed.title}\r\n            <small className=\"ms-auto text-muted text-small\">{feed.date}</small>\r\n          </ListGroupItem>\r\n        ))}\r\n      </ListGroup>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Feeds;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  CardSubtitle,\r\n  ListGroup,\r\n  ListGroupItem,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from 'reactstrap';\r\n\r\nconst TaskList = () => {\r\n  const [todos, setTodos] = useState([\r\n    {\r\n      id: 1,\r\n      content: 'Twice event for two days',\r\n      completed: false,\r\n    },\r\n    {\r\n      id: 2,\r\n      content: 'Go for party of sahs',\r\n      completed: false,\r\n    },\r\n    {\r\n      id: 3,\r\n      content: 'Research of making own browser',\r\n      completed: false,\r\n    },\r\n    {\r\n      id: 4,\r\n      content: 'Check Severny admin',\r\n      completed: true,\r\n    },\r\n  ]);\r\n\r\n  const toggleComplete = (todoId) => {\r\n    setTodos(\r\n      todos.map((todo) => {\r\n        if (todo.id === todoId) todo.completed = !todo.completed;\r\n        return todo;\r\n      }),\r\n    );\r\n  };\r\n\r\n  const deleteTodo = (todoId) => {\r\n    setTodos(todos.filter((todo) => todo.id !== todoId));\r\n  };\r\n\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <CardTitle tag=\"h4\">Task List</CardTitle>\r\n        <CardSubtitle className=\"text-muted\">Widget you can use</CardSubtitle>\r\n        <div className=\"todo-widget mt-4\">\r\n          <ListGroup className=\"list-task todo-list list-group mb-0\" data-role=\"tasklist\">\r\n            {todos.map((todo) => (\r\n              <ListGroupItem\r\n                className={`list-group-item d-flex align-items-center todo-item ps-0 border-0 ${\r\n                  todo.completed ? 'completed' : ''\r\n                }`}\r\n                key={todo.id}\r\n              >\r\n                <FormGroup check inline>\r\n                  <Input\r\n                    type=\"checkbox\"\r\n                    checked={todo.completed}\r\n                    id={todo.id}\r\n                    data-toggle=\"checkbox\"\r\n                    onChange={() => toggleComplete(todo.id)}\r\n                  />\r\n                  <Label htmlFor={todo.id} check>\r\n                    <span className=\"todo-desc\">{todo.content}</span>\r\n                  </Label>\r\n                </FormGroup>\r\n                {/* <div className=\"custom-control custom-checkbox\">\r\n                  <input\r\n                    type=\"checkbox\"\r\n                    checked={todo.completed}\r\n                    id={todo.id}\r\n                    className=\"custom-control-input\"\r\n                    data-toggle=\"checkbox\"\r\n                    onChange={(todoId) => toggleComplete(todo.id)}\r\n                  />\r\n                  <label className=\"custom-control-label todo-label\" htmlFor={todo.id}>\r\n                    <span className=\"todo-desc\">{todo.content}</span>\r\n                  </label>\r\n                </div> */}\r\n                <span className=\"cursor-pointer ms-auto\" onClick={() => deleteTodo(todo.id)}>\r\n                  <i className=\"bi bi-trash fs-4 text-danger\"></i>\r\n                </span>\r\n              </ListGroupItem>\r\n            ))}\r\n          </ListGroup>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default TaskList;\r\n","import React from 'react';\r\nimport { Card, CardBody, CardTitle, CardSubtitle, Row, Col } from 'reactstrap';\r\nimport img1 from '../../assets/images/users/user1.jpg';\r\n\r\nconst Profile = () => {\r\n  return (\r\n    <Card>\r\n      <CardBody className=\"text-center p-4 border-bottom\">\r\n        <img src={img1} className=\"rounded-circle\" width=\"120\" alt=\"avatar\" />\r\n        <CardTitle tag=\"h4\" className=\"fw-bold mt-3 mb-0\">\r\n          Daniel Kristeen\r\n        </CardTitle>\r\n        <CardSubtitle className=\"text-muted\">danielkristeen@gmail.com</CardSubtitle>\r\n        <div className='d-flex align-items-center justify-content-center mt-4 gap-2'>\r\n            <a href='/' className='badge bg-primary text-white rounded-pill text-decoration-none'>Dashboard</a>\r\n            <a href='/' className='badge bg-light text-dark rounded-pill text-decoration-none'>UI</a>\r\n            <a href='/' className='badge bg-light text-dark rounded-pill text-decoration-none'>UX</a>\r\n            <a href='/' className='badge bg-light text-dark rounded-pill text-decoration-none'>+3</a>\r\n\r\n        </div>\r\n      </CardBody>\r\n      <CardBody>\r\n        <Row>\r\n          <Col xs=\"6\" className=\"text-center border-end\">\r\n            <a\r\n              href=\"/\"\r\n              className=\"text-dark d-flex align-items-center justify-content-center text-decoration-none fw-bold\"\r\n            >\r\n              <i className=\"bi bi-chat-left-fill text-muted me-2\"></i>\r\n              Message\r\n            </a>\r\n          </Col>\r\n          <Col xs=\"6\" className=\"text-center\">\r\n            <a\r\n              href=\"/\"\r\n              className=\"text-dark d-flex align-items-center justify-content-center text-decoration-none fw-bold\"\r\n            >\r\n              <i className=\"bi bi-columns text-muted me-2\"></i>\r\n              Portfolio\r\n            </a>\r\n          </Col>\r\n        </Row>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Profile;\r\n","import React from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\nimport RecentComments from '../../components/dashboard/classicDashboard/RecentComments';\r\nimport Chat from '../../components/dashboard/classicDashboard/Chat';\r\nimport CryptoExchange from '../../components/dashboard/cryptoDashboard/CryptoExchange';\r\nimport CryptoOrder from '../../components/dashboard/cryptoDashboard/CryptoOrder';\r\nimport ActiveVisitors from '../../components/dashboard/classicDashboard/ActiveVisitors';\r\nimport ProductTable from '../../components/dashboard/ecommerceDashboard/ProductTable';\r\nimport OrderStats from '../../components/dashboard/ecommerceDashboard/OrderStats';\r\nimport Earnings from '../../components/dashboard/ecommerceDashboard/Earnings';\r\nimport Feeds from '../../components/widgets/Feeds';\r\nimport TaskList from '../../components/widgets/TaskList';\r\nimport Profile from '../../components/widgets/Profile';\r\n\r\nconst Widgets = () => {\r\n  return (\r\n    <>\r\n      <Row>\r\n        <Col xs=\"12\" lg=\"4\">\r\n          <RecentComments />\r\n          <TaskList />\r\n          <CryptoOrder />\r\n          <Earnings />\r\n        </Col>\r\n        <Col xs=\"12\" lg=\"4\">\r\n          <Chat />\r\n          <ProductTable />\r\n          <Profile />\r\n        </Col>\r\n        <Col xs=\"12\" lg=\"4\">\r\n            <Feeds />\r\n            <CryptoExchange />\r\n            <ActiveVisitors />\r\n            <OrderStats />\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Widgets;\r\n","import React from 'react';\r\n\r\nimport Chart from 'react-apexcharts';\r\nimport { Card, CardBody, CardTitle, CardSubtitle } from 'reactstrap';\r\n\r\nconst Earnings = () => {\r\n  const optionsearnings = {\r\n    chart: {\r\n      id: 'basic-bar',\r\n      fontFamily: '\"Nunito\", sans-serif',\r\n      type: 'area',\r\n      toolbar: {\r\n        show: false,\r\n      },\r\n      sparkline: { enabled: true },\r\n    },\r\n\r\n    dataLabels: {\r\n      enabled: false,\r\n    },\r\n    stroke: {\r\n      curve: 'smooth',\r\n      width: 2,\r\n    },\r\n    colors: ['#4fc3f7'],\r\n    xaxis: {\r\n      show: false,\r\n      labels: {\r\n        show: false,\r\n      },\r\n    },\r\n    yaxis: {\r\n      show: false,\r\n    },\r\n    markers: {\r\n      size: 0,\r\n    },\r\n    tooltip: {\r\n      x: {\r\n        format: 'dd/MM/yy HH:mm',\r\n      },\r\n      theme: 'dark',\r\n    },\r\n    legend: {\r\n      show: false,\r\n    },\r\n    grid: {\r\n      show: false,\r\n    },\r\n  };\r\n  const seriesearnings = [\r\n    {\r\n      name: 'Earnings',\r\n      data: [5, 6, 3, 7, 9, 10, 14, 12, 11, 9, 8, 7, 10, 6, 12, 10, 8],\r\n    },\r\n  ];\r\n  return (\r\n    /*--------------------------------------------------------------------------------*/\r\n    /* Earnings                                                 */\r\n    /*--------------------------------------------------------------------------------*/\r\n    <Card>\r\n        <CardBody className='p-4'>\r\n            <CardTitle tag=\"h4\">Earnings</CardTitle>\r\n            <CardSubtitle className=\"text-muted\">Total Earnings of the Month</CardSubtitle>\r\n            <h2 className='mt-2'>$43,567.53</h2>\r\n        </CardBody>\r\n        <Chart\r\n          options={optionsearnings}\r\n          series={seriesearnings}\r\n          type=\"area\"\r\n          height=\"56\"\r\n        />\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Earnings;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Nav,\r\n  NavItem,\r\n  TabContent,\r\n  TabPane,\r\n  NavLink,\r\n  InputGroup,\r\n  InputGroupText,\r\n  Input,\r\n} from 'reactstrap';\r\nimport DashCard from '../dashboardCards/DashCard';\r\n\r\nconst CryptoOrder = () => {\r\n  const [activeTab, setActiveTab] = useState('1');\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n  return (\r\n    <DashCard title=\"Place your Order\" subtitle=\"Buy and Sell Crypto as you Like\">\r\n      <Nav tabs className=\"mt-4\">\r\n        <NavItem>\r\n          <NavLink\r\n            className={activeTab === '1' ? 'active bg-transparent' : 'cursor-pointer'}\r\n            onClick={() => {\r\n              toggle('1');\r\n            }}\r\n          >\r\n            Buy\r\n          </NavLink>\r\n        </NavItem>\r\n        <NavItem>\r\n          <NavLink\r\n            className={activeTab === '2' ? 'active bg-transparent' : 'cursor-pointer'}\r\n            onClick={() => {\r\n              toggle('2');\r\n            }}\r\n          >\r\n            Sell\r\n          </NavLink>\r\n        </NavItem>\r\n      </Nav>\r\n      <TabContent activeTab={activeTab} className=\"p-4 border border-top-0\">\r\n        <TabPane tabId=\"1\" className=\"text-center\">\r\n          <InputGroup>\r\n            <Input placeholder=\"Buy Bitcoin\" />\r\n            <InputGroupText>\r\n              <i className=\"bi bi-currency-bitcoin\" />\r\n            </InputGroupText>\r\n          </InputGroup>\r\n          <div className=\"circle-box d-inline-block text-white bg-success my-3 mx-auto\">Or</div>\r\n          <InputGroup>\r\n            <Input placeholder=\"Buy Ethereum\" />\r\n            <InputGroupText>\r\n              <i className=\"bi bi-coin\" />\r\n            </InputGroupText>\r\n          </InputGroup>\r\n        </TabPane>\r\n        <TabPane tabId=\"2\" className=\"text-center\">\r\n          <InputGroup>\r\n            <Input placeholder=\"Sell Bitcoin\" />\r\n            <InputGroupText>\r\n              <i className=\"bi bi-currency-bitcoin\" />\r\n            </InputGroupText>\r\n          </InputGroup>\r\n          <div className=\"circle-box d-inline-block text-white bg-success my-3 mx-auto\">Or</div>\r\n          <InputGroup>\r\n            <Input placeholder=\"Sell Ethereum\" />\r\n            <InputGroupText>\r\n              <i className=\"bi bi-coin\" />\r\n            </InputGroupText>\r\n          </InputGroup>\r\n        </TabPane>\r\n      </TabContent>\r\n    </DashCard>\r\n  );\r\n};\r\n\r\nexport default CryptoOrder;\r\n","import React, { useState } from 'react';\r\nimport { Form, Row, Col, Input, Button } from 'reactstrap';\r\nimport SimpleBar from 'simplebar-react';\r\nimport DashCard from '../dashboardCards/DashCard';\r\nimport user1 from '../../../assets/images/users/user1.jpg';\r\nimport user2 from '../../../assets/images/users/user2.jpg';\r\n\r\nconst Chat = () => {\r\n  const [chats, setChats] = useState([\r\n    {\r\n      username: 'Kevin Hsu',\r\n      content: 'Hello World!',\r\n      img: user1,\r\n      id: 1,\r\n    },\r\n    {\r\n      username: 'Alice Chen',\r\n      content: 'Love it! :heart:',\r\n      img: user1,\r\n      id: 2,\r\n    },\r\n    {\r\n      username: 'Kevin Hsu',\r\n      content: 'Check out my Github at https://github.com/WigoHunter',\r\n      img: user1,\r\n      id: 3,\r\n    },\r\n    {\r\n      username: 'KevHs',\r\n      content:\r\n        'Lorem ipsum dolor sit amet, nibh ipsum. Cum class sem inceptos incidunt sed sed. Tempus wisi enim id, arcu sed lectus aliquam, nulla vitae est bibendum molestie elit risus.',\r\n      img: user2,\r\n      id: 4,\r\n    },\r\n    {\r\n      username: 'Kevin Hsu',\r\n      content: 'So',\r\n      img: user1,\r\n      id: 5,\r\n    },\r\n    {\r\n      username: 'Kevin Hsu',\r\n      content: 'Chilltime is going to be an app for you to view videos with friends',\r\n      img: user1,\r\n      id: 6,\r\n    },\r\n    {\r\n      username: 'Kevin Hsu',\r\n      content: 'You can sign-up now to try out our private beta!',\r\n      img: user1,\r\n      id: 7,\r\n    },\r\n    {\r\n      username: 'Alice Chen',\r\n      content: 'Definitely! Sounds great!',\r\n      img: user1,\r\n      id: 8,\r\n    },\r\n  ]);\r\n\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    const message2 = e.target.value;\r\n    setMessage(message2);\r\n  };\r\n\r\n  const submitMessage = (e) => {\r\n    e.preventDefault();\r\n    setChats(\r\n      [\r\n        ...chats,\r\n        {\r\n          username: 'Kevin Hsu',\r\n          content: <span>{message}</span>,\r\n          img: user2,\r\n          id: chats.length + 1,\r\n        },\r\n      ],\r\n      setMessage(''),\r\n    );\r\n  };\r\n  const username = 'Kevin Hsu';\r\n\r\n  return (\r\n    <DashCard title=\"Chat\" subtitle=\"message your friends\">\r\n      <ul className=\"list-unstyled\">\r\n        <SimpleBar style={{ height: '540px' }}>\r\n          {chats.map((chat) => (\r\n            <li\r\n              className={`chat ${\r\n                username === chat.username\r\n                  ? 'd-flex flex-row-reverse text-end mt-2'\r\n                  : 'd-flex gap-3 ms-auto mt-2'\r\n              }`}\r\n              key={chat.id}\r\n            >\r\n              <div>\r\n                {username !== chat.username && (\r\n                  <img\r\n                    src={chat.img}\r\n                    alt={`${chat.username}'s profile pic`}\r\n                    width=\"50\"\r\n                    className=\"rounded-circle\"\r\n                  />\r\n                )}\r\n              </div>\r\n              <div\r\n                className={`p-2 mb-1 rounded ${\r\n                  username === chat.username ? 'bg-light-success' : 'bg-light'\r\n                }`}\r\n              >\r\n                {' '}\r\n                {chat.content}\r\n              </div>\r\n            </li>\r\n          ))}\r\n        </SimpleBar>\r\n      </ul>\r\n      <div className=\"border-top pt-4\">\r\n        <Form onSubmit={(e) => submitMessage(e)}>\r\n          <Row className='gx-0'>\r\n            <Col xs=\"10\">\r\n              <div className=\"input-field mt-0 mb-0\">\r\n                <Input\r\n                  type=\"text\"\r\n                  placeholder=\"Type and enter\"\r\n                  className=\"form-control border-0\"\r\n                  value={message}\r\n                  onChange={handleChange}\r\n                />\r\n              </div>\r\n            </Col>\r\n            <Col xs=\"2\" className=\"text-end\">\r\n              <Button color=\"primary\" type=\"submit\" value=\"submit\">\r\n                <i className=\"bi bi-send\" />\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </Form>\r\n      </div>\r\n    </DashCard>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"names":["_ref","children","title","subtitle","actions","_jsx","Card","_jsxs","CardBody","className","CardTitle","tag","CardSubtitle","OrderStatsData","iconColor","_Fragment","concat","defaultProps","OrderStats","DashCard","Chart","options","chart","id","fontFamily","dataLabels","enabled","grid","padding","left","right","plotOptions","pie","donut","size","labels","show","total","label","color","stroke","width","legend","colors","tooltip","fillSeriesColor","series","type","height","Row","Col","commentsData","image","user1","name","comment","status","date","user2","user3","user4","user5","RecentComments","SimpleBar","style","ListGroup","flush","map","icomment","ListGroupItem","action","href","src","alt","ListGroupItemHeading","ListGroupItemText","Badge","CryptoExchange","Form","xs","InputGroup","Input","InputGroupText","value","Button","tableData","pavatar","customer","weeks","budget","ProductTable","Table","borderless","tdata","ActiveVisitors","background","Progress","multi","bar","md","lg","FeedData","icon","Feeds","feed","TaskList","todos","setTodos","useState","content","completed","todo","FormGroup","check","inline","checked","onChange","toggleComplete","todoId","Label","htmlFor","onClick","deleteTodo","filter","Profile","img1","Widgets","CryptoOrder","Earnings","Chat","toolbar","sparkline","curve","xaxis","yaxis","markers","x","format","theme","data","activeTab","setActiveTab","toggle","tab","Nav","tabs","NavItem","NavLink","TabContent","TabPane","tabId","placeholder","chats","setChats","username","img","message","setMessage","chat","onSubmit","e","preventDefault","length","submitMessage","message2","target"],"sourceRoot":""}