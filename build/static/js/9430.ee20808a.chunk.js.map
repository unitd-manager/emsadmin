{"version":3,"file":"static/js/9430.ee20808a.chunk.js","mappings":"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","sources":["components/apps/notes/NoteDetail.js","components/apps/notes/NoteListItem.js","components/apps/notes/NoteList.js","components/apps/notes/NoteSearch.js","views/apps/notes/Notes.js","components/twoColumn/TwoColumn.js"],"sourcesContent":["import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Input, FormGroup, Button, Label } from 'reactstrap';\r\nimport { UpdateNote, addNote } from '../../../store/apps/notes/NotesSlice';\r\n\r\nconst colorsBg = [\r\n  {\r\n    bg: 'primary',\r\n  },\r\n  {\r\n    bg: 'success',\r\n  },\r\n  {\r\n    bg: 'danger',\r\n  },\r\n  {\r\n    bg: 'info',\r\n  },\r\n  {\r\n    bg: 'warning',\r\n  },\r\n];\r\n\r\nconst NoteDetail = () => {\r\n  const noteDetails = useSelector(\r\n    (state) => state.notesReducer.notes[state.notesReducer.notesContent - 1],\r\n  );\r\n  const id = useSelector((state) => state.notesReducer.notes.length + 1);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const handleNote = (e) => {\r\n    e.preventDefault();\r\n    dispatch(addNote(id, 'dummy Title', 'primary'));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"border-bottom p-3 text-end\">\r\n        <Button className=\"btn btn-success ms-auto\" size=\"sm\" onClick={handleNote}>\r\n          Add New Note\r\n        </Button>\r\n      </div>\r\n      {noteDetails && noteDetails.deleted === false ? (\r\n        <div className=\"p-4\">\r\n          <FormGroup>\r\n            <Label for=\"title1\" tag=\"h5\">\r\n              Edit Note\r\n            </Label>\r\n            <Input\r\n              id=\"title1\"\r\n              name=\"title1\"\r\n              type=\"textarea\"\r\n              rows=\"5\"\r\n              value={noteDetails.title}\r\n              onChange={(e) => dispatch(UpdateNote(noteDetails.id, 'title', e.target.value))}\r\n            />\r\n          </FormGroup>\r\n          <br />\r\n          <h5>Change Note color</h5>\r\n          <div className=\"button-group\">\r\n            {colorsBg.map((colorbg) => (\r\n              <Button\r\n                color={colorbg.bg}\r\n                key={colorbg.bg}\r\n                size=\"sm\"\r\n                onClick={() => dispatch(UpdateNote(noteDetails.id, 'color', `${colorbg.bg}`))}\r\n              >\r\n                {noteDetails.color === colorbg.bg ? (\r\n                  <i className=\"bi bi-check\" />\r\n                ) : (\r\n                  <i className=\"bi bi-circle\" />\r\n                )}\r\n              </Button>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <div className=\"d-flex mt-3 p-4 flex-column align-items-center justify-content-center\">\r\n          <i className=\"ti-agenda display-5\" />\r\n          <h4 className=\"mt-2\">Please select a Note or Add Note.</h4>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteDetail;\r\n","import React from 'react';\r\nimport { NavItem, UncontrolledTooltip } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst NoteListItem = ({ onClick, id, active, noteTitle, noteColor, noteDatef, onDeleteClick }) => (\r\n  <NavItem className={`border-bottom cursor-pointer ${active === id ? 'bg-light' : ''}`}>\r\n    <div onClick={onClick} className={`border-start p-3 border-4 border-${noteColor}`}>\r\n      <h5 className=\"text-truncate noteText\">{noteTitle}</h5>\r\n      <div className=\"d-flex\">\r\n        <small>{noteDatef}</small>\r\n        <UncontrolledTooltip placement=\"top\" target=\"delete\">\r\n          Delete\r\n        </UncontrolledTooltip>\r\n        <i onClick={onDeleteClick} className=\"bi bi-trash ms-auto\" id=\"delete\" />\r\n      </div>\r\n    </div>\r\n  </NavItem>\r\n);\r\n\r\nNoteListItem.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  noteTitle: PropTypes.string.isRequired,\r\n  noteDatef: PropTypes.string.isRequired,\r\n  noteColor: PropTypes.string.isRequired,\r\n  id: PropTypes.number,\r\n  active: PropTypes.any,\r\n  onDeleteClick: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default NoteListItem;\r\n","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Nav } from 'reactstrap';\r\nimport NoteListItem from './NoteListItem';\r\nimport { fetchNotes, SelectNote, DeleteNote } from '../../../store/apps/notes/NotesSlice';\r\n\r\nconst NoteList = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchNotes());\r\n  }, [dispatch]);\r\n\r\n  const filterNotes = (notes, noteSearch) => {\r\n    if (noteSearch !== '')\r\n      return notes.filter(\r\n        (t) =>\r\n          !t.deleted &&\r\n          t.title.toLocaleLowerCase().concat(' ').includes(noteSearch.toLocaleLowerCase()),\r\n      );\r\n    return notes.filter((t) => !t.deleted);\r\n  };\r\n\r\n  const notes = useSelector((state) =>\r\n    filterNotes(state.notesReducer.notes, state.notesReducer.noteSearch),\r\n  );\r\n  const active = useSelector((state) => state.notesReducer.notesContent);\r\n\r\n  return (\r\n    <Nav>\r\n      {notes && notes.length\r\n        ? notes.map((note) => (\r\n            <NoteListItem\r\n              key={note.id}\r\n              {...note}\r\n              active={active}\r\n              onClick={() => dispatch(SelectNote(note.id))}\r\n              onDeleteClick={() => dispatch(DeleteNote(note.id))}\r\n              noteTitle={note.title}\r\n              noteColor={note.color}\r\n              noteDatef={new Date(note.datef).toLocaleDateString({\r\n                weekday: 'short',\r\n                year: 'numeric',\r\n                month: 'short',\r\n              })}\r\n            />\r\n          ))\r\n        : 'no notes'}\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default NoteList;\r\n","import React from 'react';\r\nimport { Form, Input } from 'reactstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { SearchNotes } from '../../../store/apps/notes/NotesSlice';\r\n\r\nconst NoteSearch = () => {\r\n  const searchTerm = useSelector((state) => state.notesReducer.noteSearch);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"p-3 border-bottom\">\r\n      <Form>\r\n        <div className=\"position-relative has-icon-left\">\r\n          <Input\r\n            className=\"form-control\"\r\n            id=\"searchNote\"\r\n            name=\"searchNote\"\r\n            type=\"text\"\r\n            onChange={(e) => dispatch(SearchNotes(e.target.value))}\r\n            value={searchTerm}\r\n            placeholder=\"Search Notes...\"\r\n          />\r\n        </div>\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NoteSearch;\r\n","import { Card, CardBody } from 'reactstrap';\r\nimport NoteDetail from '../../../components/apps/notes/NoteDetail';\r\nimport NoteList from '../../../components/apps/notes/NoteList';\r\nimport NoteSearch from '../../../components/apps/notes/NoteSearch';\r\nimport TwoColumn from '../../../components/twoColumn/TwoColumn';\r\nimport './notes.scss';\r\n\r\nconst Notes = () => {\r\n  return (\r\n    <>\r\n      <Card>\r\n        <CardBody>\r\n          <TwoColumn\r\n            leftContent={\r\n              <>\r\n                <NoteSearch />\r\n                <NoteList />\r\n              </>\r\n            }\r\n            rightContent={<NoteDetail />}\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Notes;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'reactstrap';\r\nimport SimpleBar from 'simplebar-react';\r\n\r\nconst TwoColumn = ({ leftContent, rightContent }) => {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n  const handleSubmit = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-lg-flex d-md-block border position-relative leftRightBox\">\r\n      <div className={`leftPart flex-shrink-0  bg-white border-end ${isOpen ? 'showLeftPart' : ''}`}>\r\n        <Button className=\"d-lg-none d-md-block openCloseBtn\" color=\"danger\">\r\n          <i className={`bi ${isOpen ? 'bi-x' : 'bi-list'}`} onClick={handleSubmit} />\r\n        </Button>\r\n        <SimpleBar style={{ height: 'calc(100vh - 200px)' }}>{leftContent}</SimpleBar>\r\n      </div>\r\n      <div className=\"rightPart\">\r\n        {rightContent}\r\n        {isOpen ? <div className=\"contentOverlay\" /> : ''}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTwoColumn.propTypes = {\r\n  leftContent: PropTypes.node,\r\n  rightContent: PropTypes.node,\r\n};\r\n\r\nexport default TwoColumn;\r\n"],"names":["colorsBg","bg","NoteDetail","noteDetails","useSelector","state","notesReducer","notes","notesContent","id","length","dispatch","useDispatch","_jsxs","children","_jsx","className","Button","size","onClick","e","preventDefault","addNote","deleted","FormGroup","Label","for","tag","Input","name","type","rows","value","title","onChange","UpdateNote","target","map","colorbg","color","concat","_ref","active","noteTitle","noteColor","noteDatef","onDeleteClick","NavItem","UncontrolledTooltip","placement","NoteList","useEffect","fetchNotes","filterNotes","noteSearch","filter","t","toLocaleLowerCase","includes","Nav","note","NoteListItem","_objectSpread","SelectNote","DeleteNote","Date","datef","toLocaleDateString","weekday","year","month","NoteSearch","searchTerm","Form","SearchNotes","placeholder","Notes","_Fragment","Card","CardBody","TwoColumn","leftContent","rightContent","isOpen","setIsOpen","React","handleSubmit","SimpleBar","style","height"],"sourceRoot":""}