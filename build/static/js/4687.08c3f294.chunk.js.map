{"version":3,"file":"static/js/4687.08c3f294.chunk.js","mappings":"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","sources":["views/cubosale/EditProject.js","layouts/breadcrumbs/BreadCrumbs.js"],"sourcesContent":["import React,{useEffect,useState} from 'react';\r\n\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n\r\n  Button,\r\n\r\n} from 'reactstrap';\r\nimport Swal from 'sweetalert2'\r\nimport { useParams } from 'react-router-dom';\r\nimport api from '../../constants/api';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\n\r\n\r\n\r\nconst BasicForm = () => {\r\n  const [company, setCompany] = React.useState([])\r\n  const [title, settitle] = useState('')\r\n  const [description, setdescription] = useState('')\r\n\r\n  const [startDate, setStartDate] = useState('')\r\n  const [estimatedFinishDate, setestimatedFinishDate] = useState('')\r\n  const [companyId, setcompanyId] = useState('')\r\n  const [file, setFile] = useState(null)\r\n  // const [imgUrl, setImage] = useState('')\r\n  const { id } = useParams();\r\n  const getCompany = () => {\r\n    api \r\n      .get('/api/getCompany')\r\n      .then((res) => {\r\n        setCompany(res.data.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n      api \r\n      .post('/api/getProjectById',{\r\n        project_id:id\r\n      })\r\n      .then((res) => {\r\n        console.log(res.data.data)\r\n        settitle(res.data.data.title);\r\n        setcompanyId(res.data.data.company_id);\r\n        setdescription(res.data.data.description)\r\n        setStartDate(res.data.data.start_date)\r\n        setestimatedFinishDate(res.data.data.start_date)\r\n       // setImage(res.data.data.attachment)\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n  };\r\n  useEffect(() => {\r\n    getCompany()\r\n  \r\n    return () => {\r\n      getCompany()\r\n    }\r\n  }, [])\r\n  const editProject = async() =>{\r\n    if(title !== '' \r\n    && description !== '' \r\n    && startDate !== '' \r\n    && estimatedFinishDate !== '' \r\n    && companyId !== ''){\r\n      const fd = new FormData()\r\n      fd.append('title',title)\r\n      fd.append('description',description)\r\n      fd.append('start_date',startDate)\r\n      fd.append('estimated_finish_date',estimatedFinishDate)\r\n      fd.append('company_id',companyId)\r\n      fd.append('project_id',id)\r\n      if(file != null){\r\n        fd.append('attachment',file)\r\n      }\r\n      \r\n      api\r\n      .post('/attachment/edit-projects',fd)\r\n      .then((res) => {\r\n        \r\n        if(res && res.data.status === '400'){\r\n          alert('Cannot add project.')\r\n        }else{\r\n          Swal.fire({\r\n            title: 'Success',\r\n            text: 'Project Added!',\r\n            icon: 'success'\r\n          })\r\n           window.location.reload()\r\n        }\r\n        //navigate('/dashboards/classic');\r\n        // setLoginData(res.data);\r\n      })\r\n      .catch((err) => {\r\n        console.log(err);\r\n      });\r\n    }else{\r\n      Swal.fire({\r\n        title: 'Field Missing',\r\n        text: 'Title,description & Dates are required',\r\n        icon: 'warning'\r\n      })\r\n    }\r\n    \r\n  }\r\n  const onFileChange = (event) =>{\r\n    setFile(event.target.files[0])\r\n  }\r\n  return (\r\n    <div>\r\n      <BreadCrumbs />\r\n      <Row>\r\n        <Col md=\"12\">\r\n          <Card>\r\n           \r\n            <CardBody className=\"bg-light\">\r\n              <CardTitle tag=\"h4\" className=\"mb-0\">\r\n                Project Info\r\n              </CardTitle>\r\n            </CardBody>\r\n            <CardBody>\r\n              <Form>\r\n                <Row>\r\n                  <Col md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Title</Label>\r\n                      <Input \r\n                      defaultValue={title}\r\n                      onInput={e => settitle(e.target.value)}\r\n                      type=\"text\" placeholder=\"\" />\r\n                      \r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Description</Label>\r\n                      <Input defaultValue={description} onInput={e => setdescription(e.target.value)} type=\"text\" placeholder=\"\" />\r\n                      \r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n                <Row>\r\n                <Col md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Start Date</Label>\r\n                      <Input defaultValue={startDate} onInput={e => setStartDate(e.target.value)} type=\"date\" placeholder=\"DOB Here\" />\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Estimated Finish Date</Label>\r\n                      <Input defaultValue={estimatedFinishDate} onInput={e => setestimatedFinishDate(e.target.value)} type=\"date\" placeholder=\"DOB Here\" />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row> \r\n                <Row>\r\n                  <Col md=\"6\">\r\n                    <FormGroup>\r\n                      <Label>Company</Label>\r\n                      <Input defaultChecked={companyId} onChange={e => setcompanyId(e.target.value)} type=\"select\" name=\"Select Category\">\r\n                        {company.map(data=>(\r\n                          <option key={data.company_id} selected={companyId === data.company_id && true} value={data.company_id}>{data.company_name}</option>\r\n                        ))}\r\n                        \r\n                      \r\n                      </Input>\r\n                    </FormGroup>\r\n                  </Col>\r\n                  <Col md=\"6\">\r\n                    <Label>Attachments</Label>\r\n                    <FormGroup>\r\n                        \r\n                        <Input onChange={onFileChange} type=\"file\" placeholder=\"\" />\r\n                    </FormGroup>\r\n                  </Col>\r\n                </Row>\r\n              </Form>\r\n            </CardBody>\r\n     \r\n            <CardBody className=\"border-top gap-2 d-flex align-items-center\">\r\n              <Button onClick={()=>{editProject()}} type=\"submit\" className=\"btn btn-success\">\r\n                Save\r\n              </Button>\r\n              <Button type=\"button\" className=\"btn btn-dark ml-2\">\r\n                Cancel\r\n              </Button>\r\n            </CardBody>\r\n          </Card>\r\n        </Col>\r\n      </Row>\r\n    \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default BasicForm;\r\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n"],"names":["BasicForm","company","setCompany","React","title","settitle","useState","description","setdescription","startDate","setStartDate","estimatedFinishDate","setestimatedFinishDate","companyId","setcompanyId","file","setFile","id","useParams","getCompany","api","get","then","res","data","catch","err","console","log","post","project_id","company_id","start_date","useEffect","_jsxs","children","_jsx","BreadCrumbs","Row","Col","md","Card","CardBody","className","CardTitle","tag","Form","FormGroup","Label","Input","defaultValue","onInput","e","target","value","type","placeholder","defaultChecked","onChange","name","map","selected","company_name","event","files","Button","onClick","async","fd","FormData","append","status","alert","Swal","text","icon","window","location","reload","editProject","prop","useLocation","firstUrl","pathname","split","secondUrl","_Fragment","heading","Breadcrumb","BreadcrumbItem","to","Link","active"],"sourceRoot":""}