{"version":3,"sources":["layouts/breadcrumbs/BreadCrumbs.js","components/Message.js","components/CreationModification.js","components/ComponentCard.js","components/CategoryTable/CategoryButton.js","components/CategoryTable/CategoryDetailComp.js","views/EditData/CategoryEdit.js","constants/creationdatetime.js","components/ComponentCardV2.js"],"names":["BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","CreationModification","details","title","created_by","creation_date","modified_by","modification_date","ComponentCard","children","subtitle","creationModificationDate","CategoryButton","editCategoryData","applyChanges","saveChanges","backToList","navigate","useNavigate","ComponentCardV2","color","onClick","setTimeout","console","log","CategoryDetailComp","categoryDetails","handleInputs","section","valuelist","md","onChange","value","category_title","name","section_id","defaultValue","map","e","section_title","category_type","internal_link","defaultChecked","published","meta_title","meta_description","meta_keyword","seo_title","CategoryEdit","useState","setCategoryDetails","setSection","setValuelist","id","useParams","useEffect","api","post","category_id","then","res","data","catch","get","creationdatetime","deleteCategoryData","target","moment","format","pStyle","textAlign","marginRight","oStyle","outline","border","style"],"mappings":"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","file":"static/js/64.1cc047e6.chunk.js","sourcesContent":["import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n","import {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst message = (msg,type) => {\r\n    if(type === 'success'){\r\n       return toast.success(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n            });\r\n    } if(type === 'error'){\r\n        return toast.error(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n     } if(type === 'info'){\r\n        return toast.info(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n            }if(type === 'warning'){\r\n               return toast.warning(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"colored\",\r\n                    });\r\n                   }\r\n            return toast(msg);\r\n   \r\n  \r\n}\r\nexport default message\r\n","import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n                <small> Creation: {details && details.created_by} {details && details.creation_date}</small>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n                <small> Modified: {details && details.modified_by} {details && details.modification_date}</small>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n   );\r\n}","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      {/* <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n        <p tag='h2' className=\"float-end small fs-5\">{righttitle}</p>\r\n      </CardTitle> */}\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate:PropTypes.any\r\n};\r\n\r\nexport default ComponentCard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Row, Col, Form, FormGroup, Button } from 'reactstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ComponentCardV2 from '../ComponentCardV2';\r\n\r\n// import DeleteButton from '../DeleteButton';\r\n\r\n\r\nexport default function CategoryButton({\r\n  editCategoryData,\r\n  // navigate,\r\n  applyChanges,\r\n  saveChanges,\r\n  // id,\r\n  backToList,\r\n}) {\r\n  CategoryButton.propTypes = {\r\n    editCategoryData: PropTypes.any,\r\n    // navigate: PropTypes.func,\r\n    applyChanges: PropTypes.func,\r\n    saveChanges: PropTypes.func,\r\n    // id: PropTypes.string,\r\n    backToList: PropTypes.func,\r\n  };\r\n  const navigate = useNavigate();\r\n  return (\r\n    <Form>\r\n      <FormGroup>\r\n        <ComponentCardV2>\r\n          <Row>\r\n            <Col>\r\n              <Button\r\n                className=\"shadow-none\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  editCategoryData();\r\n                  saveChanges();\r\n                  setTimeout(() => {\r\n                    navigate('/Category');\r\n                  }, 1100);\r\n                }}\r\n              >\r\n                Save\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                color=\"primary\"\r\n                className=\"shadow-none\"\r\n                onClick={() => {\r\n                  editCategoryData();\r\n                  applyChanges();\r\n                  console.log('cancel process');\r\n                }}\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Col>\r\n            {/* <Col>\r\n              <Button\r\n                type=\"submit\"\r\n                className=\"shadow-none\"\r\n                color=\"dark\"\r\n                onClick={(e) => {\r\n                  if (window.confirm('Are you sure you want to cancel? ')) {\r\n                    navigate('/Category');\r\n                  } else {\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n            <DeleteButton\r\n              id={id} \r\n              columnname=\"category_id\"\r\n              tablename=\"category\"\r\n            ></DeleteButton>\r\n            </Col> */}\r\n            <Col>\r\n              <Button\r\n                color=\"dark\"\r\n                className=\"shadow-none\"\r\n                onClick={() => {\r\n                  backToList();\r\n                  console.log('back to list');\r\n                }}\r\n              >\r\n                Back to List\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </ComponentCardV2>\r\n      </FormGroup>\r\n    </Form>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Row, Col, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport ComponentCard from '../ComponentCard';\r\n\r\nexport default function CategoryDetailComp({ categoryDetails, handleInputs, section, valuelist }) {\r\n  CategoryDetailComp.propTypes = {\r\n    categoryDetails: PropTypes.object,\r\n    handleInputs: PropTypes.func,\r\n    section: PropTypes.array,\r\n    valuelist: PropTypes.array,\r\n  };\r\n  return (\r\n    <>\r\n      <Form>\r\n        <FormGroup>\r\n        <ComponentCard title=\"Category Details\"\r\n         creationModificationDate={categoryDetails}>\r\n            <Row>\r\n              <Col md=\"4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Title <span className=\"required\"> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleInputs}\r\n                    value={categoryDetails && categoryDetails.category_title}\r\n                    name=\"category_title\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"4\">\r\n                <FormGroup>\r\n                  <Label>Section</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    onChange={handleInputs}\r\n                    value={categoryDetails && categoryDetails.section_id}\r\n                    name=\"section_id\"\r\n                  >\r\n                    <option defaultValue=\"selected\">\r\n                      Please Select\r\n                    </option>\r\n                    {section &&\r\n                      section.map((e) => {\r\n                        return <option key={e.section_id} value={e.section_id}>{e.section_title}</option>;\r\n                      })}\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"4\">\r\n                <FormGroup>\r\n                  <Label>Category Type</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    onChange={handleInputs}\r\n                    value={categoryDetails && categoryDetails.category_type}\r\n                    name=\"category_type\"\r\n                  >\r\n                    <option defaultValue=\"selected\">\r\n                      Please Select\r\n                    </option>\r\n                    {valuelist &&\r\n                      valuelist.map((e) => {\r\n                        return <option key={e.value} value={e.value}>{e.value}</option>;\r\n                      })}\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n          </Row>\r\n          <Row>\r\n              <Col md=\"4\">\r\n                <FormGroup>\r\n                  <Label>Internal Link</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    value={categoryDetails && categoryDetails.internal_link}\r\n                    onChange={handleInputs}\r\n                    name=\"internal_link\"\r\n                  ></Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"4\">\r\n              <FormGroup>\r\n                \r\n                <Label>Published</Label>\r\n                <br></br>\r\n                <Input\r\n                  name=\"published\"\r\n                  value=\"1\"\r\n                  type=\"radio\"\r\n                  defaultChecked={categoryDetails && categoryDetails.published === 1 && true}\r\n                  onChange={handleInputs}\r\n                />\r\n                <Label> Yes </Label>\r\n                <Input\r\n                  name=\"published\"\r\n                  value=\"0\"\r\n                  type=\"radio\"\r\n                  defaultChecked={categoryDetails && categoryDetails.published === 0 && true}\r\n                  onChange={handleInputs}\r\n                />\r\n                <Label>No</Label>\r\n                \r\n              </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </ComponentCard>\r\n          <ComponentCard title=\"Page Meta Data\">\r\n            <Row>\r\n            <Col md=\"6\">\r\n              <FormGroup>\r\n                <Label>Page Title</Label>\r\n                <Input\r\n                  value={categoryDetails && categoryDetails.meta_title}\r\n                  type=\"text\"\r\n                  onChange={handleInputs}\r\n                  name=\"meta_title\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\">\r\n              <FormGroup>\r\n                <Label>Page Description</Label>\r\n                <Input\r\n                  value={categoryDetails && categoryDetails.meta_description}\r\n                  type=\"textarea\"\r\n                  onChange={handleInputs}\r\n                  name=\"meta_description\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col md=\"6\">\r\n              <FormGroup>\r\n                <Label>Page Keywords</Label>\r\n                <Input\r\n                  value={categoryDetails && categoryDetails.meta_keyword}\r\n                  type=\"textarea\"\r\n                  onChange={handleInputs}\r\n                  name=\"meta_keyword\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\">\r\n        <FormGroup>\r\n          <Label>SEO Title</Label>\r\n          <Input\r\n            value={categoryDetails && categoryDetails.seo_title}\r\n            type=\"text\"\r\n            onChange={handleInputs}\r\n            name=\"seo_title\"\r\n          />\r\n        </FormGroup>\r\n      </Col>\r\n            </Row>\r\n          </ComponentCard>\r\n          <Row></Row>\r\n        </FormGroup>\r\n      </Form>\r\n     \r\n     \r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport '../form-editor/editor.scss';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport message from '../../components/Message';\r\nimport api from '../../constants/api';\r\nimport CategoryButton from '../../components/CategoryTable/CategoryButton';\r\nimport CategoryDetailComp from '../../components/CategoryTable/CategoryDetailComp';\r\nimport creationdatetime from '../../constants/creationdatetime';\r\n\r\nconst CategoryEdit = () => {\r\n  //All state variables\r\n  const [categoryDetails, setCategoryDetails] = useState();\r\n  const [section, setSection] = useState();\r\n  const [valuelist, setValuelist] = useState();\r\n\r\n  //Navigation and Parameter Constants\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  // Button Save Apply Back List\r\n  const applyChanges = () => {};\r\n  const saveChanges = () => {\r\n    if (categoryDetails.category_title !== '') {\r\n      navigate('/Category');\r\n    }\r\n  };\r\n  const backToList = () => {\r\n    navigate('/Category');\r\n  };\r\n\r\n  //Api call for getting section dropdown\r\n  const getSection = () => {\r\n    api\r\n      .get('/category/getSectionTitle')\r\n      .then((res) => {\r\n        setSection(res.data.data);\r\n      })\r\n      .catch(() => {\r\n        message('Section not found', 'info');\r\n      });\r\n  };\r\n\r\n  //Api call for getting valuelist dropdown\r\n  const getValuelist = () => {\r\n    api\r\n      .get('/category/get-ValueList')\r\n      .then((res) => {\r\n        setValuelist(res.data.data);\r\n      })\r\n      .catch(() => {\r\n        message('valuelist not found', 'info');\r\n      });\r\n  };\r\n\r\n  const handleInputs = (e) => {\r\n    setCategoryDetails({ ...categoryDetails, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Get Category By Id\r\n  const CategoryById = () => {\r\n    api\r\n      .post('/category/getCategoryById', { category_id: id })\r\n      .then((res) => {\r\n        setCategoryDetails(res.data.data[0]);\r\n      })\r\n      .catch(() => {\r\n        message('category Data Not Found', 'info');\r\n      });\r\n  };\r\n\r\n  //Category Edit function\r\n  const editCategoryData = () => {\r\n    categoryDetails.modification_date = creationdatetime;\r\n    if (categoryDetails.category_title !== '') {\r\n      api\r\n        .post('/category/editCategory', categoryDetails)\r\n        .then(() => {\r\n          message('Record editted successfully', 'success');\r\n        })\r\n        .catch(() => {\r\n          message('Unable to edit record.', 'error');\r\n        });\r\n    } else {\r\n      message('Please fill all required fields', 'warning');\r\n    }\r\n  };\r\n\r\n  //Delete Category Function\r\n  const deleteCategoryData = () => {\r\n    api\r\n      .post('/category/deleteCategory', { category_id: id })\r\n      .then(() => {\r\n        message('Record deteled successfully', 'success');\r\n      })\r\n      .catch(() => {\r\n        message('Unable to delete record.', 'error');\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    CategoryById();\r\n    getSection();\r\n    getValuelist();\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      <BreadCrumbs />\r\n      <ToastContainer></ToastContainer>\r\n\r\n      {/* Button */}\r\n      <CategoryButton\r\n        editCategoryData={editCategoryData}\r\n        navigate={navigate}\r\n        applyChanges={applyChanges}\r\n        saveChanges={saveChanges}\r\n        deleteCategoryData={deleteCategoryData}\r\n        backToList={backToList}\r\n        id={id}\r\n      ></CategoryButton>\r\n\r\n      {/* More details*/}\r\n      <CategoryDetailComp\r\n        categoryDetails={categoryDetails}\r\n        handleInputs={handleInputs}\r\n        section={section}\r\n        valuelist={valuelist}\r\n      ></CategoryDetailComp>\r\n    </>\r\n  );\r\n};\r\nexport default CategoryEdit;\r\n","import moment from \"moment\"\r\n\r\nconst creationdatetime = moment().format('DD-MM-YYYY h:mm:ss a')\r\nexport default creationdatetime \r\n","import { Card, CardBody } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst pStyle = {\r\n  textAlign: 'right',\r\n  marginRight: '10px',\r\n};\r\nconst oStyle={\r\noutline:'none',\r\nborder:'none'\r\n};\r\n\r\nconst ComponentCardV2 = ({ children }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CardBody style={pStyle} >\r\n        <div className=\"btn btn-space text-nowrap shadow-none outline-none\" style={oStyle}>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCardV2.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default ComponentCardV2;\r\n"],"sourceRoot":""}