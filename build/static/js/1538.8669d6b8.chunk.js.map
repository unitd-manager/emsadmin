{"version":3,"file":"static/js/1538.8669d6b8.chunk.js","mappings":"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","sources":["constants/creationdatetime.js","components/CreationModification.js","components/ComponentCard.js","components/ComponentCardV2.js","views/EditData/CustomerEdit.js","components/Message.js","layouts/breadcrumbs/BreadCrumbs.js"],"sourcesContent":["import moment from \"moment\"\r\n\r\nconst creationdatetime = moment().format('DD-MM-YYYY h:mm:ss a')\r\nexport default creationdatetime \r\n","import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n                <small> Creation: {details && details.created_by} {details && details.creation_date}</small>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n                <small> Modified: {details && details.modified_by} {details && details.modification_date}</small>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n   );\r\n}","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      {/* <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n        <p tag='h2' className=\"float-end small fs-5\">{righttitle}</p>\r\n      </CardTitle> */}\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate:PropTypes.any\r\n};\r\n\r\nexport default ComponentCard;\r\n","import { Card, CardBody } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst pStyle = {\r\n  textAlign: 'right',\r\n  marginRight: '10px',\r\n};\r\nconst oStyle={\r\noutline:'none',\r\nborder:'none'\r\n};\r\n\r\nconst ComponentCardV2 = ({ children }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CardBody style={pStyle} >\r\n        <div className=\"btn btn-space text-nowrap shadow-none outline-none\" style={oStyle}>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCardV2.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default ComponentCardV2;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Row, Col, Form, FormGroup, Button, Label, Input } from 'reactstrap';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport '../form-editor/editor.scss';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport ComponentCardV2 from '../../components/ComponentCardV2';\r\nimport message from '../../components/Message';\r\nimport api from '../../constants/api';\r\nimport ComponentCard from '../../components/ComponentCard';\r\nimport creationdatetime from '../../constants/creationdatetime';\r\n\r\nconst ContentUpdate = () => {\r\n  // All state variables\r\n  const [contentDetails, setContentDetails] = useState();\r\n\r\n  // Navigation and Parameter Constants\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  //Setting data in contentDetails\r\n  const handleInputs = (e) => {\r\n    setContentDetails({ ...contentDetails, [e.target.name]: e.target.value });\r\n  };\r\n  //setting data in Description Modal contentDetails\r\n\r\n\r\n  // Get content data By content id\r\n  const getContentById = () => {\r\n    api\r\n      .post('/contact/getContactsById', { contact_id: id })\r\n      .then((res) => {\r\n        setContentDetails(res.data.data[0]);\r\n      })\r\n      .catch(() => {\r\n        message('Content Data Not Found', 'info');\r\n      });\r\n  };\r\n  //Edit Content\r\n  const editContentData = () => {\r\n    contentDetails.modification_date = creationdatetime;\r\n    console.log(contentDetails);\r\n    if (\r\n      contentDetails.content_title !== '' &&\r\n      contentDetails.sub_category_id !== '' &&\r\n      contentDetails.published !== ''\r\n    ) {\r\n      api\r\n        .post('/contact/editContact', contentDetails)\r\n        .then(() => {\r\n          message('Record edited successfully', 'success');\r\n        })\r\n        .catch(() => {\r\n          message('Unable to edit record.', 'error');\r\n        });\r\n    } else {\r\n      message('Please fill all required fields', 'warning');\r\n    }\r\n  };\r\n\r\n  // getting data from Category\r\n \r\n\r\n  useEffect(() => {\r\n    getContentById();\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      <BreadCrumbs heading={contentDetails && contentDetails.title} />\r\n      <Form>\r\n        <FormGroup>\r\n          <ComponentCardV2>\r\n            <Row>\r\n              <Col>\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    editContentData();\r\n                    setTimeout(() => {\r\n                      navigate('/Customer');\r\n                    }, 1100);\r\n                  }}\r\n                >\r\n                  Save\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    editContentData();\r\n                  }}\r\n                >\r\n                  Apply\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  color=\"dark\"\r\n                  onClick={() => {\r\n                    navigate('/Customer');\r\n                    console.log('back to list');\r\n                  }}\r\n                >\r\n                  Back to List\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </ComponentCardV2>\r\n          {/* Content Details Form */}\r\n          <ComponentCard title=\"Customer details\" creationModificationDate={contentDetails}>\r\n            <ToastContainer></ToastContainer>\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label> Contact Id </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleInputs}\r\n                    value={contentDetails && contentDetails.contact_id}\r\n                    name=\"contact_id\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                <Label>Name</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleInputs}\r\n                    value={contentDetails && contentDetails.first_name}\r\n                    name=\"first_name\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  {/* Category title from Category table */}\r\n                  <Label>Mobile</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleInputs}\r\n                    value={contentDetails && contentDetails.mobile}\r\n                    name=\"mobile\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  {/* Category title from Category table */}\r\n                  <Label>Email</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleInputs}\r\n                    value={contentDetails && contentDetails.email}\r\n                    name=\"email\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  {/* Category title from Category table */}\r\n                  <Label>Password</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleInputs}\r\n                    value={contentDetails && contentDetails.pass_word}\r\n                    name=\"pass_word\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                <Label>Address</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleInputs}\r\n                    value={contentDetails && contentDetails.address1}\r\n                    name=\"address1\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n             \r\n            </Row>\r\n          </ComponentCard>\r\n          </FormGroup>\r\n      </Form>\r\n     \r\n     \r\n    </>\r\n  );\r\n};\r\nexport default ContentUpdate;\r\n","import {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst message = (msg,type) => {\r\n    if(type === 'success'){\r\n       return toast.success(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n            });\r\n    } if(type === 'error'){\r\n        return toast.error(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n     } if(type === 'info'){\r\n        return toast.info(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n            }if(type === 'warning'){\r\n               return toast.warning(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"colored\",\r\n                    });\r\n                   }\r\n            return toast(msg);\r\n   \r\n  \r\n}\r\nexport default message\r\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n"],"names":["moment","format","CreationModification","_ref","details","title","_jsx","_Fragment","children","CardTitle","tag","className","_jsxs","Row","Col","created_by","creation_date","modified_by","modification_date","subtitle","creationModificationDate","Card","CardBody","CardSubtitle","pStyle","textAlign","marginRight","oStyle","outline","border","style","ContentUpdate","contentDetails","setContentDetails","useState","id","useParams","navigate","useNavigate","handleInputs","e","_objectSpread","target","name","value","editContentData","creationdatetime","console","log","content_title","sub_category_id","published","api","post","then","message","catch","useEffect","contact_id","res","data","BreadCrumbs","heading","Form","FormGroup","ComponentCardV2","Button","color","onClick","setTimeout","ComponentCard","ToastContainer","md","Label","Input","type","onChange","first_name","mobile","email","pass_word","address1","msg","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","prop","location","useLocation","firstUrl","pathname","split","secondUrl","Breadcrumb","BreadcrumbItem","to","Link","active"],"sourceRoot":""}