{"version":3,"file":"static/js/3445.18fc83a9.chunk.js","mappings":"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","sources":["constants/creationdatetime.js","components/CreationModification.js","components/ComponentCard.js","views/detailTable/NewMagazine.js","components/Message.js","layouts/breadcrumbs/BreadCrumbs.js"],"sourcesContent":["import moment from \"moment\"\r\n\r\nconst creationdatetime = moment().format('DD-MM-YYYY h:mm:ss a')\r\nexport default creationdatetime \r\n","import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n                <small> Creation: {details && details.created_by} {details && details.creation_date}</small>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n                <small> Modified: {details && details.modified_by} {details && details.modification_date}</small>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n   );\r\n}","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      {/* <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n        <p tag='h2' className=\"float-end small fs-5\">{righttitle}</p>\r\n      </CardTitle> */}\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate:PropTypes.any\r\n};\r\n\r\nexport default ComponentCard;\r\n","import React, {useContext, useState, useEffect } from 'react';\r\nimport { Row, Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport ComponentCard from '../../components/ComponentCard';\r\nimport message from '../../components/Message';\r\nimport api from '../../constants/api';\r\nimport creationdatetime from '../../constants/creationdatetime';\r\nimport AppContext from '../../context/AppContext';\r\n\r\nconst ContentDetails = () => {\r\n  //All const variables\r\n  const [content, setContent] = useState();\r\n  const navigate = useNavigate();\r\n  const [contentDetails, setContentDetails] = useState({\r\n    title: '',\r\n    creation_date: moment(),\r\n    content_date: moment(),\r\n    content_type: '',\r\n  });\r\n  const [sectionLinked, setSectionLinked] = useState();\r\n  //setting data in contentDetails\r\n  const handleInputs = (e) => {\r\n    setContentDetails({ ...contentDetails, [e.target.name]: e.target.value });\r\n  };\r\n  //get staff details\r\n  const { loggedInuser } = useContext(AppContext);\r\n  // getting data from Section\r\n  const getsection = () => {\r\n    api.get('/content/getMonth', sectionLinked).then((res) => {\r\n      setSectionLinked(res.data.data);\r\n    });\r\n  };\r\n  //getting data from content\r\n  const getContent = () => {\r\n    api.get('/content/getMagazine').then((res) => {\r\n      setContent(res.data.data);\r\n      console.log(content);\r\n    });\r\n  };\r\n  //Insert Content Data\r\n  const insertContentData = () => {\r\n    if (contentDetails.title !== '' )\r\n    {\r\n      contentDetails.creation_date = creationdatetime;\r\n      contentDetails.created_by= loggedInuser.first_name;   \r\n      api\r\n        .post('/content/insertMagazine', contentDetails)\r\n        .then((res) => {\r\n          const insertedDataId = res.data.data.insertId;\r\n          message('Magazine Data inserted successfully.', 'success');\r\n          setTimeout(() => {\r\n            navigate(`/MagazineEdit/${insertedDataId}`);\r\n          }, 300);\r\n        })\r\n        .catch(() => {\r\n          message('Unable to insert record.', 'error');\r\n        });\r\n    } else {\r\n      message('Please fill all required fields.', 'warning');\r\n    }\r\n  };\r\n  \r\n  useEffect(() => {\r\n    getContent();\r\n    getsection();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <BreadCrumbs />\r\n      <ToastContainer></ToastContainer>\r\n      <Row>\r\n        <Col md=\"6\">\r\n          <ComponentCard title=\"Key Details\">\r\n            <Form>\r\n              <FormGroup>\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <Label>Title<span className=\"required\"> *</span> </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      onChange={handleInputs}\r\n                      value={contentDetails && contentDetails.title}\r\n                      name=\"title\"\r\n                    />\r\n                  </Col>\r\n                  <Col md=\"12\">\r\n  <FormGroup>\r\n    {/* Section title from section table */}\r\n    <Label>Month</Label>\r\n    <Input\r\n      type=\"select\"\r\n      name=\"month\"\r\n      value={contentDetails && contentDetails.month}\r\n      onChange={handleInputs}\r\n    >\r\n      <option value=\"\" selected=\"selected\">\r\n        Please Select\r\n      </option>\r\n      {sectionLinked &&\r\n        sectionLinked.map((ele) => {\r\n          return <option value={ele.name}>{ele.name}</option>;\r\n        })}\r\n    </Input>\r\n  </FormGroup>\r\n</Col>\r\n\r\n                </Row>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Row>\r\n                  <div className=\"pt-3 mt-3 d-flex align-items-center gap-2\">\r\n                    <Button\r\n                      className=\"shadow-none\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        insertContentData();\r\n                        // setTimeout(() => {\r\n                        //   navigate('/ContentEdit');\r\n                        // }, 800);\r\n                      }}\r\n                    >\r\n                      Save\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => {\r\n                        navigate(-1);\r\n                      }}\r\n                      type=\"button\"\r\n                      className=\"btn btn-dark shadow-none\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </div>\r\n                </Row>\r\n              </FormGroup>\r\n            </Form>\r\n          </ComponentCard>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default ContentDetails;\r\n","import {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst message = (msg,type) => {\r\n    if(type === 'success'){\r\n       return toast.success(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n            });\r\n    } if(type === 'error'){\r\n        return toast.error(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n     } if(type === 'info'){\r\n        return toast.info(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n            }if(type === 'warning'){\r\n               return toast.warning(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"colored\",\r\n                    });\r\n                   }\r\n            return toast(msg);\r\n   \r\n  \r\n}\r\nexport default message\r\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n"],"names":["moment","format","CreationModification","_ref","details","title","_jsx","_Fragment","children","CardTitle","tag","className","_jsxs","Row","Col","created_by","creation_date","modified_by","modification_date","subtitle","creationModificationDate","Card","CardBody","CardSubtitle","ContentDetails","content","setContent","useState","navigate","useNavigate","contentDetails","setContentDetails","content_date","content_type","sectionLinked","setSectionLinked","handleInputs","e","_objectSpread","target","name","value","loggedInuser","useContext","AppContext","useEffect","api","get","then","res","data","console","log","BreadCrumbs","ToastContainer","md","ComponentCard","Form","FormGroup","Label","Input","type","onChange","month","selected","map","ele","Button","color","onClick","creationdatetime","first_name","post","insertedDataId","insertId","message","setTimeout","concat","catch","msg","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","Breadcrumb","BreadcrumbItem","to","Link","active"],"sourceRoot":""}