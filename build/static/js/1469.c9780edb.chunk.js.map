{"version":3,"file":"static/js/1469.c9780edb.chunk.js","mappings":"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","sources":["components/twoColumn/TwoColumn.js","components/apps/chat/ChatListItem.js","components/apps/chat/ChatList.js","components/apps/chat/ChatSearch.js","components/apps/chat/ChatContent.js","components/apps/chat/ChatMsgForm.js","views/apps/chat/Chat.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Button } from 'reactstrap';\r\nimport SimpleBar from 'simplebar-react';\r\n\r\nconst TwoColumn = ({ leftContent, rightContent }) => {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n\r\n  const handleSubmit = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n\r\n  return (\r\n    <div className=\"d-lg-flex d-md-block border position-relative leftRightBox\">\r\n      <div className={`leftPart flex-shrink-0  bg-white border-end ${isOpen ? 'showLeftPart' : ''}`}>\r\n        <Button className=\"d-lg-none d-md-block openCloseBtn\" color=\"danger\">\r\n          <i className={`bi ${isOpen ? 'bi-x' : 'bi-list'}`} onClick={handleSubmit} />\r\n        </Button>\r\n        <SimpleBar style={{ height: 'calc(100vh - 200px)' }}>{leftContent}</SimpleBar>\r\n      </div>\r\n      <div className=\"rightPart\">\r\n        {rightContent}\r\n        {isOpen ? <div className=\"contentOverlay\" /> : ''}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nTwoColumn.propTypes = {\r\n  leftContent: PropTypes.node,\r\n  rightContent: PropTypes.node,\r\n};\r\n\r\nexport default TwoColumn;\r\n","import React from 'react';\r\nimport { NavItem } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst ChatListItem = ({ onClick, contactName, active, id, thumb, status }) => (\r\n  <NavItem onClick={onClick} className={`w-100 cursor-pointer ${active === id ? 'bg-light' : ''}`}>\r\n    <div className=\"d-flex align-items-center p-3 mb-1\">\r\n      <div>\r\n        <img src={thumb} alt=\"user\" className=\"rounded-circle\" width=\"50\" />\r\n      </div>\r\n      <div className=\"mx-3\">\r\n        <h5 className=\"mb-0\">{contactName}</h5>\r\n        <small>{status}</small>\r\n      </div>\r\n    </div>\r\n  </NavItem>\r\n);\r\n\r\nChatListItem.propTypes = {\r\n  onClick: PropTypes.func.isRequired,\r\n  thumb: PropTypes.string,\r\n  active: PropTypes.any,\r\n  id: PropTypes.any,\r\n  contactName: PropTypes.string.isRequired,\r\n  status: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default ChatListItem;\r\n","import React, { useEffect } from 'react';\r\nimport { Nav } from 'reactstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { SelectChat, fetchChats } from '../../../store/apps/chat/ChatSlice';\r\nimport Chat from './ChatListItem';\r\n\r\nconst ChatList = () => {\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    dispatch(fetchChats());\r\n  }, [dispatch]);\r\n\r\n  const filterChats = (chats, chatSearch) => {\r\n    if (chats)\r\n      return chats.filter((t) =>\r\n        t.name.toLocaleLowerCase().includes(chatSearch.toLocaleLowerCase()),\r\n      );\r\n    return chats;\r\n  };\r\n\r\n  const chats = useSelector((state) =>\r\n    filterChats(state.chatReducer.chats, state.chatReducer.chatSearch),\r\n  );\r\n  const active = useSelector((state) => state.chatReducer.chatContent);\r\n\r\n  return (\r\n    <Nav className=\"\">\r\n      {chats.map((chat) => (\r\n        <Chat\r\n          key={chat.id}\r\n          {...chat}\r\n          active={active}\r\n          onClick={() => dispatch(SelectChat(chat.id))}\r\n          thumb={chat.thumb}\r\n          status={chat.status}\r\n          contactName={chat.name}\r\n          chatExcerpt={chat.excerpt}\r\n        />\r\n      ))}\r\n    </Nav>\r\n  );\r\n};\r\n\r\nexport default ChatList;\r\n","import React from 'react';\r\nimport { Form, Input } from 'reactstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { SearchChat } from '../../../store/apps/chat/ChatSlice';\r\n\r\nconst ChatSearch = () => {\r\n  const searchTerm = useSelector((state) => state.chatReducer.chatSearch);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"p-3 border-bottom\">\r\n      <Form>\r\n        <Input\r\n          className=\"form-control mb-2\"\r\n          id=\"searchUser\"\r\n          name=\"searchUser\"\r\n          type=\"text\"\r\n          onChange={(e) => dispatch(SearchChat(e.target.value))}\r\n          value={searchTerm}\r\n          placeholder=\"Search Contact...\"\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChatSearch;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Button } from 'reactstrap';\r\nimport SimpleBar from 'simplebar-react';\r\n\r\nconst ChatContent = () => {\r\n  const chatDetails = useSelector(\r\n    (state) => state.chatReducer.chats[state.chatReducer.chatContent - 1],\r\n  );\r\n\r\n  return (\r\n    <>\r\n      {chatDetails ? (\r\n        <div>\r\n          <div className=\"d-flex align-items-center p-3 border-bottom\">\r\n            <Button close className=\"d-xs-block d-lg-none me-2\" />\r\n            <div className=\"\">\r\n              <img src={chatDetails.thumb} alt=\"user\" className=\"rounded-circle\" width=\"46\" />\r\n            </div>\r\n            <div className=\"mx-2\">\r\n              <h5 className=\"mb-0\">{chatDetails.name}</h5>\r\n              <small>{chatDetails.status}</small>\r\n            </div>\r\n          </div>\r\n\r\n          <SimpleBar style={{ height: 'calc(100vh - 360px)' }}>\r\n            <ul className=\"list-unstyled p-4\">\r\n              {Object.keys(chatDetails.chatHistory).map((chat) =>\r\n                Object.keys(chatDetails.chatHistory[chat]).map((key) =>\r\n                  Object.keys(chatDetails.chatHistory[chat][key]).map((k) =>\r\n                    k === 'from' ? (\r\n                      <li className=\"chat-item d-flex align-items-center\" key={k}>\r\n                        <div>\r\n                          <img\r\n                            src={chatDetails.thumb}\r\n                            alt={chatDetails.name}\r\n                            width=\"50\"\r\n                            className=\"rounded-circle\"\r\n                          />\r\n                        </div>\r\n                        <div className=\"px-3\">\r\n                          {chatDetails.chatHistory[chat][key][k].map((v) => (\r\n                            <div className=\"bg-light d-table p-2 mb-1\" key={v}>\r\n                              {v}\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </li>\r\n                    ) : (\r\n                      <li className=\"flex-row-reverse text-end d-flex my-1 ms-auto\" key={k}>\r\n                        <div>\r\n                          {chatDetails.chatHistory[chat][key][k].map((v) => (\r\n                            <div key={v} className=\"p-2 d-table ms-auto bg-light mb-1\">\r\n                              {v}\r\n                            </div>\r\n                          ))}\r\n                        </div>\r\n                      </li>\r\n                    ),\r\n                  ),\r\n                ),\r\n              )}\r\n            </ul>\r\n          </SimpleBar>\r\n        </div>\r\n      ) : (\r\n        <div>Select chat</div>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ChatContent;\r\n","import React, { useState } from 'react';\r\nimport { Form, Input, Button } from 'reactstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { sendMsg } from '../../../store/apps/chat/ChatSlice';\r\n\r\nconst ChatMsgForm = () => {\r\n  const [msg, setMsg] = useState('');\r\n  const dispatch = useDispatch();\r\n\r\n  const handleChatMsgChange = (e) => {\r\n    setMsg(e.target.value);\r\n  };\r\n  const id = useSelector((state) => state.chatReducer.chatContent);\r\n\r\n  const onChatMsgSubmit = (e) => {\r\n    e.preventDefault();\r\n    e.stopPropagation();\r\n    dispatch(sendMsg(id, msg));\r\n    setMsg('');\r\n  };\r\n\r\n  return (\r\n    <Form onSubmit={onChatMsgSubmit.bind()} className=\"card-body border-top\">\r\n      <div className=\"d-flex\">\r\n        <Input\r\n          type=\"text\"\r\n          className=\"form-control me-2\"\r\n          placeholder=\"Type your message\"\r\n          onChange={handleChatMsgChange.bind(null)}\r\n          value={msg}\r\n          required\r\n        />\r\n        <Button\r\n          onClick={() => {\r\n            dispatch(sendMsg(id, msg));\r\n            setMsg('');\r\n          }}\r\n          color=\"primary\"\r\n          disabled={!msg}\r\n        >\r\n          <i className=\"bi bi-send\" />\r\n        </Button>\r\n      </div>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default ChatMsgForm;\r\n","import { Card, CardBody } from 'reactstrap';\r\nimport ChatList from '../../../components/apps/chat/ChatList';\r\nimport ChatSearch from '../../../components/apps/chat/ChatSearch';\r\nimport ChatContent from '../../../components/apps/chat/ChatContent';\r\nimport ChatMsgForm from '../../../components/apps/chat/ChatMsgForm';\r\nimport TwoColumn from '../../../components/twoColumn/TwoColumn';\r\n\r\nconst Chat = () => {\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <TwoColumn\r\n          leftContent={\r\n            <>\r\n              <ChatSearch />\r\n              <ChatList />\r\n            </>\r\n          }\r\n          rightContent={\r\n            <>\r\n              <ChatContent />\r\n              <ChatMsgForm />\r\n            </>\r\n          }\r\n        />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Chat;\r\n"],"names":["_ref","leftContent","rightContent","isOpen","setIsOpen","React","_jsxs","className","children","concat","_jsx","Button","color","onClick","handleSubmit","SimpleBar","style","height","contactName","active","id","thumb","status","NavItem","src","alt","width","ChatList","dispatch","useDispatch","useEffect","fetchChats","chats","useSelector","state","filterChats","chatSearch","filter","t","name","toLocaleLowerCase","includes","chatReducer","chatContent","Nav","map","chat","Chat","_objectSpread","SelectChat","chatExcerpt","excerpt","ChatSearch","searchTerm","Form","Input","type","onChange","e","SearchChat","target","value","placeholder","ChatContent","chatDetails","_Fragment","close","Object","keys","chatHistory","key","k","v","ChatMsgForm","msg","setMsg","useState","onSubmit","preventDefault","stopPropagation","sendMsg","bind","required","disabled","Card","CardBody","TwoColumn"],"sourceRoot":""}