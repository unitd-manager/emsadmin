{"version":3,"sources":["views/cubosale/AddProjects.js","layouts/breadcrumbs/BreadCrumbs.js","components/CreationModification.js","components/ComponentCard.js"],"names":["AddProjects","useState","projectname","setProjectName","md","title","htmlFor","type","name","id","onInput","e","target","value","onClick","api","post","then","res","data","status","alert","Swal","fire","text","icon","window","location","reload","catch","err","console","log","color","BreadCrumbs","prop","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","CreationModification","details","modification_date","creation_date","ComponentCard","children","subtitle","creationModificationDate"],"mappings":"uMAgFeA,UA/DK,WAEhB,MAAsCC,mBAAS,IAA/C,mBAAOC,EAAP,KAAoBC,EAApB,KAkCF,OACE,gCACE,cAAC,IAAD,IACA,cAAC,KAAD,UACE,cAAC,IAAD,CAAKC,GAAG,KAAR,SACE,cAAC,UAAD,CAAeC,MAAM,eAArB,SACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,QAAQ,iBAAf,0BACA,cAAC,IAAD,CACEC,KAAK,QACLC,KAAK,QACLC,GAAG,iBACHC,QAAS,SAAAC,GAAC,OAAIR,EAAeQ,EAAEC,OAAOC,aAK1C,cAAC,IAAD,CAAQC,QAAS,WAlDN,KAAhBZ,EACDa,IACCC,KAAK,kBAAkB,CACtBX,MAAMH,IAEPe,MAAK,SAACC,GAEFA,GAA2B,QAApBA,EAAIC,KAAKC,OACjBC,MAAM,wBAENC,IAAKC,KAAK,CACRlB,MAAO,UACPmB,KAAM,iBACNC,KAAM,YAEPC,OAAOC,SAASC,aAKpBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAGdR,IAAKC,KAAK,CACRlB,MAAO,QACPmB,KAAM,4BACNC,KAAM,aAuBmCQ,MAAM,UAA3C,kC,iCCvEd,mCAwBeC,IApBK,SAACC,GACnB,IAAMR,EAAWS,cACXC,EAAWV,EAASW,SAASC,MAAM,KAAK,GACxCC,EAAYb,EAASW,SAASC,MAAM,KAAK,GAE/C,OACE,qCAEE,6BAAKJ,EAAKM,UACV,eAAC,IAAD,WACE,cAAC,IAAD,CAAgBC,GAAG,IAAIC,IAAKC,IAAMC,UAAU,uBAA5C,kBAGCR,EAAW,cAAC,IAAD,CAAgBS,QAAM,EAAtB,SAAwBT,IAA6B,GAChEG,EAAY,cAAC,IAAD,CAAgBM,QAAM,EAAtB,SAAwBN,IAA8B,W,kECd5D,SAASO,EAAT,GAA0D,IAAD,IAAzBC,eAAyB,MAAf,KAAe,EAAT3C,EAAS,EAATA,MAK7D,OACE,mCACE,cAAC,IAAD,CAAWsC,IAAI,KAAKE,UAAU,+BAA9B,SACE,eAAC,KAAD,WACE,cAAC,IAAD,UAAMxC,IACL2C,GACC,eAAC,IAAD,WACE,cAAC,KAAD,UACE,wDAA2BA,GAAWA,EAAQC,uBAEhD,cAAC,KAAD,CAAKJ,UAAU,SAAf,SACE,oDAAuBG,GAAWA,EAAQE,6BCO3CC,UAvBO,SAAC,GAA4D,IAA1DC,EAAyD,EAAzDA,SAAU/C,EAA+C,EAA/CA,MAAOgD,EAAwC,EAAxCA,SAASC,EAA+B,EAA/BA,yBACjD,OACE,eAAC,IAAD,CAAMT,UAAU,cAAhB,UACE,cAACE,EAAD,CAAsBC,QAASM,EAA0BjD,MAAOA,IAKhE,eAAC,IAAD,CAAUwC,UAAU,MAApB,UACE,cAAC,IAAD,CAAcA,UAAU,kBAAxB,SAA2CQ,GAAY,KACvD,8BAAMD","file":"static/js/122.2f695b9d.chunk.js","sourcesContent":["import React,{useState} from 'react';\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Button,\r\n} from 'reactstrap';\r\nimport Swal from 'sweetalert2'\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport ComponentCard from '../../components/ComponentCard';\r\nimport api from '../../constants/api';\r\n\r\n\r\nconst AddProjects = () => {\r\n\r\n    const [projectname, setProjectName] = useState('')\r\n    const addProject = () =>{\r\n      if(projectname !== ''){\r\n        api\r\n        .post('/api/addProject',{\r\n          title:projectname\r\n        })\r\n        .then((res) => {\r\n          \r\n          if(res && res.data.status === '400'){\r\n            alert('Cannot add project.')\r\n          }else{\r\n            Swal.fire({\r\n              title: 'Success',\r\n              text: 'Project Added!',\r\n              icon: 'success'\r\n            })\r\n             window.location.reload()\r\n          }\r\n          //navigate('/dashboards/classic');\r\n          // setLoginData(res.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n      }else{\r\n        Swal.fire({\r\n          title: 'Error',\r\n          text: 'Project name is required!',\r\n          icon: 'warning'\r\n        })\r\n      }\r\n     \r\n    }\r\n  return (\r\n    <div>\r\n      <BreadCrumbs />\r\n      <Row>\r\n        <Col md=\"12\">\r\n          <ComponentCard title=\"Add Projects\">\r\n            <Form>\r\n              <FormGroup>\r\n                <Label htmlFor=\"exampleEmail12\">Project Name</Label>\r\n                <Input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  id=\"exampleEmail12\"\r\n                  onInput={e => setProjectName(e.target.value)}\r\n                />\r\n                \r\n              </FormGroup>\r\n             \r\n              <Button onClick={()=>{addProject()}} color=\"primary\">Submit</Button>\r\n            </Form>\r\n          </ComponentCard>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddProjects;\r\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n","import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n                <small>Modification Date: {details && details.modification_date}</small>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n                <small>Creation Date: {details && details.creation_date}</small>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n  );\r\n}\r\n","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      {/* <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n        <p tag='h2' className=\"float-end small fs-5\">{righttitle}</p>\r\n      </CardTitle> */}\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate:PropTypes.any\r\n};\r\n\r\nexport default ComponentCard;\r\n"],"sourceRoot":""}