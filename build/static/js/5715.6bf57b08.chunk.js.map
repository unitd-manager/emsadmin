{"version":3,"file":"static/js/5715.6bf57b08.chunk.js","mappings":"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","sources":["components/dashboard/extraDashboard/Blog.js","components/dashboard/extraDashboard/ProjectTable.js","components/dashboard/extraDashboard/SalesChart.js","components/dashboard/extraDashboard/Feeds.js","components/dashboard/extraDashboard/TopCards.js","views/dashboards/Extra.js"],"sourcesContent":["import { Card, CardBody, CardImg, CardText, CardTitle, Button } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\n\r\nconst Blog = ({ image, title, occupation, age, email, phone, color,empId,dateOfBirth }) => {\r\n  return (\r\n    <Card>\r\n      <CardImg alt=\"Card image cap\" src={image} width=\"50\" />\r\n      <CardBody className=\"p-4\">\r\n        <CardTitle tag=\"h5\"><Link to={`/EmployeeDetailsData/${empId}`}>Name: {title}</Link></CardTitle>\r\n        <CardText>{dateOfBirth}</CardText>\r\n        <CardText>{occupation}</CardText>\r\n        <CardText>{age}</CardText>\r\n        <CardText>{email}</CardText>\r\n        <CardText>{phone}</CardText>\r\n        <Button color={color} block>Read More</Button>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nBlog.propTypes = {\r\n  image: PropTypes.string,\r\n  title: PropTypes.string,\r\n  occupation: PropTypes.string,\r\n  age: PropTypes.string,\r\n  email: PropTypes.string,\r\n  phone: PropTypes.string,\r\n  color: PropTypes.string,\r\n  empId:PropTypes.any,\r\n  dateOfBirth : PropTypes.string,\r\n};\r\n\r\nexport default Blog;\r\n","import { Card, CardBody, CardTitle, CardSubtitle, Table } from 'reactstrap';\r\nimport user1 from '../../../assets/images/users/user1.jpg';\r\nimport user2 from '../../../assets/images/users/user2.jpg';\r\nimport user3 from '../../../assets/images/users/user3.jpg';\r\nimport user4 from '../../../assets/images/users/user4.jpg';\r\nimport user5 from '../../../assets/images/users/user5.jpg';\r\n\r\nconst tableData = [\r\n  {\r\n    avatar: user1,\r\n    name: 'Hanna Gover',\r\n    email: 'hgover@gmail.com',\r\n    project: 'Flexy React',\r\n    status: 'pending',\r\n    weeks: '35',\r\n    budget: '95K',\r\n  },\r\n  {\r\n    avatar: user2,\r\n    name: 'Jonathan Gover',\r\n    email: 'hgover@gmail.com',\r\n    project: 'Lading pro React',\r\n    status: 'done',\r\n    weeks: '35',\r\n    budget: '95K',\r\n  },\r\n  {\r\n    avatar: user3,\r\n    name: 'Steave',\r\n    email: 'hgover@gmail.com',\r\n    project: 'Elite React',\r\n    status: 'holt',\r\n    weeks: '35',\r\n    budget: '95K',\r\n  },\r\n  {\r\n    avatar: user4,\r\n    name: 'Mukesh chava',\r\n    email: 'hgover@gmail.com',\r\n    project: 'Flexy React',\r\n    status: 'pending',\r\n    weeks: '35',\r\n    budget: '95K',\r\n  },\r\n  {\r\n    avatar: user5,\r\n    name: 'Thuklk luu',\r\n    email: 'hgover@gmail.com',\r\n    project: 'Ample React',\r\n    status: 'done',\r\n    weeks: '35',\r\n    budget: '95K',\r\n  },\r\n];\r\n\r\nconst ProjectTables = () => {\r\n  return (\r\n    <div>\r\n      <Card>\r\n        <CardBody>\r\n          <CardTitle tag=\"h5\">Project Listing</CardTitle>\r\n          <CardSubtitle className=\"mb-2 text-muted\" tag=\"h6\">\r\n            Overview of the projects\r\n          </CardSubtitle>\r\n\r\n          <Table className=\"no-wrap mt-3 align-middle\" responsive borderless>\r\n            <thead>\r\n              <tr>\r\n                <th>Team Lead</th>\r\n                <th>Project</th>\r\n\r\n                <th>Status</th>\r\n                <th>Weeks</th>\r\n                <th>Budget</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {tableData.map((tdata) => (\r\n                <tr key={tdata.name} className=\"border-top\">\r\n                  <td>\r\n                    <div className=\"d-flex align-items-center p-2\">\r\n                      <img\r\n                        src={tdata.avatar}\r\n                        className=\"rounded-circle\"\r\n                        alt=\"avatar\"\r\n                        width=\"45\"\r\n                        height=\"45\"\r\n                      />\r\n                      <div className=\"ms-3\">\r\n                        <h6 className=\"mb-0\">{tdata.name}</h6>\r\n                        <span className=\"text-muted\">{tdata.email}</span>\r\n                      </div>\r\n                    </div>\r\n                  </td>\r\n                  <td>{tdata.project}</td>\r\n                  <td>\r\n                    {tdata.status === 'pending' ? (\r\n                      <span className=\"p-2 bg-danger rounded-circle d-inline-block ms-3\" />\r\n                    ) : tdata.status === 'holt' ? (\r\n                      <span className=\"p-2 bg-warning rounded-circle d-inline-block ms-3\" />\r\n                    ) : (\r\n                      <span className=\"p-2 bg-success rounded-circle d-inline-block ms-3\" />\r\n                    )}\r\n                  </td>\r\n                  <td>{tdata.weeks}</td>\r\n                  <td>{tdata.budget}</td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </Table>\r\n        </CardBody>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProjectTables;\r\n","import { Card, CardBody, CardSubtitle, CardTitle } from \"reactstrap\";\r\nimport Chart from \"react-apexcharts\";\r\n\r\nconst SalesChart = () => {\r\n  const chartoptions = {\r\n    series: [\r\n      {\r\n        name: \"Iphone 13\",\r\n        data: [0, 31, 40, 28, 51, 42, 109, 100],\r\n      },\r\n      {\r\n        name: \"Oneplue 9\",\r\n        data: [0, 11, 32, 45, 32, 34, 52, 41],\r\n      },\r\n    ],\r\n    options: {\r\n      chart: {\r\n        type: \"area\",\r\n        fontFamily: '\"Nunito\", sans-serif',\r\n      },\r\n      dataLabels: {\r\n        enabled: false,\r\n      },\r\n      grid: {\r\n        strokeDashArray: 3,\r\n      },\r\n\r\n      stroke: {\r\n        curve: \"smooth\",\r\n        width: 1,\r\n      },\r\n      xaxis: {\r\n        categories: [\r\n          \"Jan\",\r\n          \"Feb\",\r\n          \"March\",\r\n          \"April\",\r\n          \"May\",\r\n          \"June\",\r\n          \"July\",\r\n          \"Aug\",\r\n        ],\r\n      },\r\n      tooltip: {\r\n          theme: \"dark\"\r\n      }\r\n    },\r\n  };\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <CardTitle tag=\"h5\">Sales Summary</CardTitle>\r\n        <CardSubtitle className=\"text-muted\" tag=\"h6\">\r\n          Yearly Sales Report\r\n        </CardSubtitle>\r\n        <Chart\r\n          type=\"area\"\r\n          width=\"100%\"\r\n          height=\"390\"\r\n          options={chartoptions.options}\r\n          series={chartoptions.series}\r\n        ></Chart>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default SalesChart;\r\n","import React from 'react';\r\nimport {\r\n  Card,\r\n  CardBody,\r\n  CardTitle,\r\n  ListGroup,\r\n  CardSubtitle,\r\n  ListGroupItem,\r\n  Button,\r\n} from 'reactstrap';\r\n\r\nconst FeedData = [\r\n  {\r\n    title: 'Cras justo odio',\r\n    icon: 'bi bi-bell',\r\n    color: 'primary',\r\n    date: '6 minute ago',\r\n    id: 1,\r\n  },\r\n  {\r\n    title: 'New user registered.',\r\n    icon: 'bi bi-person',\r\n    color: 'info',\r\n    date: '6 minute ago',\r\n    id: 2,\r\n  },\r\n  {\r\n    title: 'Server #1 overloaded.',\r\n    icon: 'bi bi-hdd',\r\n    color: 'danger',\r\n    date: '6 minute ago',\r\n    id: 3,\r\n  },\r\n  {\r\n    title: 'New order received.',\r\n    icon: 'bi bi-bag-check',\r\n    color: 'success',\r\n    date: '6 minute ago',\r\n    id: 4,\r\n  },\r\n  {\r\n    title: 'Cras justo odio',\r\n    icon: 'bi bi-bell',\r\n    color: 'dark',\r\n    date: '6 minute ago',\r\n    id: 5,\r\n  },\r\n  {\r\n    title: 'Server #1 overloaded.',\r\n    icon: 'bi bi-hdd',\r\n    color: 'warning',\r\n    date: '6 minute ago',\r\n    id: 6,\r\n  },\r\n];\r\n\r\nconst Feeds = () => {\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <CardTitle tag=\"h4\">Feeds</CardTitle>\r\n        <CardSubtitle className=\"text-muted\">\r\n          Widget you can use\r\n        </CardSubtitle>\r\n      </CardBody>\r\n      <ListGroup flush>\r\n        {FeedData.map((feed) => (\r\n          <ListGroupItem\r\n            key={feed.id}\r\n            action\r\n            href=\"/\"\r\n            tag=\"a\"\r\n            className=\"d-flex align-items-center py-3 border-0\"\r\n          >\r\n            <Button className=\"rounded-circle me-3\" size=\"sm\" color={feed.color}>\r\n              <i className={feed.icon} />\r\n            </Button>\r\n            {feed.title}\r\n            <small className=\"ms-auto text-muted text-small\">{feed.date}</small>\r\n          </ListGroupItem>\r\n        ))}\r\n      </ListGroup>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Feeds;\r\n","import { Card, CardBody } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst TopCards = ({ bg, icon, earning, subtitle }) => {\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <div className=\"d-flex\">\r\n          <div className={`circle-box lg-box d-inline-block ${bg}`}>\r\n            <i className={icon}></i>\r\n          </div>\r\n          <div className=\"ms-3\">\r\n            <h3 className=\"mb-0 font-weight-bold\">{earning}</h3>\r\n            <small className=\"text-muted\">{subtitle}</small>\r\n          </div>\r\n        </div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nTopCards.propTypes = {\r\n  bg: PropTypes.string,\r\n  icon: PropTypes.string,\r\n  earning: PropTypes.string,\r\n  subtitle: PropTypes.string,\r\n};\r\n\r\nexport default TopCards;\r\n","import { Col, Row } from 'reactstrap';\r\nimport SalesChart from '../../components/dashboard/extraDashboard/SalesChart';\r\nimport Feeds from '../../components/dashboard/extraDashboard/Feeds';\r\nimport ProjectTables from '../../components/dashboard/extraDashboard/ProjectTable';\r\nimport TopCards from '../../components/dashboard/extraDashboard/TopCards';\r\nimport Blog from '../../components/dashboard/extraDashboard/Blog';\r\nimport bg1 from '../../assets/images/bg/bg1.jpg';\r\nimport bg2 from '../../assets/images/bg/bg2.jpg';\r\nimport bg3 from '../../assets/images/bg/bg3.jpg';\r\nimport bg4 from '../../assets/images/bg/bg4.jpg';\r\n\r\nconst BlogData = [\r\n  {\r\n    image: bg1,\r\n    title: 'This is simple blog',\r\n    subtitle: '2 comments, 1 Like',\r\n    description:\r\n      'This is a wider card with supporting text below as a natural lead-in to additional content.',\r\n    btnbg: 'primary',\r\n  },\r\n  {\r\n    image: bg2,\r\n    title: 'Lets be simple blog',\r\n    subtitle: '2 comments, 1 Like',\r\n    description:\r\n      'This is a wider card with supporting text below as a natural lead-in to additional content.',\r\n    btnbg: 'primary',\r\n  },\r\n  {\r\n    image: bg3,\r\n    title: \"Don't Lamp blog\",\r\n    subtitle: '2 comments, 1 Like',\r\n    description:\r\n      'This is a wider card with supporting text below as a natural lead-in to additional content.',\r\n    btnbg: 'primary',\r\n  },\r\n  {\r\n    image: bg4,\r\n    title: 'Simple is beautiful',\r\n    subtitle: '2 comments, 1 Like',\r\n    description:\r\n      'This is a wider card with supporting text below as a natural lead-in to additional content.',\r\n    btnbg: 'primary',\r\n  },\r\n];\r\n\r\nconst Extra = () => {\r\n  return (\r\n    <div>\r\n      {/***Top Cards***/}\r\n      <Row>\r\n        <Col sm=\"6\" lg=\"3\">\r\n          <TopCards\r\n            bg=\"bg-light-success text-success\"\r\n            title=\"Profit\"\r\n            subtitle=\"Yearly Earning\"\r\n            earning=\"$21k\"\r\n            icon=\"bi bi-wallet\"\r\n          />\r\n        </Col>\r\n        <Col sm=\"6\" lg=\"3\">\r\n          <TopCards\r\n            bg=\"bg-light-danger text-danger\"\r\n            title=\"Refunds\"\r\n            subtitle=\"Refund given\"\r\n            earning=\"$1k\"\r\n            icon=\"bi bi-coin\"\r\n          />\r\n        </Col>\r\n        <Col sm=\"6\" lg=\"3\">\r\n          <TopCards\r\n            bg=\"bg-light-warning text-warning\"\r\n            title=\"New Project\"\r\n            subtitle=\"Yearly Project\"\r\n            earning=\"456\"\r\n            icon=\"bi bi-basket3\"\r\n          />\r\n        </Col>\r\n        <Col sm=\"6\" lg=\"3\">\r\n          <TopCards\r\n            bg=\"bg-light-info text-into\"\r\n            title=\"Sales\"\r\n            subtitle=\"Weekly Sales\"\r\n            earning=\"210\"\r\n            icon=\"bi bi-bag\"\r\n          />\r\n        </Col>\r\n      </Row>\r\n      {/***Sales & Feed***/}\r\n      <Row>\r\n        <Col sm=\"6\" lg=\"6\" xl=\"7\" xxl=\"8\">\r\n          <SalesChart />\r\n        </Col>\r\n        <Col sm=\"6\" lg=\"6\" xl=\"5\" xxl=\"4\">\r\n          <Feeds />\r\n        </Col>\r\n      </Row>\r\n      {/***Table ***/}\r\n      <Row>\r\n        <Col lg=\"12\">\r\n          <ProjectTables />\r\n        </Col>\r\n      </Row>\r\n      {/***Blog Cards***/}\r\n      <Row>\r\n        {BlogData.map((blg) => (\r\n          <Col sm=\"6\" lg=\"6\" xl=\"3\" key={blg.title}>\r\n            <Blog\r\n              image={blg.image}\r\n              title={blg.title}\r\n              subtitle={blg.subtitle}\r\n              text={blg.description}\r\n              color={blg.btnbg}\r\n            />\r\n          </Col>\r\n        ))}\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Extra;\r\n"],"names":["_ref","image","title","occupation","age","email","phone","color","empId","dateOfBirth","_jsxs","Card","children","_jsx","CardImg","alt","src","width","CardBody","className","CardTitle","tag","Link","to","concat","CardText","Button","block","tableData","avatar","user1","name","project","status","weeks","budget","user2","user3","user4","user5","ProjectTables","CardSubtitle","Table","responsive","borderless","map","tdata","height","SalesChart","chartoptions","series","data","options","chart","type","fontFamily","dataLabels","enabled","grid","strokeDashArray","stroke","curve","xaxis","categories","tooltip","theme","Chart","FeedData","icon","date","id","Feeds","ListGroup","flush","feed","ListGroupItem","action","href","size","bg","earning","subtitle","BlogData","description","btnbg","Extra","Row","Col","sm","lg","TopCards","xl","xxl","blg","Blog","text"],"sourceRoot":""}