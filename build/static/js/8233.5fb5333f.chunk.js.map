{"version":3,"file":"static/js/8233.5fb5333f.chunk.js","mappings":"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","sources":["components/threeColumn/ThreeColumn.js","components/apps/email/EmailListItem.js","components/apps/email/EmailList.js","components/apps/email/EmailCompose.js","components/apps/email/EmailFilter.js","components/apps/email/EmailSearch.js","components/apps/email/EmailDetails.js","views/apps/email/Email.js"],"sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Button } from 'reactstrap';\r\nimport SimpleBar from 'simplebar-react';\r\nimport { ToggleInnerRightPart } from '../../store/customizer/CustomizerSlice';\r\n\r\nconst ThreeColumn = ({ leftContent, middleContent, rightContent }) => {\r\n  const [isOpen, setIsOpen] = React.useState(false);\r\n  const dispatch = useDispatch();\r\n  const handleSubmit = () => {\r\n    setIsOpen(!isOpen);\r\n  };\r\n  const isRightOpen = useSelector((state) => state.customizer.isInnerRightPart);\r\n\r\n  return (\r\n    <div className=\"d-lg-flex d-md-block border position-relative leftRightBox threeColumn\">\r\n      <div className={`leftPart bg-white border-end ${isOpen ? 'showLeftPart' : ''}`}>\r\n        <Button className=\"d-xl-none openCloseBtn\" color=\"danger\">\r\n          <i className={`bi ${isOpen ? 'bi-x' : 'bi-list'}`} onClick={handleSubmit} />\r\n        </Button>\r\n        <SimpleBar style={{ height: 'calc(100vh - 200px)' }}>{leftContent}</SimpleBar>\r\n      </div>\r\n      <div className=\"middlePart flex-shrink-0\">\r\n        <SimpleBar style={{ height: 'calc(100vh - 200px)' }}>{middleContent}</SimpleBar>\r\n      </div>\r\n      <div className={`rightPart bg-white ${isRightOpen ? 'showRightPart' : ''}`}>\r\n        <Button\r\n          close\r\n          onClick={() => dispatch(ToggleInnerRightPart())}\r\n          className=\"position-absolute closeRbtn d-lg-none\"\r\n        />\r\n        <SimpleBar style={{ height: 'calc(100vh - 200px)' }}>{rightContent}</SimpleBar>\r\n        {isOpen ? <div className=\"contentOverlay\" /> : ''}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nThreeColumn.propTypes = {\r\n  leftContent: PropTypes.node,\r\n  middleContent: PropTypes.node,\r\n  rightContent: PropTypes.node,\r\n};\r\n\r\nexport default ThreeColumn;\r\n","import React from 'react';\r\nimport { NavItem, Input, Badge } from 'reactstrap';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { ToggleInnerRightPart } from '../../../store/customizer/CustomizerSlice';\r\n\r\nconst EmailListItem = ({\r\n  id,\r\n  from,\r\n  subject,\r\n  label,\r\n  onStar,\r\n  starred,\r\n  important,\r\n  onImportant,\r\n  time,\r\n  active,\r\n  checked,\r\n  trash,\r\n  onEmailClick,\r\n  onDelete,\r\n  handlechecked,\r\n}) => {\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <NavItem\r\n      onClick={onEmailClick}\r\n      className={`w-100 cursor-pointer p-3 border-bottom ${active === id ? 'bg-light' : ''}`}\r\n    >\r\n      <div className=\"d-flex mb-1 gap-2\" onClick={() => dispatch(ToggleInnerRightPart())}>\r\n        <div>\r\n          <Input\r\n            type=\"checkbox\"\r\n            id={`check${id}`}\r\n            onChange={handlechecked}\r\n            className=\"custom-control-input\"\r\n          />\r\n        </div>\r\n        <div className=\"col-11\">\r\n          <h5 className=\"mb-0\">{from}</h5>\r\n          <span className=\"text-truncate text-muted w-100 d-block\">{subject}</span>\r\n        </div>\r\n      </div>\r\n      <div className=\"d-flex mt-2 align-items-center gap-2 ms-3 ps-2\">\r\n        <Badge\r\n          color={\r\n            (label === 'Promotional' ? 'warning' : '') +\r\n            (label === 'Social' ? 'success' : '') +\r\n            (label === 'Health' ? 'danger' : '')\r\n          }\r\n        >\r\n          {label}\r\n        </Badge>\r\n        <i\r\n          className={`bi ${starred ? 'bi-star-fill' : 'bi-star'} ${starred ? 'text-warning' : ''}`}\r\n          onClick={onStar}\r\n        />\r\n        <i\r\n          className={`bi ${important ? 'bi-bookmark-fill' : 'bi-bookmark'} ${\r\n            important ? 'text-warning' : ''\r\n          }`}\r\n          onClick={onImportant}\r\n        />\r\n        {checked && !trash ? <i className=\"bi-trash\" onClick={onDelete} /> : ''}\r\n        <div className=\"ms-auto\">\r\n          <small className=\"text-muted font-12\">{time}</small>\r\n        </div>\r\n      </div>\r\n    </NavItem>\r\n  );\r\n};\r\n\r\nEmailListItem.propTypes = {\r\n  id: PropTypes.number,\r\n  from: PropTypes.string,\r\n  subject: PropTypes.string,\r\n  label: PropTypes.string,\r\n  onStar: PropTypes.func,\r\n  starred: PropTypes.bool,\r\n  important: PropTypes.bool,\r\n  onImportant: PropTypes.func,\r\n  time: PropTypes.string,\r\n  active: PropTypes.any,\r\n  checked: PropTypes.any,\r\n  onDelete: PropTypes.func,\r\n  trash: PropTypes.bool,\r\n  handlechecked: PropTypes.func,\r\n  onEmailClick: PropTypes.func,\r\n};\r\n\r\nexport default EmailListItem;\r\n","import React, { useEffect } from 'react';\r\nimport { Nav } from 'reactstrap';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport EmailListItem from './EmailListItem';\r\nimport {\r\n  fetchEmails,\r\n  SelectEmail,\r\n  starEmail,\r\n  importantEmail,\r\n  deleteEmail,\r\n  checkEmail,\r\n} from '../../../store/apps/email/EmailSlice';\r\n\r\nconst EmailList = () => {\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(fetchEmails());\r\n  }, [dispatch]);\r\n  const getVisibleEmail = (emails, filter, emailSearch) => {\r\n    switch (filter) {\r\n      case 'inbox':\r\n        return emails.filter(\r\n          (c) => c.inbox && !c.trash && c.from.toLocaleLowerCase().includes(emailSearch),\r\n        );\r\n\r\n      case 'sent':\r\n        return emails.filter(\r\n          (c) => c.sent && !c.trash && c.from.toLocaleLowerCase().includes(emailSearch),\r\n        );\r\n\r\n      case 'draft':\r\n        return emails.filter(\r\n          (c) => !c.trash && c.draft && c.from.toLocaleLowerCase().includes(emailSearch),\r\n        );\r\n\r\n      case 'spam':\r\n        return emails.filter(\r\n          (c) => !c.trash && c.spam && c.from.toLocaleLowerCase().includes(emailSearch),\r\n        );\r\n\r\n      case 'trash':\r\n        return emails.filter((c) => c.trash && c.from.toLocaleLowerCase().includes(emailSearch));\r\n\r\n      case 'starred':\r\n        return emails.filter(\r\n          (c) => !c.trash && c.starred && c.from.toLocaleLowerCase().includes(emailSearch),\r\n        );\r\n\r\n      case 'important':\r\n        return emails.filter(\r\n          (c) => !c.trash && c.important && c.from.toLocaleLowerCase().includes(emailSearch),\r\n        );\r\n\r\n      case 'Social':\r\n        return emails.filter(\r\n          (c) =>\r\n            !c.trash && c.label === 'Social' && c.from.toLocaleLowerCase().includes(emailSearch),\r\n        );\r\n      case 'Health':\r\n        return emails.filter(\r\n          (c) =>\r\n            !c.trash && c.label === 'Health' && c.from.toLocaleLowerCase().includes(emailSearch),\r\n        );\r\n      case 'Promotional':\r\n        return emails.filter(\r\n          (c) =>\r\n            !c.trash &&\r\n            c.label === 'Promotional' &&\r\n            c.from.toLocaleLowerCase().includes(emailSearch),\r\n        );\r\n\r\n      default:\r\n        throw new Error(`Unknown filter: ${filter}`);\r\n    }\r\n  };\r\n  const emails = useSelector((state) =>\r\n    getVisibleEmail(\r\n      state.emailReducer.emails,\r\n      state.emailReducer.currentFilter,\r\n      state.emailReducer.emailSearch,\r\n    ),\r\n  );\r\n  const active = useSelector((state) => state.emailReducer.emailContent);\r\n  return (\r\n    <>\r\n      <Nav>\r\n        {emails.map((email) => (\r\n          <EmailListItem\r\n            key={email.id}\r\n            active={active}\r\n            {...email}\r\n            handlechecked={() => dispatch(checkEmail(email.id))}\r\n            onDelete={() => dispatch(deleteEmail(email.id))}\r\n            onEmailClick={() => dispatch(SelectEmail(email.id))}\r\n            onStar={() => dispatch(starEmail(email.id))}\r\n            onImportant={() => dispatch(importantEmail(email.id))}\r\n          />\r\n        ))}\r\n      </Nav>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmailList;\r\n","import React, { useState } from 'react';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n} from 'reactstrap';\r\n\r\nconst EmailCompose = () => {\r\n  const [composeModal, setComposeModal] = useState(false);\r\n\r\n  const toggle = () => {\r\n    setComposeModal(!composeModal);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Button color=\"danger\" onClick={toggle} block>\r\n        Compose\r\n      </Button>\r\n      <Modal isOpen={composeModal} size=\"lg\">\r\n        <ModalHeader toggle={toggle}>Compose New Message</ModalHeader>\r\n        <ModalBody>\r\n          <Form>\r\n            <div className=\"form-body\">\r\n              <Row>\r\n                <Col md=\"6\" sm=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"to\">To</Label>\r\n                    <Input type=\"text\" id=\"to\" name=\"to\" />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col md=\"6\" sm=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"cc\">CC</Label>\r\n                    <Input type=\"text\" id=\"cc\" name=\"cc\" />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col sm=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"subject\">Subject</Label>\r\n                    <Input type=\"text\" id=\"subject\" name=\"subject\" />\r\n                  </FormGroup>\r\n                </Col>\r\n                <Col sm=\"12\">\r\n                  <FormGroup>\r\n                    <Label for=\"msg\">Email Message</Label>\r\n                    <Input type=\"textarea\" name=\"msg\" id=\"msg\" />\r\n                  </FormGroup>\r\n                </Col>\r\n              </Row>\r\n\r\n              <FormGroup>\r\n                <Label>Attachment</Label>\r\n                <Input type=\"file\" className=\"form-control-file\" id=\"projectinput8\" />\r\n              </FormGroup>\r\n            </div>\r\n          </Form>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button color=\"primary\" onClick={toggle}>\r\n            Send\r\n          </Button>{' '}\r\n          <Button color=\"secondary\" onClick={toggle}>\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmailCompose;\r\n","import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ListGroup, ListGroupItem } from 'reactstrap';\r\nimport { setVisibilityFilter } from '../../../store/apps/email/EmailSlice';\r\nimport EmailCompose from './EmailCompose';\r\n\r\nconst filterData = [\r\n  {\r\n    filterbyTitle: 'Filter By',\r\n  },\r\n  {\r\n    name: 'inbox',\r\n    icon: 'bi-inbox',\r\n  },\r\n  {\r\n    name: 'sent',\r\n    icon: 'bi-send',\r\n  },\r\n  {\r\n    name: 'draft',\r\n    icon: 'bi-archive',\r\n  },\r\n  {\r\n    name: 'spam',\r\n    icon: 'bi-exclamation-circle',\r\n  },\r\n  {\r\n    name: 'trash',\r\n    icon: 'bi-trash',\r\n  },\r\n  {\r\n    devider: true,\r\n  },\r\n  {\r\n    name: 'starred',\r\n    icon: 'bi-star',\r\n  },\r\n  {\r\n    name: 'important',\r\n    icon: 'bi-bookmark',\r\n  },\r\n  {\r\n    devider: true,\r\n    id: 1,\r\n  },\r\n  {\r\n    name: 'Promotional',\r\n    icon: 'bi-folder',\r\n  },\r\n  {\r\n    name: 'Social',\r\n    icon: 'bi-folder',\r\n  },\r\n  {\r\n    name: 'Health',\r\n    icon: 'bi-folder',\r\n  },\r\n];\r\n\r\nconst EmailFilter = () => {\r\n  const dispatch = useDispatch();\r\n  const active = useSelector((state) => state.emailReducer.currentFilter);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"p-3 border-bottom\">\r\n        <EmailCompose />\r\n      </div>\r\n      <ListGroup flush>\r\n        {filterData.map((filter) => {\r\n          if (filter.filterbyTitle) {\r\n            return (\r\n              <h6 className=\"px-3 pt-3\" key={filter.filterbyTitle}>\r\n                {filter.filterbyTitle}\r\n              </h6>\r\n            );\r\n          }\r\n          if (filter.devider) {\r\n            return <div className=\"border-bottom py-2 mb-2\" key={`${filter.id}`} />;\r\n          }\r\n          return (\r\n            <ListGroupItem\r\n              href=\"#\"\r\n              tag=\"a\"\r\n              key={filter.name}\r\n              className={\r\n                active === `${filter.name}`\r\n                  ? 'bg-light py-3 border-0 text-capitalize'\r\n                  : 'py-3 border-0 text-capitalize'\r\n              }\r\n              onClick={() => dispatch(setVisibilityFilter(`${filter.name}`))}\r\n            >\r\n              <i className={`bi ${filter.icon} mx-1`} /> {filter.name}\r\n            </ListGroupItem>\r\n          );\r\n        })}\r\n      </ListGroup>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmailFilter;\r\n","import React from 'react';\r\nimport { Form, Input, Button } from 'reactstrap';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { SearchEmail } from '../../../store/apps/email/EmailSlice';\r\n\r\nconst EmailSearch = () => {\r\n  const searchTerm = useSelector((state) => state.emailReducer.emailSearch);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  return (\r\n    <div className=\"p-3 border-bottom d-flex\">\r\n      <Button close className=\"d-xs-block d-xl-none me-2\" />\r\n      <Form className=\"flex-grow-1\">\r\n        <Input\r\n          className=\"form-control \"\r\n          id=\"searchEmail\"\r\n          name=\"searchEmail\"\r\n          type=\"text\"\r\n          onChange={(e) => dispatch(SearchEmail(e.target.value))}\r\n          value={searchTerm}\r\n          placeholder=\"Search Email...\"\r\n        />\r\n      </Form>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default EmailSearch;\r\n","import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Badge, Button } from 'reactstrap';\r\n\r\nconst EmailDetails = () => {\r\n  const emailDetail = useSelector(\r\n    (state) => state.emailReducer.emails[state.emailReducer.emailContent - 1],\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        {emailDetail ? (\r\n          <>\r\n            <div className=\"d-flex align-items-center p-3 border-bottom\">\r\n              <div className=\"\">\r\n                <img src={emailDetail.thumbnail} alt=\"user\" className=\"rounded-circle\" width=\"46\" />\r\n              </div>\r\n              <div className=\"mx-3\">\r\n                <h5 className=\"mb-0\">{emailDetail.from}</h5>\r\n                <Badge\r\n                  color={\r\n                    (emailDetail.label === 'Promotional' ? 'warning' : '') +\r\n                    (emailDetail.label === 'Social' ? 'success' : '') +\r\n                    (emailDetail.label === 'Health' ? 'danger' : '')\r\n                  }\r\n                >\r\n                  {emailDetail.label}\r\n                </Badge>\r\n                &nbsp;&nbsp;\r\n                <small>To: {emailDetail.To}</small>\r\n              </div>\r\n            </div>\r\n            <div className=\"p-4 border-bottom\">\r\n              <h5 className=\"mb-0 font-16 font-medium\">{emailDetail.subject}</h5>\r\n            </div>\r\n            <div\r\n              className=\"p-4 pb-3\"\r\n              dangerouslySetInnerHTML={{ __html: emailDetail.emailContent }}\r\n            />\r\n            <Button className=\"mx-4\" color=\"primary\" size=\"sm\" outline>\r\n              Reply\r\n            </Button>\r\n          </>\r\n        ) : (\r\n          'Please Select Email'\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default EmailDetails;\r\n","import { Card, CardBody } from 'reactstrap';\r\nimport ThreeColumn from '../../../components/threeColumn/ThreeColumn';\r\nimport EmailList from '../../../components/apps/email/EmailList';\r\nimport EmailFilter from '../../../components/apps/email/EmailFilter';\r\nimport EmailSearch from '../../../components/apps/email/EmailSearch';\r\nimport EmailDetails from '../../../components/apps/email/EmailDetails';\r\n\r\nconst Email = () => {\r\n  return (\r\n    <Card>\r\n      <CardBody>\r\n        <ThreeColumn\r\n          leftContent={<EmailFilter />}\r\n          middleContent={\r\n            <>\r\n              <EmailSearch />\r\n              <EmailList />\r\n            </>\r\n          }\r\n          rightContent={<EmailDetails />}\r\n        />\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Email;\r\n"],"names":["_ref","leftContent","middleContent","rightContent","isOpen","setIsOpen","React","dispatch","useDispatch","isRightOpen","useSelector","state","customizer","isInnerRightPart","_jsxs","className","children","concat","_jsx","Button","color","onClick","handleSubmit","SimpleBar","style","height","close","ToggleInnerRightPart","id","from","subject","label","onStar","starred","important","onImportant","time","active","checked","trash","onEmailClick","onDelete","handlechecked","NavItem","Input","type","onChange","Badge","EmailList","useEffect","fetchEmails","emails","getVisibleEmail","filter","emailSearch","c","inbox","toLocaleLowerCase","includes","sent","draft","spam","Error","emailReducer","currentFilter","emailContent","_Fragment","Nav","map","email","EmailListItem","_objectSpread","checkEmail","deleteEmail","SelectEmail","starEmail","importantEmail","EmailCompose","composeModal","setComposeModal","useState","toggle","block","Modal","size","ModalHeader","ModalBody","Form","Row","Col","md","sm","FormGroup","Label","for","name","ModalFooter","filterData","filterbyTitle","icon","devider","EmailFilter","ListGroup","flush","ListGroupItem","href","tag","setVisibilityFilter","EmailSearch","searchTerm","e","SearchEmail","target","value","placeholder","EmailDetails","emailDetail","src","thumbnail","alt","width","To","dangerouslySetInnerHTML","__html","outline","Email","Card","CardBody","ThreeColumn"],"sourceRoot":""}