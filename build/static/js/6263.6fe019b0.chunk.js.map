{"version":3,"file":"static/js/6263.6fe019b0.chunk.js","mappings":"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","sources":["constants/creationdatetime.js","components/CreationModification.js","components/ComponentCard.js","components/DeleteButton.js","components/ComponentCardV2.js","../node_modules/react-feather/dist/icons/trash-2.js","components/Message.js","layouts/breadcrumbs/BreadCrumbs.js","components/userGroup/UserGroupButtons.js","views/EditData/UserGroupEdit.js"],"sourcesContent":["import moment from \"moment\"\r\n\r\nconst creationdatetime = moment().format('DD-MM-YYYY h:mm:ss a')\r\nexport default creationdatetime \r\n","import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n                <small> Creation: {details && details.created_by} {details && details.creation_date}</small>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n                <small> Modified: {details && details.modified_by} {details && details.modification_date}</small>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n   );\r\n}","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      {/* <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n        <p tag='h2' className=\"float-end small fs-5\">{righttitle}</p>\r\n      </CardTitle> */}\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate:PropTypes.any\r\n};\r\n\r\nexport default ComponentCard;\r\n","import React from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport { Button } from 'reactstrap';\r\nimport Swal from 'sweetalert2';\r\nimport PropTypes from 'prop-types';\r\nimport * as Icon from 'react-feather';\r\nimport api from '../constants/api';\r\nimport message from './Message';\r\n\r\nconst DeleteButton = ({\r\n  id,\r\n  columnname,\r\n  tablename,\r\n  ifpiture = false,\r\n  ifAttachment = false,\r\n  pictureroom,\r\n  attachmentroom,\r\n}) => {\r\n  const navigate = useNavigate();\r\n  DeleteButton.propTypes = {\r\n    id: PropTypes.string,\r\n    columnname: PropTypes.string,\r\n    tablename: PropTypes.string,\r\n    ifpiture: PropTypes.bool,\r\n    ifAttachment: PropTypes.bool,\r\n    pictureroom: PropTypes.string,\r\n    attachmentroom: PropTypes.string,\r\n    //onSuccess:PropTypes.any\r\n  };\r\n  const deletePicture = (formalId, roomName) => {\r\n    api\r\n      .post('/file/deleteFileByRoomNameAndId', {\r\n        room_name: roomName,\r\n        record_id: formalId,\r\n      })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n         \r\n            message('Media and Records files deleted.', 'error');\r\n            navigate(-1);\r\n          \r\n        } else {\r\n          message('Unable to delete record.', 'error');\r\n        }\r\n      })\r\n      .catch(() => {\r\n        message('Network connection error.');\r\n      });\r\n  };\r\n  const deleteApi = () => {\r\n    api\r\n      .post('/commonApi/deleteRecord', {\r\n        idvalue: id,\r\n        columnname,\r\n        tablename,\r\n      })\r\n      .then((res) => {\r\n        if (res.status === 200) {\r\n          if (ifpiture) {\r\n            deletePicture(id, pictureroom);\r\n          } else {\r\n            /* eslint-disable */\r\n            if (ifAttachment) {\r\n              deletePicture(id, attachmentroom);\r\n            } else {\r\n              message('Record deleted successfully.');\r\n              navigate(-1);\r\n            }\r\n          }\r\n        } else {\r\n          message('Unable to delete record.', 'error');\r\n        }\r\n      })\r\n      .catch(() => {\r\n        message('Network connection error.');\r\n      });\r\n  };\r\n\r\n  const deleteRecord = () => {\r\n    Swal.fire({\r\n      title: `Are you sure?`,\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!',\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        deleteApi();\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Button\r\n      color=\"danger\"\r\n      onClick={() => {\r\n        deleteRecord();\r\n      }}\r\n    >\r\n      Delete <Icon.Trash2 size={20} />\r\n    </Button>\r\n  );\r\n};\r\n\r\nexport default DeleteButton;\r\n","import { Card, CardBody } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst pStyle = {\r\n  textAlign: 'right',\r\n  marginRight: '10px',\r\n};\r\nconst oStyle={\r\noutline:'none',\r\nborder:'none'\r\n};\r\n\r\nconst ComponentCardV2 = ({ children }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CardBody style={pStyle} >\r\n        <div className=\"btn btn-space text-nowrap shadow-none outline-none\" style={oStyle}>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCardV2.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default ComponentCardV2;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Trash2 = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"3 6 5 6 21 6\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M19 6v14a2 2 0 0 1-2 2H7a2 2 0 0 1-2-2V6m3 0V4a2 2 0 0 1 2-2h4a2 2 0 0 1 2 2v2\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"10\",\n    y1: \"11\",\n    x2: \"10\",\n    y2: \"17\"\n  }), /*#__PURE__*/React.createElement(\"line\", {\n    x1: \"14\",\n    y1: \"11\",\n    x2: \"14\",\n    y2: \"17\"\n  }));\n});\nTrash2.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nTrash2.displayName = 'Trash2';\nexport default Trash2;","import {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst message = (msg,type) => {\r\n    if(type === 'success'){\r\n       return toast.success(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n            });\r\n    } if(type === 'error'){\r\n        return toast.error(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n     } if(type === 'info'){\r\n        return toast.info(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n            }if(type === 'warning'){\r\n               return toast.warning(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"colored\",\r\n                    });\r\n                   }\r\n            return toast(msg);\r\n   \r\n  \r\n}\r\nexport default message\r\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n","import React from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport { Row, Col, Button, Form, FormGroup } from 'reactstrap';\r\nimport ComponentCardV2 from '../ComponentCardV2';\r\nimport DeleteButton from '../DeleteButton';\r\n\r\nfunction UserGroupButtons({\r\n  id,\r\n    applyChanges,\r\n    backToList,\r\n    editUserGroupData,\r\n    editRoomUserGroup,\r\n    navigate\r\n}) {\r\n\r\n  UserGroupButtons.propTypes = {\r\n        id: PropTypes.string,\r\n        applyChanges: PropTypes.func,\r\n        backToList: PropTypes.func,\r\n        editUserGroupData: PropTypes.func,\r\n        editRoomUserGroup: PropTypes.func,\r\n        navigate: PropTypes.any\r\n      };\r\n\r\n  return (\r\n    <div>\r\n         <Form>\r\n      <FormGroup>\r\n        <ComponentCardV2>\r\n          <Row>\r\n            <Col>\r\n              <Button className='shadow-none'\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  editUserGroupData();\r\n                  editRoomUserGroup();\r\n                  setTimeout(()=>{\r\n                    navigate('/UserGroup');\r\n                  },300)\r\n                 \r\n                }}\r\n              >\r\n                Save\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Button className='shadow-none'\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  editUserGroupData();\r\n                  editRoomUserGroup();\r\n                  applyChanges();\r\n                }}\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Button className='shadow-none'\r\n                color=\"dark\"\r\n                onClick={() => {\r\n                  if (\r\n                    window.confirm(\r\n                      'Are you sure you want to cancel  \\n  \\n You will lose any changes made',\r\n                    )\r\n                  ) {\r\n                    navigate('/UserGroup');\r\n                  } else {\r\n                    applyChanges();\r\n                  }\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n            <DeleteButton\r\n              id={id} \r\n              columnname=\"user_group_id\"\r\n              tablename=\"user_group\"\r\n            ></DeleteButton>\r\n            </Col>\r\n            <Col>\r\n              <Button className='shadow-none'\r\n                color=\"dark\"\r\n                onClick={() => {\r\n                  backToList();\r\n                }}\r\n              >\r\n                Back to List\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </ComponentCardV2>\r\n      </FormGroup>\r\n    </Form>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default UserGroupButtons","import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, FormGroup, Label, Input, Form, Table } from 'reactstrap';\r\nimport * as $ from 'jquery';\r\nimport { useParams, useNavigate } from 'react-router-dom';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { usePermify } from '@permify/react-role';\r\nimport ComponentCard from '../../components/ComponentCard';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport api from '../../constants/api';\r\nimport creationdatetime from '../../constants/creationdatetime';\r\nimport message from '../../components/Message';\r\nimport UserGroupButtons from '../../components/userGroup/UserGroupButtons';\r\nimport AppContext from '../../context/AppContext';\r\n\r\nconst UserGroupEdit = () => {\r\n  //state variables\r\n  const [userGroupDetails, setUserGroupDetails] = useState({});\r\n  const [roomUser, setRoomUser] = useState([]);\r\n  const { loggedInuser } = React.useContext(AppContext);\r\n  const { setUser } = usePermify();\r\n  //params and routing\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  // Route Change\r\n  const applyChanges = () => {};\r\n  const backToList = () => {\r\n    navigate('/UserGroup');\r\n  };\r\n\r\n  //Setting data in userGroupDetails\r\n  const handleInputs = (e) => {\r\n    setUserGroupDetails({ ...userGroupDetails, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Get Product data By product id\r\n  const getUserGroupById = () => {\r\n    api\r\n      .post('/usergroup/getusergroupById', { user_group_id: id })\r\n      .then((res) => {\r\n        setUserGroupDetails(res.data.data[0]);\r\n      })\r\n      .catch(() => {\r\n        message('userGroupDetails Data Not Found', 'info');\r\n      });\r\n  };\r\n\r\n  //get roomusergroup data by id\r\n  const getRoomUserGroup = () => {\r\n    api\r\n      .post('/usergroup/getroomusergroupById', { user_group_id: id })\r\n      .then((res) => {\r\n        setRoomUser(res.data.data);\r\n        if (id === loggedInuser.user_group_id) {\r\n          const apiData = res.data.data;\r\n          const permissionArray = [];\r\n          apiData.forEach((element) => {\r\n            if (element.edit) permissionArray.push(`${element.section_title}-edit`);\r\n            if (element.detail) permissionArray.push(`${element.section_title}-detail`);\r\n            if (element.duplicate) permissionArray.push(`${element.section_title}-duplicate`);\r\n            if (element.export) permissionArray.push(`${element.section_title}-export`);\r\n            if (element.import) permissionArray.push(`${element.section_title}-import`);\r\n            if (element.list) permissionArray.push(`${element.section_title}-list`);\r\n            if (element.new) permissionArray.push(`${element.section_title}-new`);\r\n            if (element.print) permissionArray.push(`${element.section_title}-print`);\r\n            if (element.publish) permissionArray.push(`${element.section_title}-publish`);\r\n            if (element.remove) permissionArray.push(`${element.section_title}-remove`);\r\n          });\r\n          setUser({\r\n            id: '1',\r\n            roles: ['admin'],\r\n            permissions: permissionArray,\r\n          });\r\n        }\r\n      })\r\n      .catch(() => {\r\n        message('Unable to get room user record.', 'error');\r\n      });\r\n  };\r\n  //update room user\r\n  const editRoomUserGroup = (elem) => {\r\n    api\r\n      .post('/usergroup/edit-roomusergroup', elem)\r\n      .then(() => {\r\n        message('Record edited successfully', 'success');\r\n        getRoomUserGroup();\r\n \r\n      })\r\n      .catch(() => {\r\n        message('Unable to edit record.', 'error');\r\n      });\r\n  };\r\n  //update userGroup\r\n  const editUserGroupData = () => {\r\n    api\r\n      .post('/usergroup/edit-usergroup', userGroupDetails)\r\n      .then(() => {\r\n        message('Record edited successfully', 'success');\r\n      \r\n      })\r\n      .catch(() => {\r\n        message('Unable to edit record.', 'error');\r\n      });\r\n  };\r\n  //insert userGroup\r\n  const insertRoomUserGroup = (item) => {\r\n    api\r\n      .post('/usergroup/insertRoomUserGroup', item)\r\n      .then(() => {\r\n        message('Record edited successfully', 'success');\r\n        getRoomUserGroup();\r\n      })\r\n      .catch(() => {\r\n        message('Unable to edit record.', 'error');\r\n      });\r\n  };\r\n\r\n  //Api call for Deleting UserGroup Data\r\n  const deleteUserGroupData = () => {\r\n    api\r\n      .post('/usergroup/deleteUserGroup', { user_group_id: id })\r\n      .then(() => {\r\n        message('Record deleted successfully', 'success');\r\n      })\r\n      .catch(() => {\r\n        message('Unable to delete record.', 'error');\r\n      });\r\n  };\r\n  const handleOnChange = (e, item) => {\r\n    item = { ...item, modification_date: creationdatetime };\r\n    item = { ...item, [e.target.name]: e.target.checked === true ? 1 : 0 };\r\n    console.log(item);\r\n    if (item.room_user_group_id) {\r\n      editRoomUserGroup(item);\r\n    } else {\r\n      item = { ...item, user_group_id: id };\r\n      insertRoomUserGroup(item);\r\n    }\r\n  };\r\n  const getAllValues = () => {\r\n    const result = [];\r\n    $('#example tbody tr').each(() => {\r\n      const allValues = {};\r\n      $(this)\r\n        .find('input')\r\n        .each(() => {\r\n          const fieldName = $(this).attr('name');\r\n          allValues.user_group_id = id;\r\n          allValues[fieldName] = $(this).val();\r\n        });\r\n\r\n      result.push(allValues);\r\n    });\r\n    console.log(result);\r\n    result.forEach((obj) => {\r\n      editRoomUserGroup(obj);\r\n    });\r\n  };\r\n\r\n  const accessColumns = [\r\n    {\r\n      name: 'room name',\r\n    },\r\n\r\n    {\r\n      name: 'list',\r\n    },\r\n    {\r\n      name: 'detail',\r\n    },\r\n    {\r\n      name: 'new',\r\n    },\r\n    {\r\n      name: 'edit',\r\n    },\r\n    {\r\n      name: 'delete',\r\n    },\r\n    {\r\n      name: 'publish',\r\n    },\r\n    {\r\n      name: 'un-publish',\r\n    },\r\n    {\r\n      name: 'print',\r\n    },\r\n    {\r\n      name: 'import',\r\n    },\r\n    {\r\n      name: 'export',\r\n    },\r\n  ];\r\n\r\n  //useEffect\r\n  useEffect(() => {\r\n    getUserGroupById();\r\n    getRoomUserGroup();\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"MainDiv\">\r\n       \r\n        <div className=\"\">\r\n          <ToastContainer></ToastContainer>\r\n          <Row>\r\n            <BreadCrumbs heading={userGroupDetails && userGroupDetails.title} />\r\n            <UserGroupButtons\r\n              id={id}\r\n              applyChanges={applyChanges}\r\n              backToList={backToList}\r\n              deleteUserGroupData={deleteUserGroupData}\r\n              editUserGroupData={editUserGroupData}\r\n              editRoomUserGroup={getAllValues}\r\n              navigate={navigate}\r\n            />\r\n            <Form>\r\n              <FormGroup>\r\n                <ComponentCard title=\"UserGroup Details\">\r\n                  <Row>\r\n                    <Col md=\"6\">\r\n                      <FormGroup>\r\n                        <Label>Title</Label>\r\n                        <Input\r\n                          type=\"text\"\r\n                          value={userGroupDetails && userGroupDetails.section_title}\r\n                          onChange={handleInputs}\r\n                          name=\"title\"\r\n                        />\r\n                      </FormGroup>\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                      <FormGroup>\r\n                        <Label>UserGroup Type</Label>\r\n                        <Input\r\n                          type=\"select\"\r\n                          value={userGroupDetails && userGroupDetails.user_group_type}\r\n                          onChange={handleInputs}\r\n                          name=\"user_group_type\"\r\n                        >\r\n                          <option value=\"Super Administrator\" defaultValue=\"selected\">\r\n                            Super Administrator\r\n                          </option>\r\n                          <option value=\"Administrator\">Administrator</option>\r\n                          <option value=\"User\">User</option>\r\n                        </Input>\r\n                      </FormGroup>\r\n                    </Col>\r\n                  </Row>\r\n                </ComponentCard>\r\n              </FormGroup>\r\n            </Form>\r\n          </Row>\r\n\r\n          <ComponentCard title=\"Actions\">\r\n            <Table id=\"example\" className=\"display border border-secondary rounded\">\r\n              <thead>\r\n                <tr>\r\n                  {accessColumns.map((cell) => {\r\n                    return <td key={cell.name}>{cell.name}</td>;\r\n                  })}\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                <tr className=\"w-100 bg-primary text-white\">\r\n                  <td>Modules</td>\r\n                </tr>\r\n              </tbody>\r\n              <tbody>\r\n                {roomUser &&\r\n                  roomUser.map((element) => {\r\n                    return (\r\n                      <tr key={element.section_id}>\r\n                        <td>\r\n                          <Input\r\n                            type=\"text\"\r\n                            name=\"section_title\"\r\n                            value={element.section_title}\r\n                            disabled\r\n                          />\r\n                        </td>\r\n                        <td>\r\n                          <FormGroup check>\r\n                            <Input\r\n                              type=\"checkbox\"\r\n                              value=\"1\"\r\n                              name=\"list\"\r\n                              // checked={isChecked}\r\n                              onChange={(e) => {\r\n                                handleOnChange(e, element);\r\n                              }}\r\n                              defaultChecked={element.list}\r\n                            />\r\n                          </FormGroup>\r\n                        </td>\r\n                        <td>\r\n                          <FormGroup check>\r\n                            <Input\r\n                              type=\"checkbox\"\r\n                              value=\"1\"\r\n                              name=\"detail\"\r\n                              // checked={isChecked}\r\n                              onChange={(e) => {\r\n                                handleOnChange(e, element);\r\n                              }}\r\n                              defaultChecked={element.detail}\r\n                            />\r\n                          </FormGroup>\r\n                        </td>\r\n                        <td>\r\n                          <FormGroup check>\r\n                            <Input\r\n                              type=\"checkbox\"\r\n                              value=\"1\"\r\n                              name=\"new\"\r\n                              onChange={(e) => {\r\n                                handleOnChange(e, element);\r\n                              }}\r\n                              defaultChecked={element.new}\r\n                            />\r\n                          </FormGroup>\r\n                        </td>\r\n                        <td>\r\n                          <FormGroup check>\r\n                            <Input\r\n                              type=\"checkbox\"\r\n                              value=\"1\"\r\n                              name=\"edit\"\r\n                              onChange={(e) => {\r\n                                handleOnChange(e, element);\r\n                              }}\r\n                              defaultChecked={element.edit}\r\n                            />\r\n                          </FormGroup>\r\n                        </td>\r\n                        <td>\r\n                          <FormGroup check>\r\n                            <Input\r\n                              type=\"checkbox\"\r\n                              value=\"1\"\r\n                              name=\"remove\"\r\n                              onChange={(e) => {\r\n                                handleOnChange(e, element);\r\n                              }}\r\n                              defaultChecked={element.remove}\r\n                            />\r\n                          </FormGroup>\r\n                        </td>\r\n                        <td>\r\n                          <FormGroup check>\r\n                            <Input\r\n                              type=\"checkbox\"\r\n                              value=\"1\"\r\n                              name=\"publish\"\r\n                              onChange={(e) => {\r\n                                handleOnChange(e, element);\r\n                              }}\r\n                              defaultChecked={element.publish}\r\n                            />\r\n                          </FormGroup>\r\n                        </td>\r\n                        <td>\r\n                          <FormGroup check>\r\n                            <Input\r\n                              type=\"checkbox\"\r\n                              value=\"1\"\r\n                              name=\"unpublish\"\r\n                              onChange={(e) => {\r\n                                handleOnChange(e, element);\r\n                              }}\r\n                              defaultChecked={element.unpublish}\r\n                            />\r\n                          </FormGroup>\r\n                        </td>\r\n                        <td>\r\n                          <FormGroup check>\r\n                            <Input\r\n                              type=\"checkbox\"\r\n                              value=\"1\"\r\n                              name=\"print\"\r\n                              onChange={(e) => {\r\n                                handleOnChange(e, element);\r\n                              }}\r\n                              defaultChecked={element.print}\r\n                            />\r\n                          </FormGroup>\r\n                        </td>\r\n                        <td>\r\n                          <FormGroup check>\r\n                            <Input\r\n                              type=\"checkbox\"\r\n                              value=\"1\"\r\n                              name=\"import\"\r\n                              onChange={(e) => {\r\n                                handleOnChange(e, element);\r\n                              }}\r\n                              defaultChecked={element.import}\r\n                            />\r\n                          </FormGroup>\r\n                        </td>\r\n                        <td>\r\n                          <FormGroup check>\r\n                            <Input\r\n                              type=\"checkbox\"\r\n                              value=\"1\"\r\n                              name=\"export\"\r\n                              onChange={(e) => {\r\n                                handleOnChange(e, element);\r\n                              }}\r\n                              defaultChecked={element.export}\r\n                            />\r\n                          </FormGroup>\r\n                        </td>\r\n                      </tr>\r\n                    );\r\n                  })}\r\n              </tbody>\r\n              <tbody>\r\n                <tr className=\"bg-primary text-white w-100\">\r\n                  <td>Reports / Widgets</td>\r\n                </tr>\r\n              </tbody>\r\n             \r\n            </Table>\r\n          </ComponentCard>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default UserGroupEdit;\r\n"],"names":["moment","format","CreationModification","_ref","details","title","_jsx","_Fragment","children","CardTitle","tag","className","_jsxs","Row","Col","created_by","creation_date","modified_by","modification_date","subtitle","creationModificationDate","Card","CardBody","CardSubtitle","id","columnname","tablename","ifpiture","ifAttachment","pictureroom","attachmentroom","navigate","useNavigate","deletePicture","formalId","roomName","api","post","room_name","record_id","then","res","status","message","catch","deleteRecord","Swal","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","idvalue","Button","color","onClick","Icon","size","pStyle","textAlign","marginRight","oStyle","outline","border","style","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Trash2","forwardRef","ref","_ref$color","_ref$size","rest","React","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","points","d","x1","y1","x2","y2","propTypes","PropTypes","displayName","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","Breadcrumb","BreadcrumbItem","to","Link","active","applyChanges","backToList","editUserGroupData","editRoomUserGroup","Form","FormGroup","ComponentCardV2","setTimeout","window","confirm","DeleteButton","UserGroupEdit","userGroupDetails","setUserGroupDetails","useState","roomUser","setRoomUser","loggedInuser","AppContext","setUser","usePermify","useParams","handleInputs","e","_objectSpread","name","value","getRoomUserGroup","user_group_id","data","apiData","permissionArray","forEach","element","edit","push","concat","section_title","detail","duplicate","export","import","list","new","print","publish","remove","roles","permissions","elem","handleOnChange","item","creationdatetime","checked","console","log","room_user_group_id","insertRoomUserGroup","useEffect","ToastContainer","BreadCrumbs","UserGroupButtons","deleteUserGroupData","getAllValues","$","each","allValues","find","fieldName","attr","val","obj","ComponentCard","md","Label","Input","onChange","user_group_type","defaultValue","Table","map","cell","disabled","check","defaultChecked","unpublish","section_id"],"sourceRoot":""}