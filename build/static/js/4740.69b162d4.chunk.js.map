{"version":3,"file":"static/js/4740.69b162d4.chunk.js","mappings":"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","sources":["views/form-pickers/Data.js","views/form-pickers/TagSelect.js","components/CreationModification.js","components/ComponentCard.js","layouts/breadcrumbs/BreadCrumbs.js"],"sourcesContent":["export const colourOptions = [\r\n  { value: 'ocean', label: 'Ocean', color: '#00B8D9', isFixed: true },\r\n  { value: 'blue', label: 'Blue', color: '#0052CC', disabled: true },\r\n  { value: 'purple', label: 'Purple', color: '#5243AA' },\r\n  { value: 'red', label: 'Red', color: '#FF5630', isFixed: true },\r\n  { value: 'orange', label: 'Orange', color: '#FF8B00' },\r\n  { value: 'yellow', label: 'Yellow', color: '#FFC400' },\r\n  { value: 'green', label: 'Green', color: '#36B37E' },\r\n  { value: 'forest', label: 'Forest', color: '#00875A' },\r\n  { value: 'slate', label: 'Slate', color: '#253858' },\r\n  { value: 'silver', label: 'Silver', color: '#666666' },\r\n];\r\n\r\nexport const flavourOptions = [\r\n  { value: 'vanilla', label: 'Vanilla', rating: 'safe' },\r\n  { value: 'chocolate', label: 'Chocolate', rating: 'good' },\r\n  { value: 'strawberry', label: 'Strawberry', rating: 'wild' },\r\n  { value: 'salted-caramel', label: 'Salted Caramel', rating: 'crazy' },\r\n];\r\n\r\nexport const stateOptions = [\r\n  { value: 'AL', label: 'Alabama' },\r\n  { value: 'AK', label: 'Alaska' },\r\n  { value: 'AS', label: 'American Samoa' },\r\n  { value: 'AZ', label: 'Arizona' },\r\n  { value: 'AR', label: 'Arkansas' },\r\n  { value: 'CA', label: 'California' },\r\n  { value: 'CO', label: 'Colorado' },\r\n  { value: 'CT', label: 'Connecticut' },\r\n  { value: 'DE', label: 'Delaware' },\r\n  { value: 'DC', label: 'District Of Columbia' },\r\n  { value: 'FM', label: 'Federated States Of Micronesia' },\r\n  { value: 'FL', label: 'Florida' },\r\n  { value: 'GA', label: 'Georgia' },\r\n  { value: 'GU', label: 'Guam' },\r\n  { value: 'HI', label: 'Hawaii' },\r\n  { value: 'ID', label: 'Idaho' },\r\n  { value: 'IL', label: 'Illinois' },\r\n  { value: 'IN', label: 'Indiana' },\r\n  { value: 'IA', label: 'Iowa' },\r\n  { value: 'KS', label: 'Kansas' },\r\n  { value: 'KY', label: 'Kentucky' },\r\n  { value: 'LA', label: 'Louisiana' },\r\n  { value: 'ME', label: 'Maine' },\r\n  { value: 'MH', label: 'Marshall Islands' },\r\n  { value: 'MD', label: 'Maryland' },\r\n  { value: 'MA', label: 'Massachusetts' },\r\n  { value: 'MI', label: 'Michigan' },\r\n  { value: 'MN', label: 'Minnesota' },\r\n  { value: 'MS', label: 'Mississippi' },\r\n  { value: 'MO', label: 'Missouri' },\r\n  { value: 'MT', label: 'Montana' },\r\n  { value: 'NE', label: 'Nebraska' },\r\n  { value: 'NV', label: 'Nevada' },\r\n  { value: 'NH', label: 'New Hampshire' },\r\n  { value: 'NJ', label: 'New Jersey' },\r\n  { value: 'NM', label: 'New Mexico' },\r\n  { value: 'NY', label: 'New York' },\r\n  { value: 'NC', label: 'North Carolina' },\r\n  { value: 'ND', label: 'North Dakota' },\r\n  { value: 'MP', label: 'Northern Mariana Islands' },\r\n  { value: 'OH', label: 'Ohio' },\r\n  { value: 'OK', label: 'Oklahoma' },\r\n  { value: 'OR', label: 'Oregon' },\r\n  { value: 'PW', label: 'Palau' },\r\n  { value: 'PA', label: 'Pennsylvania' },\r\n  { value: 'PR', label: 'Puerto Rico' },\r\n  { value: 'RI', label: 'Rhode Island' },\r\n  { value: 'SC', label: 'South Carolina' },\r\n  { value: 'SD', label: 'South Dakota' },\r\n  { value: 'TN', label: 'Tennessee' },\r\n  { value: 'TX', label: 'Texas' },\r\n  { value: 'UT', label: 'Utah' },\r\n  { value: 'VT', label: 'Vermont' },\r\n  { value: 'VI', label: 'Virgin Islands' },\r\n  { value: 'VA', label: 'Virginia' },\r\n  { value: 'WA', label: 'Washington' },\r\n  { value: 'WV', label: 'West Virginia' },\r\n  { value: 'WI', label: 'Wisconsin' },\r\n  { value: 'WY', label: 'Wyoming' },\r\n];\r\n\r\nexport const optionLength = [\r\n  { value: 1, label: 'general' },\r\n  {\r\n    value: 2,\r\n    label:\r\n      'Evil is the moment when I lack the strength to be true to the Good that compels me.',\r\n  },\r\n  {\r\n    value: 3,\r\n    label:\r\n      \"It is now an easy matter to spell out the ethic of a truth: 'Do all that you can to persevere in that which exceeds your perseverance. Persevere in the interruption. Seize in your being that which has seized and broken you.\",\r\n  },\r\n];\r\n\r\n// let bigOptions = [];\r\n// for (let i = 0; i < 10000; i++) {\r\n// \tbigOptions = bigOptions.concat(colourOptions);\r\n// }\r\n\r\nexport const groupedOptions = [\r\n  {\r\n    label: 'Colours',\r\n    options: colourOptions,\r\n  },\r\n  {\r\n    label: 'Flavours',\r\n    options: flavourOptions,\r\n  },\r\n];\r\n","/* eslint-disable react/prop-types */\r\nimport React, { useState } from 'react';\r\nimport { Row, Col } from 'reactstrap';\r\nimport TagsInput from 'react-tagsinput';\r\nimport chroma from 'chroma-js';\r\nimport Select, { components } from 'react-select';\r\nimport 'react-tagsinput/react-tagsinput.css';\r\nimport Switch from 'react-bootstrap-switch';\r\nimport { colourOptions, groupedOptions } from './Data';\r\nimport 'react-bootstrap-switch/dist/css/bootstrap3/react-bootstrap-switch.min.css';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport './tagselect.scss';\r\n\r\nimport ComponentCard from '../../components/ComponentCard';\r\n\r\n/*------------------------------------*/\r\n/* For Select Plugin - (1)            */\r\n/*------------------------------------*/\r\nconst dot = (color = '#ccc') => ({\r\n  alignItems: 'center',\r\n  display: 'flex',\r\n\r\n  ':before': {\r\n    backgroundColor: color,\r\n    borderRadius: 10,\r\n    content: '\"\"',\r\n    display: 'block',\r\n    marginRight: 8,\r\n    height: 10,\r\n    width: 10,\r\n  },\r\n});\r\n\r\n/*------------------------------------*/\r\n/* For Select Plugin - (2)            */\r\n/*------------------------------------*/\r\nconst colourStyles = {\r\n  control: (styles) => ({ ...styles, backgroundColor: 'white' }),\r\n  option: (styles, { data, isDisabled, isFocused, isSelected }) => {\r\n    const color = chroma(data.color);\r\n    return {\r\n      ...styles,\r\n      backgroundColor: isDisabled\r\n        ? null\r\n        : isSelected\r\n        ? data.color\r\n        : isFocused\r\n        ? color.alpha(0.1).css()\r\n        : null,\r\n      color: isDisabled\r\n        ? '#ccc'\r\n        : isSelected\r\n        ? chroma.contrast(color, 'white') > 2\r\n          ? 'white'\r\n          : 'black'\r\n        : data.color,\r\n      cursor: isDisabled ? 'not-allowed' : 'default',\r\n    };\r\n  },\r\n  multiValue: (styles, { data }) => {\r\n    const color = chroma(data.color);\r\n    return {\r\n      ...styles,\r\n      backgroundColor: color.alpha(0.1).css(),\r\n    };\r\n  },\r\n  multiValueLabel: (styles, { data }) => ({\r\n    ...styles,\r\n    color: data.color,\r\n  }),\r\n  multiValueRemove: (styles, { data }) => ({\r\n    ...styles,\r\n    color: data.color,\r\n    ':hover': {\r\n      backgroundColor: data.color,\r\n      color: 'white',\r\n    },\r\n  }),\r\n  input: (styles) => ({ ...styles, ...dot() }),\r\n  placeholder: (styles) => ({ ...styles, ...dot() }),\r\n  singleValue: (styles, { data }) => ({ ...styles, ...dot(data.color) }),\r\n};\r\n\r\n/*------------------------------------*/\r\n/* For Select Plugin - (3)            */\r\n/*------------------------------------*/\r\nconst CustomClearText = () => 'clear all';\r\nconst ClearIndicator = (props) => {\r\n  const {\r\n    // eslint-disable-next-line react/prop-types\r\n    children = <CustomClearText />,\r\n    // eslint-disable-next-line react/prop-types\r\n    getStyles,\r\n    // eslint-disable-next-line react/prop-types\r\n    innerProps: { ref, ...restInnerProps },\r\n  } = props;\r\n  return (\r\n    <div {...restInnerProps} ref={ref} style={getStyles('clearIndicator', props)}>\r\n      <div style={{ padding: '0px 5px' }}>{children}</div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst ClearIndicatorStyles = (base, state) => ({\r\n  ...base,\r\n  cursor: 'pointer',\r\n  color: state.isFocused ? 'blue' : 'black',\r\n});\r\n\r\n/*------------------------------------*/\r\n/* For Select Plugin - (4)            */\r\n/*------------------------------------*/\r\nconst groupStyles = {\r\n  border: `2px dotted ${colourOptions[2].color}`,\r\n  borderRadius: '5px',\r\n  background: '#f2fcff',\r\n};\r\n\r\nconst Group = (props) => (\r\n  <div style={groupStyles}>\r\n    <components.Group {...props} />\r\n  </div>\r\n);\r\n\r\n/*------------------------------------*/\r\n/* For Select Plugin - (5)            */\r\n/*------------------------------------*/\r\nconst IndicatorsContainer = (props) => {\r\n  return (\r\n    <div style={{ background: colourOptions[2].color }}>\r\n      <components.IndicatorsContainer {...props} />\r\n    </div>\r\n  );\r\n};\r\n\r\n/*------------------------------------*/\r\n/* For Select Plugin - (6)            */\r\n/*------------------------------------*/\r\nconst menuHeaderStyle = {\r\n  padding: '8px 12px',\r\n  background: colourOptions[2].color,\r\n  color: 'white',\r\n};\r\n\r\nconst MenuList = (props) => {\r\n  return (\r\n    <components.MenuList {...props}>\r\n      <div style={menuHeaderStyle}>Custom Menu List</div>\r\n      {props.children}\r\n    </components.MenuList>\r\n  );\r\n};\r\n\r\n/*------------------------------------*/\r\n/* For Select Plugin - (7)            */\r\n/*------------------------------------*/\r\nconst controlStyles = {\r\n  borderRadius: '1px solid black',\r\n  padding: '5px',\r\n  background: colourOptions[1].color,\r\n  color: 'white',\r\n};\r\n\r\nconst ControlComponent = (props) => (\r\n  <div style={controlStyles}>\r\n    <p>Custom Control</p>\r\n    <components.Control {...props} />\r\n  </div>\r\n);\r\n\r\nconst TagSelect = () => {\r\n  const [regularTags, setRegularTags] = useState(['MacOs', 'Windows', 'BeOS', 'Linux']);\r\n\r\n  const handleRegularTags = (tags) => {\r\n    setRegularTags(tags);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <BreadCrumbs />\r\n      {/*--------------------------------------------------------------------------------*/}\r\n      {/* Start Inner Div*/}\r\n      {/*--------------------------------------------------------------------------------*/}\r\n      {/*--------------------------------------------------------------------------------*/}\r\n      {/* Start Tags                                                                     */}\r\n      {/*--------------------------------------------------------------------------------*/}\r\n      <Row>\r\n        <Col md=\"12\">\r\n          <ComponentCard title=\"Tags\">\r\n            <TagsInput\r\n              value={regularTags}\r\n              onChange={(tags) => handleRegularTags(tags)}\r\n              tagProps={{\r\n                className: 'react-tagsinput-tag bg-info text-white rounded',\r\n              }}\r\n            />\r\n          </ComponentCard>\r\n        </Col>\r\n      </Row>\r\n      {/*--------------------------------------------------------------------------------*/}\r\n      {/* Start Select and Mutiple Select Options                                        */}\r\n      {/*--------------------------------------------------------------------------------*/}\r\n      <h4 className=\"mb-3\">Select and Mutiple Select Options</h4>\r\n      <Row>\r\n        <Col md=\"6\">\r\n          <ComponentCard title=\"Color Select\">\r\n            <Select\r\n              defaultValue={colourOptions[2]}\r\n              label=\"Single select\"\r\n              options={colourOptions}\r\n              styles={colourStyles}\r\n            />\r\n          </ComponentCard>\r\n        </Col>\r\n        <Col md=\"6\">\r\n          <ComponentCard title=\"Customized Background Color Multi-Select\">\r\n            <Select\r\n              closeMenuOnSelect={false}\r\n              defaultValue={[colourOptions[0], colourOptions[1]]}\r\n              isMulti\r\n              options={colourOptions}\r\n              styles={colourStyles}\r\n            />\r\n          </ComponentCard>\r\n        </Col>\r\n        <Col md=\"6\">\r\n          <ComponentCard title=\"Custom Clear Indicator\">\r\n            <Select\r\n              closeMenuOnSelect={false}\r\n              components={{ ClearIndicator }}\r\n              styles={{ clearIndicator: ClearIndicatorStyles }}\r\n              defaultValue={[colourOptions[4], colourOptions[5]]}\r\n              isMulti\r\n              options={colourOptions}\r\n            />\r\n          </ComponentCard>\r\n        </Col>\r\n        <Col md=\"6\">\r\n          <ComponentCard title=\"Custom Group\">\r\n            <Select\r\n              defaultValue={colourOptions[1]}\r\n              options={groupedOptions}\r\n              components={{ Group }}\r\n            />\r\n          </ComponentCard>\r\n        </Col>\r\n        <Col md=\"6\">\r\n          <ComponentCard title=\"Custom Indicators Container\">\r\n            <Select\r\n              closeMenuOnSelect={false}\r\n              components={{ IndicatorsContainer }}\r\n              defaultValue={[colourOptions[4], colourOptions[5]]}\r\n              isMulti\r\n              options={colourOptions}\r\n            />\r\n          </ComponentCard>\r\n        </Col>\r\n        <Col md=\"6\">\r\n          <ComponentCard title=\"Menus\">\r\n            <Select\r\n              defaultValue={colourOptions[1]}\r\n              options={groupedOptions}\r\n              components={{ MenuList }}\r\n            />\r\n          </ComponentCard>\r\n        </Col>\r\n        <Col md=\"6\">\r\n          <ComponentCard title=\"Custom Control\">\r\n            <Select\r\n              defaultValue={colourOptions[0]}\r\n              isClearable\r\n              components={{ Control: ControlComponent }}\r\n              isSearchable\r\n              name=\"color\"\r\n              options={colourOptions}\r\n            />\r\n          </ComponentCard>\r\n        </Col>\r\n      </Row>\r\n      {/*--------------------------------------------------------------------------------*/}\r\n      {/* Start Switches                                                                 */}\r\n      {/*--------------------------------------------------------------------------------*/}\r\n      <h4 className=\"mb-3\">Switches</h4>\r\n      <Row>\r\n        <Col md=\"4\">\r\n          <ComponentCard title=\"Default Switch\">\r\n            <Switch defaultValue={false} /> <Switch />\r\n          </ComponentCard>\r\n        </Col>\r\n        <Col md=\"4\">\r\n          <ComponentCard title=\"Simple Switch\">\r\n            <Switch onText=\"Red\" offText=\"Yellow\" defaultValue={false} />{' '}\r\n            <Switch onText=\"Yellow\" offText=\"Red\" />\r\n          </ComponentCard>\r\n        </Col>\r\n        <Col md=\"4\">\r\n          <ComponentCard title=\"Switch with Icons\">\r\n            <Switch\r\n              onText={<i className=\"bi bi-patch-check\" />}\r\n              offText={<i className=\"bi bi-patch-minus\" />}\r\n              defaultValue={false}\r\n            />{' '}\r\n            <Switch\r\n              onText={<i className=\"bi bi-patch-minus\" />}\r\n              offText={<i className=\"bi bi-patch-check\" />}\r\n            />\r\n          </ComponentCard>\r\n        </Col>\r\n      </Row>\r\n      {/*--------------------------------------------------------------------------------*/}\r\n      {/*End Inner Div*/}\r\n      {/*--------------------------------------------------------------------------------*/}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TagSelect;\r\n","import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n                <small> Creation: {details && details.created_by} {details && details.creation_date}</small>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n                <small> Modified: {details && details.modified_by} {details && details.modification_date}</small>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n   );\r\n}","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      {/* <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n        <p tag='h2' className=\"float-end small fs-5\">{righttitle}</p>\r\n      </CardTitle> */}\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate:PropTypes.any\r\n};\r\n\r\nexport default ComponentCard;\r\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n"],"names":["colourOptions","value","label","color","isFixed","disabled","groupedOptions","options","rating","dot","alignItems","display","backgroundColor","arguments","length","undefined","borderRadius","content","marginRight","height","width","colourStyles","control","styles","_objectSpread","option","_ref","data","isDisabled","isFocused","isSelected","chroma","alpha","css","cursor","multiValue","_ref2","multiValueLabel","_ref3","multiValueRemove","_ref4","input","placeholder","singleValue","_ref5","CustomClearText","ClearIndicator","props","children","_jsx","getStyles","innerProps","ref","restInnerProps","_objectWithoutProperties","_excluded","style","padding","ClearIndicatorStyles","base","state","groupStyles","border","concat","background","Group","components","IndicatorsContainer","menuHeaderStyle","MenuList","_jsxs","controlStyles","ControlComponent","Control","TagSelect","regularTags","setRegularTags","useState","BreadCrumbs","Row","Col","md","ComponentCard","title","TagsInput","onChange","tags","handleRegularTags","tagProps","className","Select","defaultValue","closeMenuOnSelect","isMulti","clearIndicator","isClearable","isSearchable","name","Switch","onText","offText","CreationModification","details","_Fragment","CardTitle","tag","created_by","creation_date","modified_by","modification_date","subtitle","creationModificationDate","Card","CardBody","CardSubtitle","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","Breadcrumb","BreadcrumbItem","to","Link","active"],"sourceRoot":""}