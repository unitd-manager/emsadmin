{"version":3,"file":"static/js/9388.30f71a2f.chunk.js","mappings":"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","sources":["views/detailTable/ProductDetails.js","components/CreationModification.js","components/ComponentCard.js","components/Message.js","layouts/breadcrumbs/BreadCrumbs.js"],"sourcesContent":["import React, { useState, useEffect, useContext } from 'react';\r\nimport { Row, Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport ComponentCard from '../../components/ComponentCard';\r\nimport message from '../../components/Message';\r\nimport api from '../../constants/api';\r\nimport AppContext from '../../context/AppContext';\r\n\r\nconst ProductDetails = () => {\r\n  //All const variables\r\n  const [itemcode, setItemcode] = useState();\r\n  const navigate = useNavigate();\r\n  const { loggedInuser } = useContext(AppContext);\r\n  const [productDetails, setProductDetails] = useState({\r\n    title: '',\r\n    item_code: '',\r\n    site_id: 0,\r\n  });\r\n  //setting data in ProductDetails\r\n  const handleInputs = (e) => {\r\n    setProductDetails({ ...productDetails, [e.target.name]: e.target.value });\r\n  };\r\n  //getting maximum of itemcode\r\n  const getMaxItemcode = () => {\r\n    api.get('/product/getMaxItemCode').then((res) => {\r\n      setItemcode(res.data.data[0].itemc);\r\n    });\r\n  };\r\n  //Insert Product Data\r\n  const insertProductData = (code) => {\r\n    productDetails.item_code = parseFloat(itemcode) + 1;\r\n    productDetails.created_by = loggedInuser.first_name;\r\n    productDetails.product_code=code;\r\n    if (productDetails.title !== '' && productDetails.item_code !== '') {\r\n      api\r\n        .post('/product/insertProduct', productDetails)\r\n        .then((res) => {\r\n          const insertedDataId = res.data.data.insertId;\r\n          message('Product inserted successfully.', 'success');\r\n          setTimeout(() => {\r\n            navigate(`/ProductEdit/${insertedDataId}`);\r\n          }, 300);\r\n        })\r\n        .catch(() => {\r\n          message('Unable to edit record.', 'error');\r\n        });\r\n    } else {\r\n      message('Please fill all required fields.', 'warning');\r\n    }\r\n  };\r\n  const generateCode = () => {\r\n    api\r\n      .post('/commonApi/getCodeValue', { type: 'product' })\r\n      .then((res) => {\r\n        insertProductData(res.data.data);\r\n      })\r\n      .catch(() => {\r\n        insertProductData('');\r\n      });\r\n  };\r\n  //useeffect\r\n  useEffect(() => {\r\n    getMaxItemcode();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <BreadCrumbs />\r\n      <ToastContainer></ToastContainer>\r\n      <Row>\r\n        <Col md=\"6\">\r\n          <ComponentCard title=\"Key Details\">\r\n            <Form>\r\n              <FormGroup>\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <Label>\r\n                      Title<span className=\"required\"> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      onChange={handleInputs}\r\n                      value={ProductDetails && ProductDetails.title}\r\n                      name=\"title\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Row>\r\n                  <div className=\"pt-3 mt-3 d-flex align-items-center gap-2\">\r\n                    <Button\r\n                      className=\"shadow-none\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        generateCode();\r\n                      }}\r\n                    >\r\n                      Save & Continue\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => {\r\n                        navigate('/Product');\r\n                      }}\r\n                      type=\"button\"\r\n                      className=\"btn btn-dark shadow-none\"\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </div>\r\n                </Row>\r\n              </FormGroup>\r\n            </Form>\r\n          </ComponentCard>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\nexport default ProductDetails;\r\n","import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n                <small> Creation: {details && details.created_by} {details && details.creation_date}</small>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n                <small> Modified: {details && details.modified_by} {details && details.modification_date}</small>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n   );\r\n}","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      {/* <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n        <p tag='h2' className=\"float-end small fs-5\">{righttitle}</p>\r\n      </CardTitle> */}\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate:PropTypes.any\r\n};\r\n\r\nexport default ComponentCard;\r\n","import {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst message = (msg,type) => {\r\n    if(type === 'success'){\r\n       return toast.success(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n            });\r\n    } if(type === 'error'){\r\n        return toast.error(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n     } if(type === 'info'){\r\n        return toast.info(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n            }if(type === 'warning'){\r\n               return toast.warning(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"colored\",\r\n                    });\r\n                   }\r\n            return toast(msg);\r\n   \r\n  \r\n}\r\nexport default message\r\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n"],"names":["ProductDetails","itemcode","setItemcode","useState","navigate","useNavigate","loggedInuser","useContext","AppContext","productDetails","setProductDetails","title","item_code","site_id","insertProductData","code","parseFloat","created_by","first_name","product_code","api","post","then","res","insertedDataId","data","insertId","message","setTimeout","concat","catch","useEffect","get","itemc","_jsxs","children","_jsx","BreadCrumbs","ToastContainer","Row","Col","md","ComponentCard","Form","FormGroup","Label","className","Input","type","onChange","e","_objectSpread","target","name","value","Button","color","onClick","CreationModification","_ref","details","_Fragment","CardTitle","tag","creation_date","modified_by","modification_date","subtitle","creationModificationDate","Card","CardBody","CardSubtitle","msg","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","Breadcrumb","BreadcrumbItem","to","Link","active"],"sourceRoot":""}