{"version":3,"file":"static/js/7639.b24313ad.chunk.js","mappings":"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","sources":["constants/creationdatetime.js","../node_modules/react-feather/dist/icons/edit-2.js","components/ComponentCardV2.js","components/Content/MagazineDetails.js","components/Finance/ArticleDetails.js","components/Content/Article.js","views/EditData/MagazineEdit.js","layouts/breadcrumbs/BreadCrumbs.js","../node_modules/react-feather/dist/icons/edit-3.js","components/Tab.js"],"sourcesContent":["import moment from \"moment\"\r\n\r\nconst creationdatetime = moment().format('DD-MM-YYYY h:mm:ss a')\r\nexport default creationdatetime \r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Edit2 = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M17 3a2.828 2.828 0 1 1 4 4L7.5 20.5 2 22l1.5-5.5L17 3z\"\n  }));\n});\nEdit2.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nEdit2.displayName = 'Edit2';\nexport default Edit2;","import { Card, CardBody } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst pStyle = {\r\n  textAlign: 'right',\r\n  marginRight: '10px',\r\n};\r\nconst oStyle={\r\noutline:'none',\r\nborder:'none'\r\n};\r\n\r\nconst ComponentCardV2 = ({ children }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CardBody style={pStyle} >\r\n        <div className=\"btn btn-space text-nowrap shadow-none outline-none\" style={oStyle}>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCardV2.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default ComponentCardV2;\r\n","import React from 'react';\r\nimport { Row, Col, FormGroup, Label, Input } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport ComponentCard from '../ComponentCard';\r\n\r\nexport default function ContentMoreDetails({\r\n  contentDetails,\r\n  handleInputs,\r\n  sectionLinked,\r\n  }) {\r\n  ContentMoreDetails.propTypes = {\r\n    contentDetails: PropTypes.object,\r\n    handleInputs: PropTypes.any,\r\n    sectionLinked: PropTypes.object,\r\n     };\r\n  \r\n  return (\r\n    <div>\r\n   <ComponentCard title=\"Magazine Details\" creationModificationDate={contentDetails}>\r\n            <ToastContainer></ToastContainer>\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label> Title<span className=\"required\"> *</span>  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleInputs}\r\n                    value={contentDetails && contentDetails.title}\r\n                    name=\"title\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label> Year<span className=\"required\"> *</span>  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleInputs}\r\n                    value={contentDetails && contentDetails.year}\r\n                    name=\"year\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label> Month<span className=\"required\"> *</span>  </Label>\r\n                  <Input\r\n      type=\"select\"\r\n      name=\"month\"\r\n      value={contentDetails && contentDetails.month}\r\n      onChange={handleInputs}\r\n    >\r\n      <option value=\"\" selected=\"selected\">\r\n        Please Select\r\n      </option>\r\n      {sectionLinked &&\r\n        sectionLinked.map((ele) => {\r\n          return <option value={ele.name}>{ele.name}</option>;\r\n        })}\r\n    </Input>\r\n                </FormGroup>\r\n              </Col>\r\n           \r\n            </Row>\r\n          </ComponentCard>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Form, Table } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport * as Icon from 'react-feather';\r\nimport ComponentCard from '../ComponentCard';\r\nimport ArticleEdit from '../../views/EditData/ArticleEdit';\r\nimport api from '../../constants/api';\r\nimport message from '../Message';\r\n\r\nexport default function OrderProductDetails({ editArticles }) {\r\n  OrderProductDetails.propTypes = {\r\n    editArticles: PropTypes.array,\r\n  };\r\n  \r\n  const [updateAricles, setUpdateArticles] = useState(false);\r\n  const [selectedArticle, setSelectedArticle] = useState(null);\r\n\r\n  const handleEditClick = (element) => {\r\n    setSelectedArticle(element);\r\n    setUpdateArticles(true);\r\n  };\r\n\r\n  const invoiceTableColumns = [\r\n    {\r\n      name: 'S.NO',\r\n      grow: 0,\r\n      wrap: true,\r\n      width: '4%',\r\n    },\r\n    {\r\n      name: 'Edit',\r\n      selector: 'edit',\r\n      cell: (row) => (\r\n        <Link to=\"#\" onClick={() => handleEditClick(row)}>\r\n          <Icon.Edit3 />\r\n        </Link>\r\n      ),\r\n      grow: 0,\r\n      width: 'auto',\r\n      button: true,\r\n      sortable: false,\r\n    },\r\n    { name: 'Title' },\r\n    { name: 'Author' },\r\n    { name: 'Delete' },\r\n  ];\r\n  const deleteArticle = (articleID) => {\r\n    const confirmDelete = window.confirm('Are you sure you want to delete this record?');\r\n  \r\n    if (confirmDelete) {\r\n      api\r\n      .post('/content/deleteArticle', { article_id: articleID })\r\n        .then(() => {\r\n          message('Record edited successfully', 'success');\r\n          window.location.reload();\r\n        })\r\n        .catch(() => {\r\n          message('Unable to delete record.', 'error');\r\n        });\r\n    } else {\r\n     \r\n      message('Deletion canceled', 'info');\r\n    }\r\n  };\r\n  \r\n  return (\r\n    <ComponentCard>\r\n      <Form>\r\n        <div className=\"container\">\r\n          <Table id=\"example\">\r\n            <thead>\r\n              <tr>\r\n                {invoiceTableColumns.map((cell) => {\r\n                  return <td key={cell.name}>{cell.name}</td>;\r\n                })}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {editArticles &&\r\n                editArticles.map((element, index) => {\r\n                  return (\r\n                    <tr key={element.article_id}>\r\n                      <td>{index + 1}</td>\r\n                      <td>\r\n                        <div className='anchor'>\r\n                         <span onClick={() => handleEditClick(element)}style={{ cursor: 'pointer' }}>\r\n                         <Icon.Edit2 />\r\n                          </span>\r\n                        </div>\r\n                      </td>\r\n                      <td>{element.title}</td>\r\n                      <td>{element.author}</td>\r\n                      <td><span onClick={() => deleteArticle(element.article_id)}style={{ cursor: 'pointer' }}>\r\n                          <Icon.Trash2/>\r\n                          </span></td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n            </tbody>\r\n          </Table>\r\n        </div>\r\n      </Form>\r\n\r\n      {updateAricles && selectedArticle && (\r\n        <ArticleEdit\r\n          updateAricles={updateAricles}\r\n          setUpdateArticles={setUpdateArticles}\r\n          articleId={selectedArticle.article_id}\r\n        />\r\n      )}\r\n    </ComponentCard>\r\n  );\r\n}","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Input,\r\n  Modal,\r\n  ModalHeader,\r\n  Button,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Label,\r\n} from 'reactstrap';\r\n//import * as $ from 'jquery';\r\n//import random from 'random';\r\nimport PropTypes from 'prop-types';\r\nimport { convertToRaw } from 'draft-js';\r\nimport { Editor } from 'react-draft-wysiwyg';\r\nimport draftToHtml from 'draftjs-to-html';\r\n//import htmlToDraft from 'html-to-draftjs';\r\nimport api from '../../constants/api';\r\nimport message from '../Message';\r\nimport ComponentCard from '../ComponentCard';\r\n\r\nexport default function InvoiceItem({ articleData, setArticleData,magazineId }) {\r\n  InvoiceItem.propTypes = {\r\n    articleData: PropTypes.bool,\r\n    setArticleData: PropTypes.func,\r\n    magazineId: PropTypes.any,\r\n  };\r\n  const [description, setDescription] = useState('');\r\n  const [categoryLinked, setCategoryLinked] = useState('');\r\n  const [articles, setArticles] = useState(\r\n    {\r\n      magazine_id: magazineId,\r\n    }\r\n  );\r\n  const handleInputs = (e) => {\r\n    const { name, value } = e.target;\r\n  setArticles((prevArticles) => ({\r\n    ...prevArticles,\r\n    [name]: value,\r\n  }));\r\n  };\r\n  // const convertHtmlToDraft = (existingQuoteformal) => {\r\n  //   const contentBlock = htmlToDraft(existingQuoteformal && existingQuoteformal);\r\n  //   if (contentBlock) {\r\n  //     const contentState = ContentState.createFromBlockArray(contentBlock.contentBlocks);\r\n  //     const editorState = EditorState.createWithContent(contentState);\r\n  //     setDescription(editorState);\r\n  //   }\r\n  // };\r\n\r\n  const handleDataEditor = (e, type) => {\r\n    setArticles({\r\n      ...articles,\r\n      [type]: draftToHtml(convertToRaw(e.getCurrentContent())),\r\n    });\r\n  };\r\n  const insertArticle = () => {\r\n    if (articles.title && articles.author) {\r\n      api\r\n        .post('/content/insertArticle', articles)\r\n        .then((res) => {\r\n          setArticles(res.data.data);\r\n          message('Article inserted successfully.', 'success');\r\n          window.location.reload();\r\n        })\r\n        .catch(() => {\r\n          message('Network connection error.', 'error');\r\n        });\r\n    } else {\r\n      message('Please fill all required fields', 'warning');\r\n    }\r\n  };\r\n  const getCategory = () => {\r\n    api.get('/content/getCategory', categoryLinked).then((res) => {\r\n      setCategoryLinked(res.data.data);\r\n    });\r\n  };\r\n  useEffect(() => {\r\n    getCategory();\r\n  }, [magazineId]);\r\n  return (\r\n    <>\r\n      <Modal size=\"xl\" isOpen={articleData}>\r\n        <ModalHeader>\r\n          Create Article\r\n          <Button\r\n            className=\"shadow-none\"\r\n            color=\"secondary\"\r\n            onClick={() => {\r\n              setArticleData(false);\r\n            }}\r\n          >\r\n            X\r\n          </Button>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Form>\r\n            <FormGroup>\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label> Title<span className=\"required\"> *</span>  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleInputs}\r\n                    value={articles && articles.title}\r\n                    name=\"title\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label> Author<span className=\"required\"> *</span>  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleInputs}\r\n                    value={articles && articles.author}\r\n                    name=\"author\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>  \r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  {/* Category title from Category table */}\r\n                  <Label>Category</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    name=\"category_id\"\r\n                    value={articles && articles.category_id}\r\n                    onChange={handleInputs}\r\n                  >\r\n                    <option value=\"\" selected=\"selected\">\r\n                      Please Select\r\n                    </option>\r\n                    {categoryLinked &&\r\n                      categoryLinked.map((ele) => {\r\n                        return <option value={ele.category_id}>{ele.category_title}</option>;\r\n                      })}\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              {/* Description form */}\r\n              <ComponentCard title=\"Description\">\r\n                <Editor\r\n                  editorState={description}\r\n                  wrapperClassName=\"demo-wrapper mb-0\"\r\n                  editorClassName=\"demo-editor border mb-4 edi-height\"\r\n                  onEditorStateChange={(e) => {\r\n                    handleDataEditor(e, 'description');\r\n                    setDescription(e);\r\n                  }}\r\n                />\r\n              </ComponentCard>\r\n            </Row>\r\n            </FormGroup>\r\n            </Form>\r\n            </ModalBody>\r\n          \r\n                      <ModalFooter>\r\n                        <Button\r\n                          className=\"shadow-none\"\r\n                          color=\"primary\"\r\n                          onClick={() => {\r\n                            insertArticle();\r\n                          }}\r\n                        >\r\n                          {' '}\r\n                          Submit{' '}\r\n                        </Button>\r\n                        <Button\r\n                          className=\"shadow-none\"\r\n                          color=\"secondary\"\r\n                          onClick={() => {\r\n                            setArticleData(false);\r\n                          }}\r\n                        >\r\n                          Cancel\r\n                        </Button>\r\n                      </ModalFooter>\r\n               \r\n      </Modal>\r\n    </>\r\n  );\r\n}\r\n","import React, { useContext, useEffect, useState } from 'react';\r\nimport { Row, Col, Form, FormGroup, Button, TabContent, TabPane } from 'reactstrap';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport * as Icon from 'react-feather';\r\nimport { useNavigate, useParams } from 'react-router-dom';import 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport '../form-editor/editor.scss';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport ComponentCard from '../../components/ComponentCard';\r\nimport ComponentCardV2 from '../../components/ComponentCardV2';\r\nimport ViewFileComponentV2 from '../../components/ProjectModal/ViewFileComponentV2';\r\nimport AttachmentModalV2 from '../../components/Tender/AttachmentModalV2';\r\nimport message from '../../components/Message';\r\nimport api from '../../constants/api';\r\nimport MagazineDetails from '../../components/Content/MagazineDetails';\r\nimport ArticleDetails from '../../components/Finance/ArticleDetails';\r\nimport Tab from '../../components/Tab';\r\nimport AppContext from '../../context/AppContext';\r\nimport creationdatetime from '../../constants/creationdatetime';\r\nimport Article from '../../components/Content/Article';\r\n\r\nconst ContentUpdate = () => {\r\n  // All state variables\r\n\r\n  const [contentDetails, setContentDetails] = useState();\r\n  const [articleData, setArticleData] = useState(false);\r\n  const [activeTab, setActiveTab] = useState('1');\r\n  const [attachmentroomname, setAttachmentRoomName] = useState('');\r\n  const [attachmentfiletypes, setAttachmentFileTypes] = useState('');\r\n  const [attachmentModal, setAttachmentModal] = useState(false);\r\n  const [attachmentData, setDataForAttachment] = useState({\r\n    modelType: '',\r\n  });\r\n  const [editArticles, setEditArticles] = useState(false);\r\n  const [attachmentupdate, setAttachmentUpdate] = useState(false);\r\n  //Attachments\r\n  const dataForAttachment = () => {\r\n    setDataForAttachment({\r\n      modelType: 'attachment',\r\n    });\r\n  };\r\n\r\n  // Navigation and Parameter Constants\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n  const { loggedInuser } = useContext(AppContext);\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  //Setting data in contentDetails\r\n  const handleInputs = (e) => {\r\n    setContentDetails({ ...contentDetails, [e.target.name]: e.target.value });\r\n  };\r\n  //setting data in Description Modal contentDetails\r\n\r\n  //Description Modal\r\n\r\n  // Get content data By content id\r\n  const getContentById = () => {\r\n    api\r\n      .post('/content/getMagazineById', { magazine_id: id })\r\n      .then((res) => {\r\n        setContentDetails(res.data.data);\r\n       \r\n      })\r\n      .catch(() => {\r\n        message('Content Data Not Found', 'info');\r\n      });\r\n  };\r\n  const getArticlesById = () => {\r\n    api\r\n      .post('/content/getArticleByMagazineId', { magazine_id: id })\r\n      .then((res) => {\r\n        setEditArticles(res.data.data);\r\n       \r\n      })\r\n      .catch(() => {\r\n        message('Content Data Not Found', 'info');\r\n      });\r\n  };\r\n  //Edit Content\r\n  const editContentData = () => {\r\n    if (contentDetails.title !== '') {\r\n      contentDetails.modification_date = creationdatetime;\r\n      contentDetails.modified_by = loggedInuser.first_name;\r\n      api\r\n        .post('/content/editMagazine', contentDetails)\r\n        .then(() => {\r\n          message('Record edited successfully', 'success');\r\n        })\r\n        .catch(() => {\r\n          message('Unable to edit record.', 'error');\r\n        });\r\n    } else {\r\n      message('Please fill all required fields', 'warning');\r\n    }\r\n  };\r\n  const [sectionLinked, setSectionLinked] = useState();\r\n  const getsection = () => {\r\n   api.get('/content/getMonth', sectionLinked).then((res) => {\r\n     setSectionLinked(res.data.data);\r\n   });\r\n };\r\n  const tabs = [\r\n    { id: '1', name: 'Articles' },\r\n    { id: '2', name: 'Attachment' },\r\n  ];\r\n\r\n  //Attachments\r\n\r\n  useEffect(() => {\r\n    getContentById();\r\n    getArticlesById();\r\n    getsection();\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      <BreadCrumbs heading={contentDetails && contentDetails.title} />\r\n      <Form>\r\n        <FormGroup>\r\n          <ComponentCardV2>\r\n            <Row>\r\n              <Col>\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    editContentData();\r\n                    setTimeout(() => {\r\n                      navigate('/Content');\r\n                    }, 1100);\r\n                  }}\r\n                >\r\n                  Save\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  color=\"primary\"\r\n                  onClick={() => {\r\n                    editContentData();\r\n                  }}\r\n                >\r\n                  Apply\r\n                </Button>\r\n              </Col>\r\n              <Col>\r\n                <Button\r\n                  color=\"dark\"\r\n                  onClick={() => {\r\n                    navigate('/Magazine');\r\n                    console.log('back to list');\r\n                  }}\r\n                >\r\n                  Back to List\r\n                </Button>\r\n              </Col>\r\n            </Row>\r\n          </ComponentCardV2>\r\n          {/* Content Details Form */}\r\n          <MagazineDetails\r\n            contentDetails={contentDetails}\r\n            handleInputs={handleInputs}\r\n            sectionLinked={sectionLinked}\r\n          ></MagazineDetails>\r\n\r\n          \r\n        </FormGroup>\r\n      </Form>\r\n      <Article\r\n        articleData={articleData}\r\n        setArticleData={setArticleData}\r\n        magazineId={id}\r\n        ></Article>\r\n      <ComponentCard title=\"More Details\">\r\n        <ToastContainer></ToastContainer>\r\n\r\n        <Tab toggle={toggle} tabs={tabs} />\r\n        <TabContent className=\"p-4\" activeTab={activeTab}>\r\n          <TabPane tabId=\"1\">\r\n            {/* Picture and Attachments Form */}\r\n            <Col>\r\n          <Button\r\n            className=\"shadow-none\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              setArticleData(true);\r\n            }}\r\n          >\r\n            Add Articles\r\n          </Button>\r\n        </Col>\r\n            <ArticleDetails editArticles={editArticles}></ArticleDetails>\r\n          </TabPane>\r\n\r\n          <TabPane tabId=\"2\">\r\n            {/* Picture and Attachments Form */}\r\n\r\n            <Form>\r\n              <FormGroup>\r\n                <ComponentCard title=\"Attachments\">\r\n                  <Row>\r\n                    <Col xs=\"12\" md=\"3\" className=\"mb-3\">\r\n                      <Button\r\n                        className=\"shadow-none\"\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                          setAttachmentRoomName('MagazineAttachment');\r\n                          setAttachmentFileTypes(['JPG', 'JPEG', 'PNG', 'GIF', 'PDF']);\r\n                          dataForAttachment();\r\n                          setAttachmentModal(true);\r\n                        }}\r\n                      >\r\n                        <Icon.File className=\"rounded-circle\" width=\"20\" />\r\n                      </Button>\r\n                    </Col>\r\n                  </Row>\r\n                  <AttachmentModalV2\r\n                    moduleId={id}\r\n                    attachmentModal={attachmentModal}\r\n                    setAttachmentModal={setAttachmentModal}\r\n                    roomName={attachmentroomname}\r\n                    fileTypes={attachmentfiletypes}\r\n                    altTagData=\"MagazineRelated Data\"\r\n                    desc=\"MagazineRelated Data\"\r\n                    recordType=\"MagazineRelatedPicture\"\r\n                    mediaType={attachmentData.modelType}\r\n                    update={attachmentupdate}\r\n                    setUpdate={setAttachmentUpdate}\r\n                  />\r\n                  <ViewFileComponentV2\r\n                    moduleId={id}\r\n                    roomName=\"MagazineAttachment\"\r\n                    recordType=\"MagazineRelatedPicture\"\r\n                    update={attachmentupdate}\r\n                    setUpdate={setAttachmentUpdate}\r\n                  />\r\n                </ComponentCard>\r\n              </FormGroup>\r\n            </Form>\r\n          </TabPane>\r\n        </TabContent>\r\n      </ComponentCard>\r\n    </>\r\n  );\r\n};\r\nexport default ContentUpdate;\r\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Edit3 = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M12 20h9\"\n  }), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M16.5 3.5a2.121 2.121 0 0 1 3 3L7 19l-4 1 1-4L16.5 3.5z\"\n  }));\n});\nEdit3.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nEdit3.displayName = 'Edit3';\nexport default Edit3;","import React,{useEffect} from 'react';\r\nimport { Nav, NavItem, NavLink } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\nexport default function Tab({ toggle,tabs }) {\r\n  Tab.propTypes = {\r\n    toggle: PropTypes.func,\r\n    tabs: PropTypes.array\r\n  };\r\n\r\n  // for tab refresh navigation #Renuka 31-05-23\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  useEffect(() => {\r\n   toggle(searchParams.get('tab'))\r\n  }, [searchParams.get('tab')]);\r\n  // End for tab refresh navigation #Renuka 31-05-23\r\n  return (\r\n    <Nav tabs>\r\n\r\n      {tabs?.map((e)=>{\r\n        return (\r\n          <NavItem key={e.id}>\r\n            <NavLink\r\n            key={e.id}\r\n              className={e.id === searchParams.get('tab') ? 'active' : ''}\r\n              onClick={() => {\r\n                setSearchParams({tab:e.id});\r\n                toggle(e.id);\r\n              }}\r\n            >\r\n              {e.name}\r\n            </NavLink>\r\n          </NavItem>\r\n        )\r\n      })}\r\n    </Nav>\r\n  );\r\n}\r\n"],"names":["moment","format","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Edit2","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","React","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","propTypes","PropTypes","displayName","pStyle","textAlign","marginRight","oStyle","outline","border","children","_jsx","Card","className","CardBody","style","ContentMoreDetails","contentDetails","handleInputs","sectionLinked","_jsxs","ComponentCard","title","creationModificationDate","ToastContainer","Row","Col","md","FormGroup","Label","Input","type","onChange","value","name","year","month","selected","map","ele","OrderProductDetails","editArticles","updateAricles","setUpdateArticles","useState","selectedArticle","setSelectedArticle","handleEditClick","element","invoiceTableColumns","grow","wrap","selector","cell","row","Link","to","onClick","Icon","button","sortable","Form","Table","id","index","cursor","author","deleteArticle","articleID","article_id","window","confirm","api","post","then","message","location","reload","catch","ArticleEdit","articleId","InvoiceItem","articleData","setArticleData","magazineId","description","setDescription","categoryLinked","setCategoryLinked","articles","setArticles","magazine_id","e","prevArticles","_objectSpread","useEffect","get","res","data","_Fragment","Modal","isOpen","ModalHeader","Button","ModalBody","category_id","category_title","Editor","editorState","wrapperClassName","editorClassName","onEditorStateChange","handleDataEditor","draftToHtml","convertToRaw","getCurrentContent","ModalFooter","ContentUpdate","setContentDetails","activeTab","setActiveTab","attachmentroomname","setAttachmentRoomName","attachmentfiletypes","setAttachmentFileTypes","attachmentModal","setAttachmentModal","attachmentData","setDataForAttachment","modelType","setEditArticles","attachmentupdate","setAttachmentUpdate","useParams","navigate","useNavigate","loggedInuser","useContext","AppContext","editContentData","modification_date","creationdatetime","modified_by","first_name","setSectionLinked","BreadCrumbs","heading","ComponentCardV2","setTimeout","console","log","MagazineDetails","Article","Tab","toggle","tab","tabs","TabContent","TabPane","tabId","ArticleDetails","xs","AttachmentModalV2","moduleId","roomName","fileTypes","altTagData","desc","recordType","mediaType","update","setUpdate","ViewFileComponentV2","prop","useLocation","firstUrl","pathname","split","secondUrl","Breadcrumb","BreadcrumbItem","tag","active","Edit3","searchParams","setSearchParams","useSearchParams","Nav","NavItem","NavLink"],"sourceRoot":""}