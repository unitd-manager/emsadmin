{"version":3,"file":"static/js/6103.67bfee4d.chunk.js","mappings":"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","sources":["components/Tender/AttachmentModalV2.js","components/ProjectModal/ViewFileComponentV2.js","components/CreationModification.js","components/ComponentCard.js","components/PurchaseOrder/AddPoModal.js","components/PurchaseOrder/AttachmentTab.js","components/PurchaseOrder/PurchaseOrderLineItem.js","components/PurchaseOrder/ViewHistoryModal.js","components/PurchaseOrder/DeliveryOrderEditModal.js","components/PurchaseOrder/PurchaseOrderDetailsPart.js","data/PurchaseOrder/PurchaseTableColumn.js","components/PurchaseOrder/ProductLinkedTable.js","components/PDF/PdfDeliveryOrderPO.js","components/project/Tab.js","components/ApiButton.js","views/EditData/PurchaseOrderEdit.js","layouts/breadcrumbs/BreadCrumbs.js","components/Tender/ViewNote.js","components/Tender/AddNote.js"],"sourcesContent":["import React,{useState} from 'react'\r\nimport { FormGroup,Button,Modal,ModalHeader,ModalBody, ModalFooter } from 'reactstrap';\r\nimport PropTypes from 'prop-types'\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\nimport api from '../../constants/api';\r\nimport message from '../Message';\r\n\r\nconst AttachmentModalV2 = ({attachmentModal,setAttachmentModal,moduleId,roomName,fileTypes,altTagData, desc}) => {\r\n\r\n    AttachmentModalV2.propTypes = {\r\n        attachmentModal: PropTypes.bool,\r\n        setAttachmentModal: PropTypes.func,\r\n        moduleId:PropTypes.string,\r\n        roomName:PropTypes.string,\r\n        altTagData:PropTypes.string,\r\n        desc:PropTypes.string,\r\n        fileTypes:PropTypes.any,\r\n      }\r\n      \r\n        const [file, setFile] = useState([]);\r\n        const [ handleValue, setHandleValue ] = useState()\r\n       const[uploaded, setUploaded]=useState(null)\r\n\r\n        const handleChange = (fiels) => {\r\n          \r\n            const arrayOfObj = Object.entries(fiels).map((e) => ( e[1]  ));\r\n\r\n            setFile(fiels);\r\n            setHandleValue(arrayOfObj);\r\n            console.log(fiels)\r\n        };\r\n\r\n        const uploadFile = () =>{\r\n            \r\n            if(file){\r\n\r\n               // getFiles();\r\n            \r\n          \r\n                const data = new FormData() \r\n                const arrayOfObj = Object.entries(file).map((e) => (  e[1] ));\r\n\r\n                arrayOfObj.forEach((ele) => {\r\n                    data.append(`files`, ele);\r\n                  });\r\n                //data.append('file', file)\r\n                data.append('record_id', moduleId)\r\n                data.append('room_name', roomName)\r\n                data.append('alt_tag_data', altTagData)\r\n                data.append('description', desc)\r\n\r\n                api.post('/file/uploadFiles',data,{onUploadProgress:(filedata)=>{\r\n                    console.log( Math.round((filedata.loaded/filedata.total)*100))\r\n                    setUploaded( Math.round((filedata.loaded/filedata.total)*100))\r\n                   \r\n                }}).then(()=>{\r\n     \r\n                    // setAttachmentModal(false)\r\n                    message('Files Uploaded Successfully','success')\r\n                    \r\n                    // setTimeout(() => {\r\n                    //     window.location.reload()\r\n                    // }, 400);\r\n                }).catch(()=>{\r\n                    setAttachmentModal(false)\r\n                    message('Unable to upload File','error')\r\n                    // setTimeout(() => {\r\n                    //     window.location.reload()\r\n                    // }, 400);\r\n                })\r\n            }else{\r\n                message('No files selected','info')\r\n            }\r\n        }\r\n      \r\n    \r\n  return (\r\n\r\n    \r\n    <div>\r\n        \r\n        <Modal isOpen={attachmentModal} >\r\n            <ModalHeader>Upload Media</ModalHeader>\r\n            <ModalBody>\r\n                <FormGroup>\r\n                  \r\n                <FileUploader\r\n                        multiple\r\n                        handleChange={handleChange}\r\n                        name=\"file\"\r\n                        types={fileTypes}\r\n                    />\r\n                    \r\n\r\n                    {handleValue ? (\r\n                        handleValue.map((e) => (\r\n                        <div>\r\n                            <span> Name: {e.name} </span>\r\n                        </div>\r\n                        ))\r\n                    ) : (\r\n                        <span>No file selected</span>\r\n                    )}\r\n\r\n                </FormGroup>\r\n            { uploaded &&  <div className='progress mt-2'>\r\n                    <div className=\"progress-bar h-4\" role='progressbar'\r\n                    aria-valuenow={uploaded}\r\n                    aria-valuemin='0'\r\n                    aria-valuemax='100'\r\n                    style={{width:`${uploaded}%`}}>\r\n                      {`${uploaded}% uploaded`}\r\n                    </div>\r\n                </div>}\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button color=\"primary\" className='shadow-none' onClick={()=>{\r\n                    uploadFile()\r\n                }}>Upload</Button>\r\n                <Button color=\"secondary\" className='shadow-none' onClick={()=>{ window.location.reload();setAttachmentModal(false) }}>Cancel</Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AttachmentModalV2","import React, { useEffect, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport PropTypes from 'prop-types';\r\nimport * as Icon from 'react-feather';\r\nimport message from '../Message';\r\nimport api from '../../constants/api';\r\n\r\nfunction ViewFileComponentV2({ moduleId, roomName }) {\r\n  ViewFileComponentV2.propTypes = {\r\n    moduleId: PropTypes.string,\r\n    roomName: PropTypes.string,\r\n  };\r\n\r\n  const tableStyle = {};\r\n\r\n  const [getFile, setGetFile] = useState(null);\r\n\r\n  const getFiles = () => {\r\n    api.post('/file/getListOfFiles', { record_id: moduleId, room_name: roomName }).then((res) => {\r\n      setGetFile(res.data);\r\n    });\r\n  };\r\n\r\n  const deleteFile = (fileId) => {\r\n    Swal.fire({\r\n      title: `Are you sure?`,\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!',\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        api\r\n          .post('/file/deleteFile', { media_id: fileId })\r\n          .then((res) => {\r\n            console.log(res);\r\n            Swal.fire('Deleted!', 'Media has been deleted.', 'success');\r\n            //setViewLineModal(false)\r\n\r\n            window.location.reload();\r\n          })\r\n          .catch(() => {\r\n            message('Unable to Delete Media', 'info');\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFiles();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <table style={tableStyle}>\r\n        <thead>\r\n          <tr style={tableStyle}>\r\n            <th style={tableStyle}>\r\n             File Name\r\n            </th>\r\n            <th width=\"5%\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n        {getFile ? (\r\n          getFile.map((res) => {\r\n            return (\r\n                <tr key={res.media_id}>\r\n                  <td style={tableStyle}>\r\n                      <a\r\n                        href={`https://ems.unitdtechnologies.com/storage/${res.name}`}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                      >\r\n                        <img\r\n  src={`https://ems.unitdtechnologies.com/storage/${res.name}`} \r\n  width={200}\r\n  height={200}\r\n  alt={`${res.name}`}\r\n  \r\n/> \r\n{/* {res.name} */}\r\n                      </a>\r\n                  </td>\r\n                  <td style={tableStyle}>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn shadow-none\"\r\n                      onClick={() => {\r\n                        deleteFile(res.media_id);\r\n                      }}\r\n                    >\r\n                      <Icon.Trash2 />{' '}\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n            );\r\n          })\r\n        ) : (\r\n          <tr><td><p>no files uploaded yet</p></td></tr>\r\n        )}\r\n        </tbody>\r\n        \r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ViewFileComponentV2;\r\n","import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n                <small> Creation: {details && details.created_by} {details && details.creation_date}</small>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n                <small> Modified: {details && details.modified_by} {details && details.modification_date}</small>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n   );\r\n}","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      {/* <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n        <p tag='h2' className=\"float-end small fs-5\">{righttitle}</p>\r\n      </CardTitle> */}\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate:PropTypes.any\r\n};\r\n\r\nexport default ComponentCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport {\r\n  Row,\r\n  Col,\r\n  FormGroup,\r\n  Input,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Label,\r\n} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport PropTypes from 'prop-types';\r\nimport * as $ from 'jquery';\r\nimport random from 'random';\r\nimport Select from 'react-select';\r\nimport api from '../../constants/api';\r\nimport message from '../Message';\r\n\r\nconst AddPoModal = ({\r\n  projectId,\r\n  supplierId,\r\n  addPurchaseOrderModal,\r\n  setAddPurchaseOrderModal,\r\n  PurchaseOrderId,\r\n}) => {\r\n  AddPoModal.propTypes = {\r\n    addPurchaseOrderModal: PropTypes.bool,\r\n    projectId: PropTypes.string,\r\n    supplierId: PropTypes.any,\r\n    PurchaseOrderId: PropTypes.any,\r\n    setAddPurchaseOrderModal: PropTypes.func,\r\n  };\r\n  const [addNewProductModal, setAddNewProductModal] = useState(false);\r\n  const [getProductValue, setProductValue] = useState();\r\n  const [productDetail, setProductDetail] = useState({\r\n    category_id: null,\r\n    sub_category_id: null,\r\n    title: '',\r\n    product_code: '',\r\n    qty_in_stock: null,\r\n    price: null,\r\n    published: 0,\r\n  });\r\n  const [addMoreItem, setMoreItem] = useState([\r\n    {\r\n      id: random.int(1, 99).toString(),\r\n      itemId: '',\r\n      unit: '',\r\n      qty: '',\r\n      price: '',\r\n      mrp: '',\r\n      gst: '',\r\n      description: '',\r\n    },\r\n    {\r\n      id: random.int(0, 9999).toString(),\r\n      itemId: '',\r\n      unit: '',\r\n      qty: '',\r\n      price: '',\r\n      mrp: '',\r\n      gst: '',\r\n      description: '',\r\n    },\r\n    {\r\n      id: random.int(0, 9999).toString(),\r\n      itemId: '',\r\n      unit: '',\r\n      qty: '',\r\n      price: '',\r\n      mrp: '',\r\n      gst: '',\r\n      description: '',\r\n    },\r\n  ]);\r\n\r\n  const AddNewLineItem = () => {\r\n    setMoreItem([\r\n      ...addMoreItem,\r\n      {\r\n        id: random.int(0, 9999).toString(),\r\n        itemId: '',\r\n        unit: '',\r\n        qty: '',\r\n        price: '',\r\n        mrp: '',\r\n        gst: '',\r\n        description: '',\r\n      },\r\n    ]);\r\n  };\r\n\r\n  const [insertPurchaseOrderData] = useState({\r\n    po_code: '',\r\n    supplier_id: supplierId,\r\n    contact_id_supplier: '',\r\n    delivery_terms: '',\r\n    status: 'test',\r\n    project_id: projectId,\r\n    flag: 1,\r\n    creation_date: new Date(),\r\n    modification_date: new Date(),\r\n    created_by: '1',\r\n    modified_by: '1',\r\n    supplier_reference_no: '',\r\n    our_reference_no: '',\r\n    shipping_method: '',\r\n    payment_terms: '',\r\n    delivery_date: '',\r\n    po_date: '',\r\n    shipping_address_flat: '',\r\n    shipping_address_street: '',\r\n    shipping_address_country: '',\r\n    shipping_address_po_code: '',\r\n    expense_id: 0,\r\n    staff_id: 0,\r\n    purchase_order_date: new Date(),\r\n    payment_status: '0',\r\n    title: 'Purchase Order',\r\n    priority: '1',\r\n    follow_up_date: new Date(),\r\n    notes: 'test',\r\n    supplier_inv_code: '',\r\n    gst: 0,\r\n    gst_percentage: '10%',\r\n    delivery_to: '',\r\n    contact: '',\r\n    mobile: '',\r\n    payment: '0',\r\n    project: '',\r\n  });\r\n\r\n  const handleNewProductDetails = (e) => {\r\n    setProductDetail({ ...productDetail, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  //   Get Products\r\n  const getProduct = () => {\r\n    api.get('/product/getProducts').then((res) => {\r\n      const items = res.data.data;\r\n      const finaldat = [];\r\n      items.forEach((item) => {\r\n        finaldat.push({ value: item.product_id, label: item.title });\r\n      });\r\n      setProductValue(finaldat);\r\n    });\r\n  };\r\n\r\n  const insertProduct = () => {\r\n    api\r\n      .post('/purchaseorder/insertPurchaseProduct', productDetail)\r\n      .then((res) => {\r\n        const insertedDataId = res.data.data.insertId;\r\n        message('Product inserted successfully.', 'success');\r\n        api\r\n          .post('/inventory/insertinventory', { product_id: insertedDataId })\r\n          .then(() => {\r\n            message('inventory created successfully.', 'success');\r\n            getProduct();\r\n          })\r\n          .catch(() => {\r\n            message('Unable to create inventory.', 'error');\r\n          });\r\n      })\r\n      .catch(() => {\r\n        message('Unable to insert product.', 'error');\r\n      });\r\n  };\r\n\r\n  // Materials Purchased\r\n  const TabMaterialsPurchased = () => {\r\n    api\r\n      .get('/purchaseorder/TabPurchaseOrderLineItem')\r\n      .then((res) => {\r\n        const items = res.data.data;\r\n        const finaldat = [];\r\n        items.forEach((item) => {\r\n          finaldat.push({ value: item.product_id, label: item.title });\r\n        });\r\n      })\r\n      .catch(() => {\r\n        message('Tab Purchase Order not found', 'info');\r\n      });\r\n  };\r\n  const poProduct = (itemObj) => {\r\n    api\r\n      .post('/purchaseorder/insertPoProduct', {\r\n        purchase_order_id: PurchaseOrderId,\r\n        item_title: itemObj.title,\r\n        quantity: itemObj.qty,\r\n        unit: itemObj.unit,\r\n        amount: 0,\r\n        description: itemObj.description,\r\n        creation_date: new Date(),\r\n        modification_date: new Date(),\r\n        created_by: '1',\r\n        modified_by: '1',\r\n        status: 'In Progress',\r\n        cost_price: itemObj.cost_price,\r\n        selling_price: itemObj.mrp,\r\n        qty_updated: parseInt(itemObj.qty, 10),\r\n        qty: parseInt(itemObj.qty, 10),\r\n        product_id: itemObj.product_id,\r\n        supplier_id: insertPurchaseOrderData.supplier_id,\r\n        gst: itemObj.gst,\r\n        damage_qty: 0,\r\n        brand: '',\r\n        qty_requested: 0,\r\n        qty_delivered: 0,\r\n        price: itemObj.price,\r\n      })\r\n      .then(() => {\r\n        message('Product Added!', 'success');\r\n        setTimeout(() => {\r\n          window.location.reload();\r\n        }, 300);\r\n      })\r\n      .catch(() => {\r\n        message('Unable to add Product!', 'error');\r\n      });\r\n  };\r\n\r\n  //     const insertlineItem = () => {\r\n  //        addMoreItem.forEach(pItems=>{\r\n  //         if(pItems.item !== ''){\r\n  //             poProduct(pItems)\r\n  //         }\r\n\r\n  //        })\r\n  //    }\r\n\r\n  const getAllValues = () => {\r\n    const result = [];\r\n    const oldArray = addMoreItem;\r\n    $('.lineitem tbody tr').each(() => {\r\n      const allValues = {};\r\n      $(this)\r\n        .find('input')\r\n        .each(() => {\r\n          const fieldName = $(this).attr('name');\r\n          allValues[fieldName] = $(this).val();\r\n        });\r\n      result.push(allValues);\r\n    });\r\n    oldArray.forEach((obj) => {\r\n      if (obj.id) {\r\n        /* eslint-disable */\r\n        // const objId = parseInt(obj.id)\r\n        const foundObj = oldArray.find((el) => el.id === obj.id);\r\n        if (foundObj) {\r\n          obj.product_id = foundObj.product_id;\r\n          obj.title = foundObj.title;\r\n          obj.item_title = foundObj.item_title;\r\n        }\r\n        poProduct(foundObj);\r\n      }\r\n    });\r\n\r\n  };\r\n\r\n  function updateState(index, property, e) {\r\n    const copyDeliverOrderProducts = [...addMoreItem];\r\n    const updatedObject = { ...copyDeliverOrderProducts[index], [property]: e.target.value };\r\n    copyDeliverOrderProducts[index] = updatedObject;\r\n    setMoreItem(copyDeliverOrderProducts);\r\n  }\r\n\r\n  useEffect(() => {\r\n    getProduct();\r\n    TabMaterialsPurchased();\r\n  }, []);\r\n  useEffect(() => {\r\n    setMoreItem([\r\n      {\r\n        id: random.int(1, 99).toString(),\r\n        itemId: '',\r\n        unit: '',\r\n        qty: '',\r\n        price: '',\r\n        mrp: '',\r\n        gst: '',\r\n        description: '',\r\n      },\r\n      {\r\n        id: random.int(0, 9999).toString(),\r\n        itemId: '',\r\n        unit: '',\r\n        qty: '',\r\n        price: '',\r\n        mrp: '',\r\n        gst: '',\r\n        description: '',\r\n      },\r\n      {\r\n        id: random.int(0, 9999).toString(),\r\n        itemId: '',\r\n        unit: '',\r\n        qty: '',\r\n        price: '',\r\n        mrp: '',\r\n        gst: '',\r\n        description: '',\r\n      },\r\n    ]);\r\n  }, [addPurchaseOrderModal]);\r\n\r\n  const onchangeItem = (str, itemId) => {\r\n    const element = addMoreItem.find((el) => el.id === itemId);\r\n    element.title = str.label;\r\n    element.item_title = str.label;\r\n    element.product_id = str.value.toString();\r\n    setMoreItem(addMoreItem);\r\n  };\r\n\r\n  // Clear row value\r\n  const ClearValue = (ind) => {\r\n    setMoreItem((current) =>\r\n      current.filter((obj) => {\r\n        return obj.id !== ind.id;\r\n      }),\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal size=\"xl\" isOpen={addPurchaseOrderModal}>\r\n        <ModalHeader>Add Product</ModalHeader>\r\n\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <Row>\r\n              <Col md=\"12\" className=\"mb-4\">\r\n                <Row>\r\n                  <Col md=\"3\">\r\n                    <Button\r\n                      color=\"primary\"\r\n                      className=\"shadow-none\"\r\n                      onClick={() => {\r\n                        setAddNewProductModal(true);\r\n                      }}\r\n                    >\r\n                      Add New Product\r\n                    </Button>\r\n                  </Col>\r\n                  <Col md=\"3\">\r\n                    <Button\r\n                      color=\"primary\"\r\n                      className=\"shadow-none\"\r\n                      onClick={() => {\r\n                        AddNewLineItem();\r\n                      }}\r\n                    >\r\n                      Add Item\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                <br />\r\n              </Col>\r\n            </Row>\r\n\r\n            <table className=\"lineitem\">\r\n              <thead>\r\n                <tr className=\"\">\r\n                  <th width=\"20%\" scope=\"col\">\r\n                    Item\r\n                  </th>\r\n                  <th scope=\"col\">Unit</th>\r\n                  <th scope=\"col\">Quantity</th>\r\n                  <th scope=\"col\">Cost Price (without GST)</th>\r\n                  <th scope=\"col\">Selling Price (without GST)</th>\r\n                  <th scope=\"col\">GST</th>\r\n                  <th scope=\"col\"></th>\r\n                </tr>\r\n              </thead>\r\n              <tbody>\r\n                {addMoreItem.map((item, index) => {\r\n                  return (\r\n                    <tr key={item.id}>\r\n                      <td data-label=\"title\">\r\n                        <Select\r\n                          key={item.id}\r\n                          defaultValue={{ value: item.product_id, label: item.title }}\r\n                          onChange={(e) => {\r\n                            onchangeItem(e, item.id);\r\n                          }}\r\n                          options={getProductValue}\r\n                        />\r\n                        <Input value={item.product_id} type=\"hidden\" name=\"product_id\"></Input>\r\n                        <Input value={item.title} type=\"hidden\" name=\"title\"></Input>\r\n                      </td>\r\n\r\n                      <td data-label=\"Unit\">\r\n                        <Input\r\n                          defaultValue={item.uom}\r\n                          type=\"text\"\r\n                          name=\"unit\"\r\n                          onChange={(e) => updateState(index, 'unit', e)}\r\n                          value={insertPurchaseOrderData && insertPurchaseOrderData.unit}\r\n                        />\r\n                      </td>\r\n                      <td data-label=\"Qty\">\r\n                        <Input\r\n                          defaultValue={item.qty}\r\n                          type=\"number\"\r\n                          name=\"qty\"\r\n                          onChange={(e) => updateState(index, 'qty', e)}\r\n                          value={insertPurchaseOrderData && insertPurchaseOrderData.qty}\r\n                        />\r\n                      </td>\r\n                      <td data-label=\"Cost Price\">\r\n                        <Input\r\n                          defaultValue={item.cost_price}\r\n                          type=\"number\"\r\n                          onChange={(e) => updateState(index, 'cost_price', e)}\r\n                          value={insertPurchaseOrderData && insertPurchaseOrderData.cost_price}\r\n                          name=\"cost_price\"\r\n                        />\r\n                      </td>\r\n                      <td data-label=\"Selling Price\">\r\n                        <Input\r\n                          type=\"input\"\r\n                          defaultValue={item.price}\r\n                          name=\"mrp\"\r\n                          onChange={(e) => updateState(index, 'mrp', e)}\r\n                          value={insertPurchaseOrderData && insertPurchaseOrderData.mrp}\r\n                        />\r\n                        {item.price}\r\n                      </td>\r\n                      <td data-label=\"GST\">\r\n                        <Input\r\n                          type=\"number\"\r\n                          defaultValue={item.gst}\r\n                          name=\"gst\"\r\n                          onChange={(e) => updateState(index, 'gst', e)}\r\n                          value={insertPurchaseOrderData && insertPurchaseOrderData.gst}\r\n                        />\r\n                      </td>\r\n                      <td data-label=\"Action\">\r\n                        {' '}\r\n                        <Input defaultValue={item.id} type=\"hidden\" name=\"id\"></Input>\r\n                        <Link to=\"\">\r\n                          <span\r\n                            onClick={() => {\r\n                              ClearValue(item);\r\n                            }}\r\n                          >\r\n                            Clear\r\n                          </span>\r\n                        </Link>\r\n                      </td>\r\n                    </tr>\r\n                  );\r\n                })}\r\n              </tbody>\r\n            </table>\r\n          </FormGroup>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"primary\"\r\n            className=\"shadow-none\"\r\n            onClick={() => {\r\n              getAllValues();\r\n              getProduct();\r\n            }}\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Button\r\n            color=\"secondary\"\r\n            className=\"shadow-none\"\r\n            onClick={() => {\r\n              setAddPurchaseOrderModal(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n\r\n      {/* Add New Product Modal */}\r\n      <Modal isOpen={addNewProductModal}>\r\n        <ModalHeader>Add New Products</ModalHeader>\r\n\r\n        <ModalBody>\r\n          <FormGroup>\r\n            <Row>\r\n              <Col md=\"12\" className=\"mb-4\">\r\n                <Row>\r\n                  <FormGroup>\r\n                    <Row>\r\n                      <Label sm=\"3\">\r\n                        Product Name <span className=\"required\"> *</span>\r\n                      </Label>\r\n                      <Col sm=\"8\">\r\n                        <Input\r\n                          type=\"text\"\r\n                          name=\"title\"\r\n                          onChange={handleNewProductDetails}\r\n                          value={productDetail.title}\r\n                        />\r\n                      </Col>\r\n                    </Row>\r\n                  </FormGroup>\r\n                </Row>\r\n              </Col>\r\n            </Row>\r\n          </FormGroup>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            color=\"primary\"\r\n            className=\"shadow-none\"\r\n            onClick={() => {\r\n              setAddNewProductModal(false);\r\n              insertProduct();\r\n              getProduct();\r\n              setTimeout(() => {\r\n                window;\r\n              }, 300);\r\n            }}\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Button\r\n            color=\"secondary\"\r\n            className=\"shadow-none\"\r\n            onClick={() => {\r\n              setAddNewProductModal(false);\r\n            }}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AddPoModal;\r\n","import React, { useState } from 'react';\r\nimport { Row, Col, Form, FormGroup, Button } from 'reactstrap';\r\nimport * as Icon from 'react-feather';\r\nimport PropTypes from 'prop-types';\r\nimport ComponentCard from '../ComponentCard';\r\nimport AttachmentModalV2 from '../Tender/AttachmentModalV2';\r\nimport ViewFileComponentV2 from '../ProjectModal/ViewFileComponentV2';\r\n\r\nfunction AttachmentTab({\r\n  dataForPicture,\r\n  dataForAttachment,\r\n  setAttachmentModal,\r\n  id,\r\n  attachmentModal,\r\n  pictureData,\r\n  attachmentData,\r\n}) {\r\n  AttachmentTab.propTypes = {\r\n    dataForPicture: PropTypes.any,\r\n    dataForAttachment: PropTypes.any,\r\n    setAttachmentModal: PropTypes.func,\r\n    id: PropTypes.any,\r\n    attachmentModal: PropTypes.bool,\r\n    pictureData: PropTypes.any,\r\n    attachmentData: PropTypes.any,\r\n  };\r\n  const [roomName, setRoomName] = useState('');\r\n  const [fileTypes, setFileTypes] = useState('');\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Col md=\"6\">\r\n          <Form>\r\n            <FormGroup>\r\n              <ComponentCard title=\"Picture\">\r\n                <Row>\r\n                  <Col xs=\"12\" md=\"6\" className=\"mb-3\">\r\n                    <Button\r\n                      className=\"shadow-none\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        setRoomName('PurchaseorderPic');\r\n                        setFileTypes(['JPG', 'PNG', 'GIF']);\r\n                        dataForPicture();\r\n                        setAttachmentModal(true);\r\n                      }}\r\n                    >\r\n                      <Icon.Image className=\"rounded-circle\" width=\"20\" />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                <AttachmentModalV2\r\n                  moduleId={id}\r\n                  attachmentModal={attachmentModal}\r\n                  setAttachmentModal={setAttachmentModal}\r\n                  roomName={roomName}\r\n                  fileTypes={fileTypes}\r\n                  altTagData=\"Product Data\"\r\n                  desc=\"Product Data\"\r\n                  recordType=\"Picture\"\r\n                  mediaType={pictureData.modelType}\r\n                />\r\n                <ViewFileComponentV2\r\n                  moduleId={id}\r\n                  roomName=\"PurchaseorderPic\"\r\n                  recordType=\"Picture\"\r\n                />\r\n              </ComponentCard>\r\n            </FormGroup>\r\n          </Form>\r\n        </Col>\r\n        <Col md=\"6\">\r\n          <Form>\r\n            <FormGroup>\r\n              <ComponentCard title=\"Attachments\">\r\n                <Row>\r\n                  <Col xs=\"12\" md=\"6\" className=\"mb-3\">\r\n                    <Button\r\n                      className=\"shadow-none\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        setRoomName('PurchaseorderAttachment');\r\n                        setFileTypes(['JPG', 'PNG', 'GIF', 'PDF']);\r\n                        dataForAttachment();\r\n                        setAttachmentModal(true);\r\n                      }}\r\n                    >\r\n                      <Icon.File className=\"rounded-circle\" width=\"20\" />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                <AttachmentModalV2\r\n                  moduleId={id}\r\n                  attachmentModal={attachmentModal}\r\n                  setAttachmentModal={setAttachmentModal}\r\n                  roomName={roomName}\r\n                  fileTypes={fileTypes}\r\n                  altTagData=\"ProductRelated Data\"\r\n                  desc=\"ProductRelated Data\"\r\n                  recordType=\"RelatedPicture\"\r\n                  mediaType={attachmentData.modelType}\r\n                />\r\n                <ViewFileComponentV2\r\n                  moduleId={id}\r\n                  roomName=\"PurchaseorderAttachment\"\r\n                  recordType=\"RelatedPicture\"\r\n                />\r\n              </ComponentCard>\r\n            </FormGroup>\r\n          </Form>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default AttachmentTab;\r\n","import React from 'react';\r\nimport {\r\n  CardBody,\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Button,\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n} from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport * as $ from 'jquery';\r\n\r\nconst PurchaseOrderlineItemEdit = ({\r\n  product,\r\n  editModal,\r\n  editPoProductData,\r\n  setEditModal,\r\n  handlePOInputs,\r\n}) => {\r\n  PurchaseOrderlineItemEdit.propTypes = {\r\n    product: PropTypes.object,\r\n    editPoProductData: PropTypes.func,\r\n    editModal: PropTypes.bool,\r\n    setEditModal: PropTypes.func,\r\n    handlePOInputs: PropTypes.func,\r\n  };\r\n\r\n  const getAllValues = () => {\r\n    const result = [];\r\n    $('.lineitem tbody tr').each(() => {\r\n      const allValues = {};\r\n      $(this)\r\n        .find('input')\r\n        .each(() => {\r\n          const fieldName = $(this).attr('name');\r\n          allValues[fieldName] = $(this).val();\r\n        });\r\n      result.push(allValues);\r\n    });\r\n    result.forEach((obj) => {\r\n      if (obj.qty) {\r\n        if (obj.po_product_id !== '') {\r\n          editPoProductData(obj);\r\n        }\r\n      }\r\n    });\r\n  };\r\n  //Calculation for Invoice Item\r\n  const calculateTotal = () => {\r\n    const result = [];\r\n    $('.lineitem tbody tr').each(() => {\r\n      const allValues = {};\r\n      $(this)\r\n        .find('input')\r\n        .each(() => {\r\n          const fieldName = $(this).attr('name');\r\n          allValues[fieldName] = $(this).val();\r\n          allValues.price = allValues.qty * allValues.cost_price;\r\n        });\r\n      result.push(allValues);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Modal isOpen={editModal}>\r\n        <ModalHeader>\r\n          Edit Product\r\n          <Button\r\n            className=\"shadow-none\"\r\n            color=\"secondary\"\r\n            onClick={() => {\r\n              setEditModal(false);\r\n            }}\r\n          >\r\n            X\r\n          </Button>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <CardBody>\r\n                <Form>\r\n                  <Row>\r\n                    <FormGroup>\r\n                      <Label>Qty</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"qty\"\r\n                        onChange={handlePOInputs}\r\n                        value={product && product.qty}\r\n                      />\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label>Damaged Quantity</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"damage_qty\"\r\n                        onChange={handlePOInputs}\r\n                        value={product && product.damage_qty}\r\n                      ></Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label>Add to Stock</Label>\r\n                      <Input\r\n                        type=\"text\"\r\n                        name=\"qty_delivered\"\r\n                        onChange={handlePOInputs}\r\n                        value={product && product.qty_delivered}\r\n                      ></Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label>Cost Price</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"cost_price\"\r\n                        onChange={handlePOInputs}\r\n                        value={product && product.cost_price}\r\n                        onBlur={() => {\r\n                          calculateTotal();\r\n                        }}\r\n                      ></Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label>Selling Price</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"selling_price\"\r\n                        onChange={handlePOInputs}\r\n                        value={product && product.selling_price}\r\n                      ></Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label>GST%</Label>\r\n                      <Input\r\n                        type=\"number\"\r\n                        name=\"gst\"\r\n                        onChange={handlePOInputs}\r\n                        value={product && product.gst}\r\n                      ></Input>\r\n                    </FormGroup>\r\n                    <FormGroup>\r\n                      <Label>Status</Label>\r\n                      <Input\r\n                        type=\"select\"\r\n                        value={product && product.status}\r\n                        name=\"status\"\r\n                        onChange={handlePOInputs}\r\n                      >\r\n                        <option defaultValue=\"selected\">Please Select</option>\r\n                        <option value=\"in progress\">in progress</option>\r\n                        <option value=\"sent to supplier\">sent to supplier</option>\r\n                        <option value=\"order acknowledged\">order acknowledged</option>\r\n                        <option value=\"partially received\">partially received</option>\r\n                        <option value=\"closed\">closed</option>\r\n                        <option value=\"on hold\">on hold</option>\r\n                        <option value=\"cancelled\">cancelled</option>\r\n                      </Input>\r\n                    </FormGroup>\r\n                  </Row>\r\n                </Form>\r\n              </CardBody>\r\n            </Col>\r\n          </Row>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            className=\"shadow-none\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              //insertPayment();\r\n              editPoProductData();\r\n              getAllValues();\r\n              setEditModal(false);\r\n              setTimeout(() => {\r\n                window.location.reload();\r\n              }, 300);\r\n            }}\r\n          >\r\n            Save & Continue\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PurchaseOrderlineItemEdit;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  Row,\r\n  Col,\r\n  CardBody,\r\n  Button,\r\n  Table,\r\n} from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport api from '../../constants/api';\r\nimport message from '../Message';\r\n\r\nfunction ViewHistoryModal({ viewHistoryModal, setViewHistoryModal, productId, supplierId }) {\r\n  ViewHistoryModal.propTypes = {\r\n    viewHistoryModal: PropTypes.bool,\r\n    setViewHistoryModal: PropTypes.func,\r\n    productId: PropTypes.any,\r\n    supplierId: PropTypes.any,\r\n  };\r\n\r\n  const [fromSame, setFromSame] = useState([]);\r\n  const [fromOthers, setFromOthers] = useState([]);\r\n\r\n  //get history from same supplier\r\n  const getProductsFromSameSupplier = () => {\r\n    api\r\n      .post('/purchaseorder/getProductsfromSupplier', {\r\n        product_id: productId,\r\n        supplier_id: supplierId,\r\n      })\r\n      .then((res) => {\r\n        setFromSame(res.data.data);\r\n      })\r\n      .catch(() => {\r\n        message('Product history Data Not Found', 'info');\r\n      });\r\n  };\r\n  //get history from other supplier\r\n  const getProductshistory = () => {\r\n    api\r\n      .post('/purchaseorder/getProductsfromOtherSuppliers', {\r\n        product_id: productId,\r\n        supplier_id: supplierId,\r\n      })\r\n      .then((res) => {\r\n        setFromOthers(res.data.data);\r\n      })\r\n      .catch(() => {\r\n        message('Product history Data Not Found', 'info');\r\n      });\r\n  };\r\n  const supplierColumn = [\r\n    {\r\n      name: 'PO Code\t',\r\n    },\r\n    {\r\n      name: 'Supplier Name\t',\r\n    },\r\n    {\r\n      name: 'Date\t',\r\n    },\r\n    {\r\n      name: 'Price',\r\n    },\r\n    {\r\n      name: 'Qty\t',\r\n    },\r\n  ];\r\n  useEffect(() => {\r\n    getProductsFromSameSupplier();\r\n    getProductshistory();\r\n  }, []);\r\n  return (\r\n    <div>\r\n      <Modal size=\"l\" isOpen={viewHistoryModal}>\r\n        <ModalHeader>Product Sales history</ModalHeader>\r\n        <ModalBody>\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <CardBody>\r\n                <Form>\r\n                  <Row>\r\n                    <h5>Purchase History from this supplier</h5>\r\n                    <div>\r\n                      <Table id=\"example\" className=\"display border border-secondary rounded\">\r\n                        <tr>\r\n                          {supplierColumn.map((cell) => {\r\n                            return <td key={cell.name}>{cell.name}</td>;\r\n                          })}\r\n                        </tr>\r\n\r\n                        {fromSame &&\r\n                          fromSame.map((element) => {\r\n                            return (\r\n                              <tr key={element.product_id}>\r\n                                <td>{element.po_code}</td>\r\n                                <td>{element.supplier_name}</td>\r\n                                <td>{moment(element.po_date).format('YYYY-MM-DD')}</td>\r\n                                <td>{element.cost_price}</td>\r\n                                <td>{element.qty}</td>\r\n                              </tr>\r\n                            );\r\n                          })}\r\n                      </Table>\r\n                    </div>\r\n                  </Row>\r\n                </Form>\r\n\r\n                <Form>\r\n                  <Row>\r\n                    <h5>Purchase History from other supplier</h5>\r\n                    <div>\r\n                      <Table id=\"example\" className=\"display border border-secondary rounded\">\r\n                        <tr>\r\n                          {supplierColumn.map((cell) => {\r\n                            return <td key={cell.name}>{cell.name}</td>;\r\n                          })}\r\n                        </tr>\r\n\r\n                        {fromOthers &&\r\n                          fromOthers.map((element) => {\r\n                            return (\r\n                              <tr key={element.product_id}>\r\n                                <td>{element.po_code}</td>\r\n                                <td>{element.supplier_name}</td>\r\n                                <td>{moment(element.po_date).format('YYYY-MM-DD')}</td>\r\n                                <td>{element.cost_price}</td>\r\n                                <td>{element.qty}</td>\r\n                              </tr>\r\n                            );\r\n                          })}\r\n                      </Table>\r\n                    </div>\r\n                  </Row>\r\n                </Form>\r\n              </CardBody>\r\n            </Col>\r\n          </Row>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            className=\"shadow-none\"\r\n            color=\"secondary\"\r\n            onClick={() => setViewHistoryModal(false)}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewHistoryModal;\r\n","import React, { useEffect, useState } from 'react';\r\nimport {\r\n  Modal,\r\n  ModalHeader,\r\n  ModalBody,\r\n  ModalFooter,\r\n  Form,\r\n  Row,\r\n  Col,\r\n  Button,\r\n  Table,\r\n  Input,\r\n} from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport api from '../../constants/api';\r\nimport message from '../Message';\r\n\r\nfunction DeliveryOrderEditModal({\r\n  deliveryOrderEditModal,\r\n  setDeliveryOrderEditModal,\r\n  deliveryOrderId,\r\n}) {\r\n  DeliveryOrderEditModal.propTypes = {\r\n    deliveryOrderId: PropTypes.any,\r\n    deliveryOrderEditModal: PropTypes.bool,\r\n    setDeliveryOrderEditModal: PropTypes.func,\r\n  };\r\n  const [deliverOrderProducts, setDeliveryOrderProducts] = useState([]);\r\n\r\n  //get products\r\n  const getDeliveryOrderProducts = () => {\r\n    api\r\n      .post('purchaseorder/getDeliveryOrderHistory', { delivery_order_id: deliveryOrderId })\r\n      .then((res) => {\r\n        setDeliveryOrderProducts(res.data.data);\r\n      })\r\n      .catch(() => {\r\n        message('unable to get products', 'error');\r\n      });\r\n  };\r\n  //edit delivery items\r\n  const editDeliveryProducts = () => {\r\n    deliverOrderProducts.forEach((el) => {\r\n      api\r\n        .post('/purchaseorder/editDelieryOrderHistory', el)\r\n        .then(() => {\r\n          message('Record editted successfully', 'success');\r\n        })\r\n        .catch(() => {\r\n          message('Unable to edit record.', 'error');\r\n        });\r\n    });\r\n  };\r\n\r\n  function updateState(index, property, e) {\r\n    const copyDeliverOrderProducts = [...deliverOrderProducts];\r\n    const updatedObject = { ...copyDeliverOrderProducts[index], [property]: e.target.value };\r\n    copyDeliverOrderProducts[index] = updatedObject;\r\n    setDeliveryOrderProducts(copyDeliverOrderProducts);\r\n  }\r\n\r\n  const supplierColumn = [\r\n    {\r\n      name: 'Product Name\t',\r\n    },\r\n    {\r\n      name: 'Quantity',\r\n    },\r\n    {\r\n      name: 'Status\t',\r\n    },\r\n    {\r\n      name: 'Remarks',\r\n    },\r\n  ];\r\n  useEffect(() => {\r\n    getDeliveryOrderProducts();\r\n  }, [deliveryOrderId]);\r\n  return (\r\n    <div>\r\n      <Modal size=\"xl\" isOpen={deliveryOrderEditModal}>\r\n        <ModalHeader>\r\n          {' '}\r\n          Edit Delivery Order\r\n          <Button\r\n            color=\"secondary\"\r\n            onClick={() => {\r\n              setDeliveryOrderEditModal(false);\r\n            }}\r\n          >\r\n            {' '}\r\n            X{' '}\r\n          </Button>\r\n        </ModalHeader>\r\n        <ModalBody>\r\n          <Row>\r\n            <Col md=\"12\">\r\n              <Form>\r\n                <Row>\r\n                  <div>\r\n                    <Table id=\"example\" className=\"lineitem border border-secondary rounded\">\r\n                      <tr>\r\n                        {supplierColumn.map((cell) => {\r\n                          return <td key={cell.name}>{cell.name}</td>;\r\n                        })}\r\n                      </tr>\r\n                      {deliverOrderProducts &&\r\n                        deliverOrderProducts.map((element, index) => {\r\n                          return (\r\n                            <>\r\n                              <tr key={element.delivery_order_id}>\r\n                                <td data-label=\"title\">\r\n                                  <Input type=\"text\" name=\"title\" value={element.item_title} />\r\n                                </td>\r\n                                <td data-label=\"quantity\">\r\n                                  <Input\r\n                                    type=\"text\"\r\n                                    name=\"quantity\"\r\n                                    value={element.quantity}\r\n                                    onChange={(e) => updateState(index, 'quantity', e)}\r\n                                  />\r\n                                </td>\r\n                                <td data-label=\"status\">\r\n                                  <Input\r\n                                    type=\"select\"\r\n                                    value={element.status}\r\n                                    name=\"status\"\r\n                                    onChange={(e) => updateState(index, 'status', e)}\r\n                                  >\r\n                                    <option defaultValue=\"selected\">Please Select</option>\r\n                                    <option value=\"in progress\">in progress</option>\r\n                                    <option value=\"sent to supplier\">sent to supplier</option>\r\n                                    <option value=\"order acknowledged\">order acknowledged</option>\r\n                                    <option value=\"partially received\">partially received</option>\r\n                                    <option value=\"closed\">closed</option>\r\n                                    <option value=\"on hold\">on hold</option>\r\n                                    <option value=\"cancelled\">cancelled</option>\r\n                                  </Input>\r\n                                </td>\r\n                                <td data-label=\"remarks\">\r\n                                  <Input\r\n                                    type=\"text\"\r\n                                    name=\"remarks\"\r\n                                    value={element.remarks}\r\n                                    onChange={(e) => updateState(index, 'remarks', e)}\r\n                                  />\r\n                                </td>\r\n                              </tr>\r\n                            </>\r\n                          );\r\n                        })}\r\n                    </Table>\r\n                  </div>\r\n                </Row>\r\n              </Form>\r\n            </Col>\r\n          </Row>\r\n        </ModalBody>\r\n        <ModalFooter>\r\n          <Button\r\n            className=\"shadow-none\"\r\n            color=\"primary\"\r\n            onClick={() => {\r\n              editDeliveryProducts();\r\n              setDeliveryOrderEditModal(false);\r\n            }}\r\n          >\r\n            Submit\r\n          </Button>\r\n          <Button\r\n            className=\"shadow-none\"\r\n            color=\"dark\"\r\n            onClick={() => setDeliveryOrderEditModal(false)}\r\n          >\r\n            Cancel\r\n          </Button>\r\n        </ModalFooter>\r\n      </Modal>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DeliveryOrderEditModal;\r\n","import React from 'react';\r\nimport { Row, Col, Input, Form, FormGroup, Label } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport ComponentCard from '../ComponentCard';\r\n\r\nfunction PurchaseOrderDetailsPart({ purchaseDetails, handleInputs, supplier }) {\r\n  PurchaseOrderDetailsPart.propTypes = {\r\n    purchaseDetails: PropTypes.object,\r\n    handleInputs: PropTypes.func,\r\n    supplier: PropTypes.array,\r\n  };\r\n  return (\r\n    <div>\r\n      <Form>\r\n        <FormGroup>\r\n          <ComponentCard\r\n            title=\"PurchaseOrder Details\"\r\n            righttitle={\r\n              <Row>\r\n                <Col className=\"fs-10 small\">\r\n                  <small>Creation :</small>\r\n                  <small>\r\n                    {purchaseDetails && purchaseDetails.created_by}\r\n                    {purchaseDetails && purchaseDetails.creation_date}\r\n                  </small>\r\n                </Col>\r\n\r\n                <Col className=\"fs-10 small\">\r\n                  <small>Modification :</small>\r\n\r\n                  <small>\r\n                    {purchaseDetails && purchaseDetails.modified_by}\r\n                    {purchaseDetails && purchaseDetails.modification_date}\r\n                  </small>\r\n                </Col>\r\n              </Row>\r\n            }\r\n          >\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label>Po Code</Label>\r\n                  <br></br>\r\n                  <span>{purchaseDetails && purchaseDetails.po_code}</span>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label>Title</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleInputs}\r\n                    value={purchaseDetails && purchaseDetails.title}\r\n                    name=\"title\"\r\n                  ></Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label>Status</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    value={purchaseDetails && purchaseDetails.status}\r\n                    name=\"status\"\r\n                    onChange={handleInputs}\r\n                  >\r\n                    <option defaultValue=\"selected\">Please Select</option>\r\n                    <option value=\"in progress\">in progress</option>\r\n                    <option value=\"sent to supplier\">sent to supplier</option>\r\n                    <option value=\"order acknowledged\">order acknowledged</option>\r\n                    <option value=\"partially received\">partially received</option>\r\n                    <option value=\"closed\">closed</option>\r\n                    <option value=\"on hold\">on hold</option>\r\n                    <option value=\"cancelled\">cancelled</option>\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label>Supplier Name</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    onChange={handleInputs}\r\n                    value={purchaseDetails && purchaseDetails.supplier_id}\r\n                    name=\"supplier_id\"\r\n                  >\r\n                    <option defaultValue=\"selected\">Please Select</option>\r\n                    {supplier &&\r\n                      supplier.map((e) => {\r\n                        return (\r\n                          <option key={e.supplier_id} value={e.supplier_id}>\r\n                            {e.company_name}\r\n                          </option>\r\n                        );\r\n                      })}\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n            <Row>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label>Priority</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    onChange={handleInputs}\r\n                    value={purchaseDetails && purchaseDetails.prirority}\r\n                  >\r\n                    <option defaultValue=\"selected\">Please Select</option>\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label>PO Date</Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    onChange={handleInputs}\r\n                    value={\r\n                      purchaseDetails &&\r\n                      moment(purchaseDetails.purchase_order_date).format('YYYY-MM-DD')\r\n                    }\r\n                    name=\"purchase_order_date\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label>Follow Up Date</Label>\r\n                  <Input\r\n                    type=\"date\"\r\n                    onChange={handleInputs}\r\n                    value={\r\n                      purchaseDetails && moment(purchaseDetails.follow_up_date).format('YYYY-MM-DD')\r\n                    }\r\n                    name=\"follow_up_date\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label>Notes To Supplier</Label>\r\n                  <Input\r\n                    type=\"textarea\"\r\n                    value={purchaseDetails && purchaseDetails.notes}\r\n                    name=\"notes\"\r\n                    onChange={handleInputs}\r\n                  ></Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label>Delivery Terms</Label>\r\n                  <Input\r\n                    type=\"textarea\"\r\n                    value={purchaseDetails && purchaseDetails.delivery_terms}\r\n                    name=\"delivery_terms\"\r\n                    onChange={handleInputs}\r\n                  ></Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label>Payment Terms</Label>\r\n                  <Input\r\n                    type=\"textarea\"\r\n                    value={purchaseDetails && purchaseDetails.payment_terms}\r\n                    name=\"payment_terms\"\r\n                    onChange={handleInputs}\r\n                  ></Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label>Payment Status</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    value={purchaseDetails && purchaseDetails.payment_status}\r\n                    name=\"payment_status\"\r\n                    onChange={handleInputs}\r\n                  >\r\n                    <option value=\"\"> Please Select</option>\r\n                    <option value=\"Due\">Due</option>\r\n                    <option value=\"Partially Paid\">Partially Paid</option>\r\n                    <option value=\"Paid\">Paid</option>\r\n                    <option value=\"Cancelled\">Cancelled</option>\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"3\">\r\n                <FormGroup>\r\n                  <Label>supplier Invoice Code</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    value={purchaseDetails && purchaseDetails.supplier_inv_code}\r\n                    name=\"supplier_inv_code\"\r\n                    onChange={handleInputs}\r\n                  ></Input>\r\n                </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </ComponentCard>\r\n        </FormGroup>\r\n      </Form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PurchaseOrderDetailsPart;\r\n","import * as Icon from 'react-feather'\r\n\r\nexport const purchaseTableColumn = [\r\n  {\r\n    name: '',\r\n  },\r\n  {\r\n    name: 'D.O',\r\n  },\r\n  {\r\n    name: 'S.No',\r\n  },\r\n  {\r\n    name: 'Product Code\t',\r\n  },\r\n  {\r\n    name: 'Product Title\t',\r\n  },\r\n  {\r\n    name: 'Cost Price\t',\r\n  },\r\n  {\r\n    name: 'Selling Price',\r\n  },\r\n  {\r\n    name: 'GST%\t',\r\n  },\r\n  {\r\n    name: 'Stock',\r\n  },\r\n  {\r\n    name: 'Qty',\r\n  },\r\n  {\r\n    name: 'Damaged Qty\t',\r\n  },\r\n  {\r\n    name: 'Added to Stock\t',\r\n  },\r\n  {\r\n    name: 'Qty Balance\t',\r\n  },\r\n  {\r\n    name: 'Status',\r\n  },\r\n  {\r\n    name: 'Total Amount\t',\r\n  },\r\n  {\r\n    name: 'Actual Total Amount',\r\n  },\r\n  {\r\n    name: 'Edit\t',\r\n    selector: 'edit',\r\n    cell: () => <Icon.Edit2 />,\r\n    grow: 0,\r\n    width: 'auto',\r\n    button: true,\r\n    sortable: false,\r\n  },\r\n  {\r\n    name: 'Delete',\r\n    selector: 'delete',\r\n    cell: () => <Icon.Trash />,\r\n    grow: 0,\r\n    width: 'auto',\r\n    wrap: true,\r\n  },\r\n  {\r\n    name: 'History',\r\n  },\r\n];\r\n\r\nexport const column=[];","import React from 'react';\r\nimport { Row, Button, Table } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport * as Icon from 'react-feather';\r\nimport PropTypes from 'prop-types';\r\nimport { purchaseTableColumn } from '../../data/PurchaseOrder/PurchaseTableColumn';\r\n\r\nfunction ProductLinkedTable({\r\n  products,\r\n  setProduct,\r\n  getCheckedDeliverProducts,\r\n  getCheckedPoProducts,\r\n  setEditModal,\r\n  setViewHistoryModal,\r\n  deletePoProduct,\r\n  setHistoryProduct,\r\n}) {\r\n  ProductLinkedTable.propTypes = {\r\n    products: PropTypes.array,\r\n    setProduct: PropTypes.func,\r\n    getCheckedDeliverProducts: PropTypes.func,\r\n    getCheckedPoProducts: PropTypes.func,\r\n    setEditModal: PropTypes.func,\r\n    setViewHistoryModal: PropTypes.func,\r\n    deletePoProduct: PropTypes.func,\r\n    setHistoryProduct: PropTypes.func,\r\n  };\r\n  return (\r\n    <div>\r\n      <Row>\r\n        <Table id=\"example\" className=\"display border border-secondary rounded\">\r\n          <thead title=\"Purchase Order Linked \">\r\n            <tr>\r\n              {purchaseTableColumn.map((cell) => {\r\n                return <td key={cell.name}>{cell.name}</td>;\r\n              })}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {products &&\r\n              products.map((element, index) => {\r\n                return (\r\n                  <tr key={element.po_product_id}>\r\n                    <td>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        id=\"sno\"\r\n                        name=\"sno\"\r\n                        value={element.po_product_id}\r\n                        onChange={(e) => {\r\n                          getCheckedPoProducts(e, index, element);\r\n                        }}\r\n                      />\r\n                    </td>\r\n                    <td>\r\n                      <input\r\n                        type=\"checkbox\"\r\n                        id=\"dno\"\r\n                        name=\"do\"\r\n                        value={element.po_product_id}\r\n                        onChange={(e) => {\r\n                          getCheckedDeliverProducts(e, index, element);\r\n                        }}\r\n                      />\r\n                    </td>\r\n                    <td>{index + 1}</td>\r\n                    <td>{element.item_code}</td>\r\n                    <td>{element.title}</td>\r\n                    <td>{element.cost_price}</td>\r\n                    <td>{element.selling_price}</td>\r\n                    <td>{element.gst}</td>\r\n                    <td>{element.qty_in_stock}</td>\r\n                    <td>{element.qty}</td>\r\n                    <td>{element.damage_qty}</td>\r\n                    <td>{element.qty_delivered}</td>\r\n                    <td>{element.qty_balance}</td>\r\n                    <td>{element.status}</td>\r\n                    <td>{element.po_value}</td>\r\n                    <td>{element.actual_value}</td>\r\n\r\n                    <td>\r\n                      <Button\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                          setProduct(element);\r\n                          setEditModal(true);\r\n                        }}\r\n                      >\r\n                        Edit\r\n                      </Button>\r\n                    </td>\r\n                    <td>\r\n                      <Link to=\"\">\r\n                        <span\r\n                          onClick={() => {\r\n                            deletePoProduct(element.po_product_id);\r\n                          }}\r\n                        >\r\n                          <Icon.Trash2 />\r\n                        </span>\r\n                      </Link>\r\n                    </td>\r\n                    <td>\r\n                      <Link\r\n                        to=\"\"\r\n                        color=\"primary\"\r\n                        onClick={() => {\r\n                          setHistoryProduct(element.product_id);\r\n                          setViewHistoryModal(true);\r\n                        }}\r\n                      >\r\n                        <b>\r\n                          <u>View History</u>\r\n                        </b>\r\n                      </Link>\r\n                    </td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </Table>\r\n      </Row>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ProductLinkedTable;\r\n","import React from 'react';\r\nimport pdfMake from 'pdfmake';\r\nimport * as Icon from 'react-feather';\r\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport api from '../../constants/api';\r\nimport message from '../Message';\r\nimport PdfFooter from './PdfFooter';\r\nimport PdfHeader from './PdfHeader';\r\n\r\n\r\nconst PdfDeliveryOrderPO = ({deliveryOrderId,date}) => {\r\n  PdfDeliveryOrderPO.propTypes = {\r\n    deliveryOrderId: PropTypes.any,\r\n    date:PropTypes.any,\r\n    \r\n    \r\n  }\r\n    const [hfdata, setHeaderFooterData] = React.useState()\r\n    \r\n    const [deliverOrderProducts, setDeliveryOrderProducts] = React.useState();\r\n    \r\n  React.useEffect(() => {\r\n    api.get('/setting/getSettingsForCompany').then((res) => {\r\n        setHeaderFooterData(res.data.data);\r\n    });\r\n  }, [0]);\r\n\r\n  const findCompany = (key) => {\r\n      const filteredResult = hfdata.find((e) => e.key_text === key);\r\n      return filteredResult.value\r\n  }\r\n  \r\n  \r\n\r\n  const getDeliveryOrderId=()=>{\r\n    api.post('purchaseorder/getDeliveryOrderHistory',{delivery_order_id:deliveryOrderId})\r\n    .then((res)=>{\r\n      setDeliveryOrderProducts(res.data.data);\r\n    }).catch(()=>{\r\n      message('delivery data are not found','error');\r\n    })\r\n  }\r\n  \r\n  React.useEffect(() => {\r\n    getDeliveryOrderId();\r\n    \r\n  }, []);\r\n\r\n  const GetPdf = () => {\r\n    const productItems = [\r\n      [\r\n        {\r\n          text: 'Sn',\r\n          style: 'tableHead',\r\n        },\r\n        {\r\n          text: 'Product Name',\r\n          style: 'tableHead',\r\n        },\r\n        {\r\n          text: 'Qty',\r\n          style: 'tableHead',\r\n        },\r\n        {\r\n          text: 'Remarks',\r\n          style: 'tableHead',\r\n        },\r\n        \r\n      ],\r\n    ];\r\n    deliverOrderProducts.forEach((element, index) => {\r\n      productItems.push([\r\n        {\r\n          text: `${index + 1}`,\r\n          style: 'tableBody',\r\n          border: [false, false, false, true],\r\n        },\r\n        {\r\n          text: `${element.item_title? element.item_title : ''}`,\r\n          border: [false, false, false, true],\r\n          style: 'tableBody',\r\n        },\r\n        {\r\n          text: `${element.quantity? element.quantity : ''}`,\r\n          border: [false, false, false, true],\r\n          style: 'tableBody',\r\n        },\r\n        {\r\n          text: `${element.remarks ? element.remarks : ''}`,\r\n          border: [false, false, false, true],\r\n          style: 'tableBody',\r\n        },\r\n        \r\n      ]);\r\n    });\r\n    const dd = {\r\n      pageSize: 'A4',\r\n      header: PdfHeader({ findCompany }),\r\n      pageMargins: [40, 150, 40, 80],\r\n      footer: PdfFooter,\r\n     \r\n      content: [\r\n        {\r\n          layout: {\r\n            defaultBorder: false,\r\n            hLineWidth: () => {\r\n              return 1;\r\n            },\r\n            vLineWidth: () => {\r\n              return 1;\r\n            },\r\n            hLineColor: (i) => {\r\n              if (i === 1 || i === 0) {\r\n                return '#bfdde8';\r\n              }\r\n              return '#eaeaea';\r\n            },\r\n            vLineColor: () => {\r\n              return '#eaeaea';\r\n            },\r\n            hLineStyle: () => {\r\n              // if (i === 0 || i === node.table.body.length) {\r\n              return null;\r\n              //}\r\n            },\r\n            // vLineStyle: function () { return {dash: { length: 10, space: 4 }}; },\r\n            paddingLeft: () => {\r\n              return 10;\r\n            },\r\n            paddingRight: () => {\r\n              return 10;\r\n            },\r\n            paddingTop: () => {\r\n              return 2;\r\n            },\r\n            paddingBottom: () => {\r\n              return 2;\r\n            },\r\n            fillColor: () => {\r\n              return '#fff';\r\n            },\r\n          },\r\n          table: {\r\n            headerRows: 1,\r\n            widths: ['101%'],\r\n\r\n            body: [\r\n              [\r\n                {\r\n                  text: 'DELIVERY ORDER',\r\n                  alignment: 'center',\r\n                  style: 'tableHead',\r\n                },\r\n              ],\r\n            ],\r\n          },\r\n        },\r\n        '\\n\\n',\r\n        {columns: [\r\n           \r\n            {\r\n              text: `Date :${date ? moment(date).format('DD-MM-YYYY') : ''} `,\r\n              style: 'textSize',\r\n              margin:[0,0,65,0],\r\n              bold:true\r\n            },\r\n              ],},\r\n              '\\n',\r\n          \r\n              '\\n',\r\n              '\\n',\r\n  \r\n      \r\n              {\r\n                layout: {\r\n                  defaultBorder: false,\r\n                  hLineWidth: () => {\r\n                    return 1;\r\n                  },\r\n                  vLineWidth: () => {\r\n                    return 1;\r\n                  },\r\n                  hLineColor: (i) => {\r\n                    if (i === 1 || i === 0) {\r\n                      return '#bfdde8';\r\n                    }\r\n                    return '#eaeaea';\r\n                  },\r\n                  vLineColor: () => {\r\n                    return '#eaeaea';\r\n                  },\r\n                  hLineStyle: () => {\r\n                    // if (i === 0 || i === node.table.body.length) {\r\n                    return null;\r\n                    //}\r\n                  },\r\n                  // vLineStyle: function () { return {dash: { length: 10, space: 4 }}; },\r\n                  paddingLeft: () => {\r\n                    return 10;\r\n                  },\r\n                  paddingRight: () => {\r\n                    return 10;\r\n                  },\r\n                  paddingTop: () => {\r\n                    return 2;\r\n                  },\r\n                  paddingBottom: () => {\r\n                    return 2;\r\n                  },\r\n                  fillColor: () => {\r\n                    return '#fff';\r\n                  },\r\n                },\r\n                table: {\r\n                  headerRows: 1,\r\n                  widths: ['10%', '41%', '20%', '30%'],\r\n      \r\n                  body: productItems,\r\n                },\r\n              },\r\n              '\\n\\n\\n\\n\\n',\r\n              '\\n\\n\\n\\n\\n',\r\n      \r\n              {\r\n                columns: [\r\n                  {\r\n                    stack: [\r\n                      {\r\n                        text: 'Your Faithfully :',\r\n                        alignment: 'left',\r\n                        bold:true,\r\n                        fontSize: 10,\r\n                        style: ['invoiceAdd', 'textSize1'],\r\n                      },\r\n                      '\\n\\n\\n',\r\n                      { canvas: [{ type: 'line', x1: 0, y1: 0, x2: 190, y2: 0, lineWidth: 1 }] },\r\n                      {\r\n                        text: `Authorised Signature/Date`,\r\n                        fontSize: 10,\r\n                        style: ['textSize1'],\r\n                        margin: [0, 0, 0, 0],\r\n                      },\r\n                    ],\r\n                  },\r\n                  {\r\n                    stack: [\r\n                      '\\n\\n\\n\\n',\r\n                      {\r\n                        canvas: [\r\n                          {\r\n                            type: 'line',\r\n                            margin: [0, 0, 0, 0],\r\n                            x1: 0,\r\n                            y1: 0,\r\n                            x2:200,\r\n                            y2: 0,\r\n                            lineWidth: 1,\r\n                          },\r\n                        ],\r\n                      },\r\n                      {\r\n                        text: `Accepted By/date`,\r\n                        fontSize: 10,\r\n                        style: ['textSize1'],\r\n                        margin: [0, 0, 0, 0],\r\n                      },\r\n                    ],\r\n                  },\r\n                ],\r\n              },\r\n              '\\n\\n\\n\\n\\n',\r\n            ],\r\n      margin:[0,50,50,50],\r\n      styles: {\r\n        logo:{\r\n            margin:[-20,20,0,0],\r\n        },\r\n        address:{\r\n          margin:[-10,20,0,0],\r\n        },\r\n        invoice:{\r\n           margin:[0,30,0,10],\r\n           alignment:'right',\r\n        },\r\n        invoiceAdd:{\r\n           alignment:'right',\r\n        },\r\n        textSize: {\r\n           fontSize: 10,\r\n           alignment:'right',\r\n        },\r\n        textSize1: {\r\n          fontSize: 10\r\n          \r\n       },\r\n        notesTitle: {\r\n       bold: true,\r\n       margin: [0, 50, 0, 3],\r\n     },\r\n       tableHead:{\r\n           border: [false, true, false, true],\r\n           fillColor: '#eaf2f5',\r\n           margin: [0, 5, 0, 5],\r\n           fontSize: 10,\r\n           bold:'true',\r\n     },\r\n       tableBody:{\r\n         border: [false, false, false, true],\r\n           margin: [0, 5, 0, 5],\r\n           alignment: 'left',\r\n           fontSize:10\r\n       }\r\n      },\r\n    };\r\n    pdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n    pdfMake.createPdf(dd, null, null, pdfFonts.pdfMake.vfs).open();\r\n  };\r\n\r\n  return (\r\n    <>\r\n       \r\n       <span onClick={GetPdf}><Icon.Printer/></span>\r\n      \r\n    </>\r\n  );\r\n};\r\n\r\n\r\nexport default PdfDeliveryOrderPO;\r\n","import React,{useEffect} from 'react';\r\nimport { Nav, NavItem, NavLink } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { useSearchParams } from 'react-router-dom';\r\n\r\nexport default function Tab({ toggle,tabs }) {\r\n  Tab.propTypes = {\r\n    toggle: PropTypes.func,\r\n    tabs: PropTypes.array\r\n  };\r\n\r\n  // for tab refresh navigation #Renuka 31-05-23\r\n  const [searchParams, setSearchParams] = useSearchParams();\r\n\r\n  useEffect(() => {\r\n   toggle(searchParams.get('tab'))\r\n  }, [searchParams.get('tab')]);\r\n  // End for tab refresh navigation #Renuka 31-05-23\r\n  return (\r\n    <Nav tabs>\r\n\r\n      {tabs?.map((e)=>{\r\n        return (\r\n          <NavItem key={e.id}>\r\n            <NavLink\r\n            key={e.id}\r\n              className={e.id === searchParams.get('tab') ? 'active' : ''}\r\n              onClick={() => {\r\n                setSearchParams({tab:e.id});\r\n                toggle(e.id);\r\n              }}\r\n            >\r\n              {e.name}\r\n            </NavLink>\r\n          </NavItem>\r\n        )\r\n      })}\r\n    </Nav>\r\n  );\r\n}\r\n","/* eslint-disable */\r\nimport React from 'react';\r\nimport { Button, Col, Row, Card } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport { HasAccess ,usePermify} from '@permify/react-role';\r\n\r\nconst ApiButton = ({ editData, navigate, applyChanges, backToList, module }) => {\r\n  ApiButton.propTypes = {\r\n    editData: PropTypes.func,\r\n    navigate: PropTypes.any,\r\n    applyChanges: PropTypes.func,\r\n    backToList: PropTypes.func,\r\n    module: PropTypes.string,\r\n  };\r\n  const { isAuthorized, isLoading } = usePermify();\r\n\r\n  \r\n  const fetchData = async (type) => {\r\n    // Pass roles and permissions accordingly\r\n    // You can send empty array or null for first param to check permissions only\r\n    if (await isAuthorized(null, `${module}-${type}`)) {\r\n       return true\r\n    }else{\r\n      return false\r\n    }\r\n};\r\n\r\n  return (\r\n    <div>\r\n      <Card tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <div className=\"d-flex flex-row-reverse\">\r\n          <Row>\r\n            <Col className=\"d-flex\" xl={3} sm={12}>\r\n              {' '}\r\n              <HasAccess\r\n                roles={null}\r\n                permissions={`${module}-edit`}\r\n                renderAuthFailed={<p></p>}\r\n              >\r\n                <Button\r\n                  onClick={() => {\r\n                    editData();\r\n                    navigate('/Leave');\r\n                  }}\r\n                  color=\"primary\"\r\n                >\r\n                  {' '}\r\n                  Save\r\n                </Button>\r\n              </HasAccess>\r\n            </Col>\r\n            <Col className=\"d-flex\" xl={3} sm={12}>\r\n              {' '}\r\n              <HasAccess\r\n                roles={null}\r\n                permissions={`${module}-edit`}\r\n                renderAuthFailed={<p></p>}\r\n              >\r\n                <Button\r\n                  onClick={() => {\r\n                    editData();\r\n                    applyChanges();\r\n                  }}\r\n                  color=\"primary\"\r\n                >\r\n                  Apply\r\n                </Button>\r\n              </HasAccess>\r\n            </Col>\r\n            <Col className=\"d-flex\" xl={4} sm={12}>\r\n              {' '}\r\n              <Button\r\n                onClick={() => {\r\n                  backToList();\r\n                }}\r\n                color=\"dark\"\r\n              >\r\n                Back To List\r\n              </Button>\r\n            </Col>\r\n            <Col className=\"d-flex\" xl={3} sm={12}>\r\n              {' '}\r\n              <HasAccess\r\n                roles={null}\r\n                permissions={`${module}-remove`}\r\n                renderAuthFailed={<p>You are not authorized to access!</p>}\r\n              >\r\n                <Button color=\"danger\" onClick={() => {}}>\r\n                  Delete\r\n                </Button>\r\n              </HasAccess>\r\n            </Col>\r\n          </Row>\r\n        </div>\r\n      </Card>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ApiButton;\r\n","import React, { useEffect, useState } from 'react';\r\nimport * as Icon from 'react-feather';\r\nimport { Row, Col, Button, TabContent, TabPane } from 'reactstrap';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport Swal from 'sweetalert2';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport '../form-editor/editor.scss';\r\nimport moment from 'moment';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport AddNote from '../../components/Tender/AddNote';\r\nimport ViewNote from '../../components/Tender/ViewNote';\r\nimport ComponentCard from '../../components/ComponentCard';\r\nimport message from '../../components/Message';\r\nimport api from '../../constants/api';\r\nimport AddPoModal from '../../components/PurchaseOrder/AddPoModal';\r\nimport AttachmentTab from '../../components/PurchaseOrder/AttachmentTab';\r\nimport PurchaseOrderlineItemEdit from '../../components/PurchaseOrder/PurchaseOrderLineItem';\r\n//import PurchaseOrderButtons from '../../components/PurchaseOrder/PurchaseOrderButtons';\r\nimport ViewHistoryModal from '../../components/PurchaseOrder/ViewHistoryModal';\r\nimport DeliveryOrderEditModal from '../../components/PurchaseOrder/DeliveryOrderEditModal';\r\nimport PurchaseOrderDetailsPart from '../../components/PurchaseOrder/PurchaseOrderDetailsPart';\r\nimport ProductLinkedTable from '../../components/PurchaseOrder/ProductLinkedTable';\r\nimport PdfDeliveryOrderPO from '../../components/PDF/PdfDeliveryOrderPO';\r\nimport Tab from '../../components/project/Tab';\r\nimport ApiButton from '../../components/ApiButton';\r\n\r\nconst PurchaseOrderEdit = () => {\r\n  //All state variable\r\n  const [purchaseDetails, setPurchaseDetails] = useState();\r\n  const [supplier, setSupplier] = useState([]);\r\n  const [product, setProduct] = useState();\r\n  const [historyProduct, setHistoryProduct] = useState();\r\n  const [addPurchaseOrderModal, setAddPurchaseOrderModal] = useState();\r\n  const [products, setProducts] = useState();\r\n  const [editModal, setEditModal] = useState(false);\r\n  const [attachmentModal, setAttachmentModal] = useState(false);\r\n  const [attachmentData, setDataForAttachment] = useState({\r\n    modelType: '',\r\n  });\r\n  const [pictureData, setDataForPicture] = useState({\r\n    modelType: '',\r\n  });\r\n  const [activeTab, setActiveTab] = useState('1');\r\n  const [viewHistoryModal, setViewHistoryModal] = useState(false);\r\n  const [deliveryOrderEditModal, setDeliveryOrderEditModal] = useState(false);\r\n  const [selectedPoProducts, setSelectedPoProducts] = useState([]);\r\n  const [selectedPoDelivers, setSelectedPoDelivers] = useState([]);\r\n  const [deliveryOrderId, setDeliveryOrderId] = useState();\r\n  const [deliveryOrders, setDeliveryOrders] = useState([]);\r\n  const [supplierId, setSupplierId] = useState();\r\n  const [gTotal, setGtotal] = useState(0);\r\n  const [grTotal, setGrTotal] = useState(0);\r\n  //navigation and parameters\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  //const applyChanges = () => {};\r\n  const backToList = () => {\r\n    navigate('/PurchaseOrder');\r\n  };\r\n  //puchaseOrder data in purchaseDetails\r\n  const handleInputs = (e) => {\r\n    setPurchaseDetails({ ...purchaseDetails, [e.target.name]: e.target.value });\r\n  };\r\n  //getting data from purchaseOrder by Id\r\n  const getPurchaseOrderId = () => {\r\n    api.post('/purchaseorder/getPurchaseOrderById', { purchase_order_id: id }).then((res) => {\r\n      setPurchaseDetails(res.data.data[0]);\r\n      setSupplierId(res.data.data[0].supplier_id);\r\n    });\r\n  };\r\n\r\n  // Gettind data from Job By Id\r\n  const getPoProduct = () => {\r\n    api\r\n      .post('/purchaseorder/TabPurchaseOrderLineItemById', { purchase_order_id: id })\r\n      .then((res) => {\r\n        setProducts(res.data.data);\r\n        //grand total\r\n        let grandTotal = 0;\r\n        let grand = 0;\r\n        res.data.data.forEach((elem) => {\r\n          grandTotal += elem.po_value;\r\n          grand += elem.actual_value;\r\n        });\r\n        setGtotal(grandTotal);\r\n        setGrTotal(grand);\r\n      })\r\n      .catch(() => {\r\n        message('Products Data Not Found', 'info');\r\n      });\r\n  };\r\n  // Gettind data from Job By Id\r\n  const getSupplier = () => {\r\n    api\r\n      .get('/purchaseorder/getSupplier')\r\n      .then((res) => {\r\n        setSupplier(res.data.data);\r\n      })\r\n      .catch(() => {\r\n        message('Supplier Data Not Found', 'info');\r\n      });\r\n  };\r\n\r\n  const handlePOInputs = (e) => {\r\n    setProduct({ ...product, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  //Add to stocks\r\n  const addQtytoStocks = () => {\r\n    if (selectedPoProducts) {\r\n      selectedPoProducts.forEach((elem) => {\r\n        if (elem.status !== 'Closed') {\r\n          elem.status = 'Closed';\r\n          elem.qty_updated = elem.qty_delivered;\r\n          elem.qty_in_stock += parseFloat(elem.qty_delivered);\r\n          api.post('/product/edit-ProductQty', elem);\r\n          api\r\n            .post('/purchaseorder/editTabPurchaseOrderLineItem', elem)\r\n            .then(() => {\r\n              api\r\n                .post('/inventory/editInventoryStock', elem)\r\n                .then(() => {\r\n                  message('Quantity updated in inventory successfully.', 'success');\r\n                })\r\n                .catch(() => {\r\n                  message('unable to update quantity in inventory.', 'danger');\r\n                });\r\n              message('Quantity added successfully.', 'success');\r\n            })\r\n            .catch(() => {\r\n              message('unable to add quantity.', 'danger');\r\n            });\r\n        } else {\r\n          message('This product is already added', 'danger');\r\n        }\r\n      });\r\n    } else {\r\n      alert('Please select atleast one product');\r\n    }\r\n  };\r\n\r\n  //Delivery order\r\n  const deliverOrder = () => {\r\n    if (selectedPoDelivers) {\r\n      api.post('/purchaseorder/insertDeliveryOrder', { purchase_order_id: id }).then((res) => {\r\n        selectedPoDelivers.forEach((elem) => {\r\n          elem.delivery_order_id = res.data.data.insertId;\r\n          elem.purchase_order_id = id;\r\n\r\n          api\r\n            .post('/purchaseorder/insertDeliveryOrderHistory', elem)\r\n            .then(() => {\r\n              message('Inserted successfully.', 'success');\r\n            })\r\n            .catch(() => {\r\n              message('unable to deliver.', 'danger');\r\n            });\r\n        });\r\n      });\r\n    } else {\r\n      alert('Please select atleast one product');\r\n    }\r\n  };\r\n  // get delivery orders\r\n\r\n  const getDeliveryOrders = () => {\r\n    api\r\n      .post('/purchaseorder/getDeliveryOrder', { purchase_order_id: id })\r\n      .then((res) => {\r\n        setDeliveryOrders(res.data.data);\r\n      })\r\n      .catch(() => {\r\n        message('DeliveryOrder Data Not Found', 'info');\r\n      });\r\n  };\r\n\r\n  //Update Setting\r\n  const editPurchaseData = () => {\r\n    api\r\n      .post('/purchaseorder/editTabPurchaseOrder', purchaseDetails)\r\n      .then(() => {\r\n        message('Record editted successfully', 'success');\r\n      })\r\n      .catch(() => {\r\n        message('Unable to edit record.', 'error');\r\n      });\r\n  };\r\n\r\n  //Edit poproductdata\r\n  const editPoProductData = () => {\r\n    api\r\n      .post('/purchaseorder/editTabPurchaseOrderLineItem', product)\r\n      .then(() => {\r\n        message('product edited successfully.', 'success');\r\n      })\r\n      .catch(() => {\r\n        message('unable to edit product.', 'danger');\r\n      });\r\n  };\r\n\r\n  const deletePoProduct = (poProductId) => {\r\n    Swal.fire({\r\n      title: `Are you sure? `,\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!',\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        api\r\n          .post('purchaseorder/deletePoProduct', { po_product_id: poProductId })\r\n          .then(() => {\r\n            Swal.fire('Deleted!', 'PoProduct has been deleted.', 'success');\r\n            setTimeout(() => {\r\n              window.location.reload();\r\n            }, 300);\r\n          })\r\n          .catch(() => {\r\n            message('Unable to Delete PO Product', 'info');\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  //checked objects\r\n  const getCheckedPoProducts = (checkboxVal, index, Obj) => {\r\n    if (checkboxVal.target.checked === true) {\r\n      setSelectedPoProducts([...selectedPoProducts, Obj]);\r\n    }\r\n    if (checkboxVal.target.checked !== true) {\r\n      const copyselectedPoProducts = [...selectedPoProducts];\r\n      copyselectedPoProducts.splice(index, 1);\r\n      setSelectedPoProducts(copyselectedPoProducts);\r\n    }\r\n  };\r\n  //checked Dos\r\n  const getCheckedDeliverProducts = (checkboxVal, index, Obj) => {\r\n    if (checkboxVal.target.checked === true) {\r\n      setSelectedPoDelivers([...selectedPoDelivers, Obj]);\r\n    }\r\n    if (checkboxVal.target.checked !== true) {\r\n      const copyselectedPoDeliveries = [...selectedPoDelivers];\r\n      copyselectedPoDeliveries.splice(index, 1);\r\n      setSelectedPoDelivers(copyselectedPoDeliveries);\r\n    }\r\n  };\r\n\r\n  // Start for tab refresh navigation #Renuka 1-06-23\r\n  const tabs = [\r\n    { id: '1', name: 'Delivery order' },\r\n    { id: '2', name: 'Attachments' },\r\n    { id: '3', name: 'Notes' },\r\n  ];\r\n  const toggle = (tab) => {\r\n    setActiveTab(tab);\r\n  };\r\n  // End for tab refresh navigation #Renuka 1-06-23\r\n\r\n  //   //Attachments\r\n  const dataForAttachment = () => {\r\n    setDataForAttachment({\r\n      modelType: 'attachment',\r\n    });\r\n  };\r\n  //Pictures\r\n  const dataForPicture = () => {\r\n    setDataForPicture({\r\n      modelType: 'picture',\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getSupplier();\r\n    getPoProduct();\r\n    getPurchaseOrderId();\r\n    getDeliveryOrders();\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      <BreadCrumbs />\r\n      <ToastContainer></ToastContainer>\r\n      {/* PurchaseorderButtons */}\r\n      {/* <PurchaseOrderButtons\r\n        applyChanges={applyChanges}\r\n        backToList={backToList}\r\n        editPurchaseData={editPurchaseData}\r\n        purchaseDetails={purchaseDetails}\r\n        products={products}\r\n        product={product}\r\n        navigate={navigate}\r\n      /> */}\r\n      <ApiButton\r\n              editData={editPurchaseData}\r\n              navigate={navigate}\r\n              applyChanges={editPurchaseData}\r\n              backToList={backToList}\r\n              module=\"PurchaseOrder\"\r\n            ></ApiButton>\r\n      {/* PurchaseOrder Details */}\r\n      <PurchaseOrderDetailsPart\r\n        supplier={supplier}\r\n        handleInputs={handleInputs}\r\n        purchaseDetails={purchaseDetails}\r\n      />\r\n      <ComponentCard title=\"Product Linked\">\r\n        <AddPoModal\r\n          PurchaseOrderId={id}\r\n          supplierId={supplierId}\r\n          addPurchaseOrderModal={addPurchaseOrderModal}\r\n          setAddPurchaseOrderModal={setAddPurchaseOrderModal}\r\n        />\r\n\r\n        <Row className=\"mb-4\">\r\n          <Col md=\"2\">\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                setAddPurchaseOrderModal(true);\r\n              }}\r\n            >\r\n              Add Product\r\n            </Button>\r\n          </Col>\r\n          <Col md=\"2\">\r\n            <Button\r\n              color=\"success\"\r\n              onClick={() => {\r\n                addQtytoStocks();\r\n              }}\r\n            >\r\n              Add all Qty to Stock\r\n            </Button>\r\n          </Col>\r\n          <Col md=\"2\">\r\n            <Button\r\n              color=\"primary\"\r\n              onClick={() => {\r\n                deliverOrder();\r\n              }}\r\n            >\r\n              Delivery Order\r\n            </Button>\r\n          </Col>\r\n          <Col md=\"3\">\r\n            <b color=\"primary\">Grand Total(for delivered qty):{grTotal}</b>\r\n          </Col>\r\n          <Col md=\"3\">\r\n            <b color=\"primary\">Grand Total:{gTotal}</b>\r\n          </Col>\r\n        </Row>\r\n        <ProductLinkedTable\r\n          products={products}\r\n          setProduct={setProduct}\r\n          getCheckedDeliverProducts={getCheckedDeliverProducts}\r\n          getCheckedPoProducts={getCheckedPoProducts}\r\n          setEditModal={setEditModal}\r\n          setViewHistoryModal={setViewHistoryModal}\r\n          deletePoProduct={deletePoProduct}\r\n          setHistoryProduct={setHistoryProduct}\r\n        />\r\n      </ComponentCard>\r\n      {editModal && (\r\n        <PurchaseOrderlineItemEdit\r\n          product={product}\r\n          editModal={editModal}\r\n          editPoProductData={editPoProductData}\r\n          setEditModal={setEditModal}\r\n          handlePOInputs={handlePOInputs}\r\n        ></PurchaseOrderlineItemEdit>\r\n      )}\r\n      {viewHistoryModal && (\r\n        <ViewHistoryModal\r\n          viewHistoryModal={viewHistoryModal}\r\n          setViewHistoryModal={setViewHistoryModal}\r\n          productId={historyProduct}\r\n          supplierId={supplierId}\r\n        />\r\n      )}\r\n\r\n      {deliveryOrderEditModal && (\r\n        <DeliveryOrderEditModal\r\n          deliveryOrderEditModal={deliveryOrderEditModal}\r\n          setDeliveryOrderEditModal={setDeliveryOrderEditModal}\r\n          deliveryOrderId={deliveryOrderId}\r\n        />\r\n      )}\r\n      <ComponentCard title=\"More Details\">\r\n        <Tab toggle={toggle} tabs={tabs} />\r\n        <TabContent className=\"p-4\" activeTab={activeTab}>\r\n          <TabPane tabId=\"1\">\r\n            {/* delivery order  */}\r\n            {deliveryOrders &&\r\n              deliveryOrders.map((element) => {\r\n                return (\r\n                  <Row key={element.delivery_order_id}>\r\n                    <Col md=\"6\">\r\n                      <span>{moment(element.date).format('YYYY-MM-DD')}</span>\r\n                    </Col>\r\n                    <Col md=\"6\">\r\n                      <span\r\n                        color=\"primary\"\r\n                        className=\"m-2 color-primary\"\r\n                        onClick={() => {\r\n                          setDeliveryOrderId(element.delivery_order_id);\r\n                          setDeliveryOrderEditModal(true);\r\n                        }}\r\n                      >\r\n                        <Icon.Edit />\r\n                      </span>\r\n                      <PdfDeliveryOrderPO\r\n                        id={id}\r\n                        deliveryOrderId={element.delivery_order_id}\r\n                        date={element.date}\r\n                      ></PdfDeliveryOrderPO>\r\n                    </Col>\r\n                  </Row>\r\n                );\r\n              })}\r\n          </TabPane>\r\n          <TabPane tabId=\"2\">\r\n            <Row>\r\n              <AttachmentTab\r\n                dataForPicture={dataForPicture}\r\n                dataForAttachment={dataForAttachment}\r\n                id={id}\r\n                attachmentModal={attachmentModal}\r\n                setAttachmentModal={setAttachmentModal}\r\n                pictureData={pictureData}\r\n                attachmentData={attachmentData}\r\n              />\r\n            </Row>\r\n          </TabPane>\r\n          <TabPane tabId=\"3\">\r\n            <Row>\r\n              <AddNote recordId={id} roomName=\"PurchaseOrderEdit\" />\r\n              <ViewNote recordId={id} roomName=\"PurchaseOrderEdit\" />\r\n            </Row>\r\n          </TabPane>\r\n        </TabContent>\r\n      </ComponentCard>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default PurchaseOrderEdit;\r\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Row, Media } from 'reactstrap';\r\nimport Swal from 'sweetalert2';\r\nimport * as Icon from 'react-feather';\r\nimport PropTypes from 'prop-types';\r\nimport img1 from '../../assets/images/users/user1.jpg';\r\nimport img2 from '../../assets/images/users/user2.jpg';\r\nimport message from '../Message';\r\nimport api from '../../constants/api';\r\n\r\nfunction ViewNote({ roomName, recordId }) {\r\n  ViewNote.propTypes = {\r\n    roomName: PropTypes.string,\r\n    recordId: PropTypes.string,\r\n  };\r\n  const body = {\r\n    width: '100%',\r\n    marginBottom: '10px',\r\n  };\r\n  // const tableStyle = {\r\n  //   borderColor: 'black',\r\n  // };\r\n\r\n  const [getNote, setGetNote] = useState(null);\r\n\r\n  const getNotes = () => {\r\n    api\r\n      .post('/note/getNotes', {\r\n        record_id: recordId,\r\n        room_name: roomName,\r\n      })\r\n      .then((res) => {\r\n        setGetNote(res.data.data);\r\n      });\r\n  };\r\n\r\n  const deleteNotes = (commentId) => {\r\n    // console.log(commentId);\r\n\r\n    Swal.fire({\r\n      title: `Are you sure?`,\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!',\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        api\r\n          .post('/note/deleteNotes', { comment_id: commentId })\r\n          .then((res) => {\r\n            console.log(res);\r\n            Swal.fire('Deleted!', 'Media has been deleted.', 'success');\r\n            window.location.reload();\r\n          })\r\n          .catch(() => {\r\n            message('Unable to Delete Media', 'info');\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getNotes();\r\n  }, [recordId]);\r\n\r\n  return (\r\n    <>\r\n      <Row style={{ marginTop: 20 }}>\r\n          {getNote &&\r\n            getNote.map((e, i) => {\r\n              return (\r\n                <>\r\n                  {i % 2 === 0 ? (\r\n                    <Media  className=\"d-flex\" key={e.comment_id.toString()}>\r\n                      <Media left href=\"#\">\r\n                        <Media\r\n                          object\r\n                          src={img1}\r\n                          alt=\"Generic placeholder image\"\r\n                          width=\"40\"\r\n                          style={{ borderRadius: 50 }}\r\n                        />\r\n                      </Media>\r\n\r\n                      <Media body className=\"ms-3\" style={body}>\r\n                        <Media heading>\r\n                          <div style={{ position: 'relative' }}>\r\n                            Hello {e.name}\r\n                            <p style={{ position: 'absolute', top: 0, right: 0, fontSize: 12 }}>\r\n                              {e.creation_date}\r\n                              <button\r\n                                type=\"button\"\r\n                                className=\"btn\"\r\n                                onClick={() => {\r\n                                  deleteNotes(e.comment_id);\r\n                                }}\r\n                              >\r\n                                <Icon.Trash2 style={{ width: 20 }} />{' '}\r\n                              </button>\r\n                            </p>\r\n                          </div>\r\n                        </Media>\r\n                        {e.comments}\r\n                      </Media>\r\n                    </Media>\r\n                  ) : (\r\n                    <Media  className=\"ms-3\" key={e.comment_id.toString()}>\r\n                      <Media className=\"d-flex my-4\" >\r\n                        <Media left href=\"#\">\r\n                          <Media\r\n                            object\r\n                            src={img2}\r\n                            alt=\"Generic placeholder image\"\r\n                            width=\"40\"\r\n                            style={{ borderRadius: 50 }}\r\n                          />\r\n                        </Media>\r\n                        <Media body className=\"ms-3\" style={{ width: '100%' }}>\r\n                          <Media heading>\r\n                            <div style={{ position: 'relative' }}>\r\n                              Hello {e.name}\r\n                              <p\r\n                                style={{\r\n                                  position: 'absolute',\r\n                                  top: 0,\r\n                                  right: 0,\r\n                                  fontSize: 12,\r\n                                }}\r\n                              >\r\n                                {e.creation_date}\r\n                                <button\r\n                                  type=\"button\"\r\n                                  className=\"btn\"\r\n                                  onClick={() => {\r\n                                    deleteNotes(e.comment_id);\r\n                                  }}\r\n                                >\r\n                                  <Icon.Trash2 style={{ width: 20 }} />{' '}\r\n                                </button>\r\n                              </p>\r\n                            </div>\r\n                          </Media>\r\n                          {e.comments}\r\n                        </Media>\r\n                      </Media>\r\n                    </Media>\r\n                  )}\r\n                </>\r\n              )\r\n            })}\r\n\r\n        {/* { getNote &&  getNote.map((e) => {\r\n                return  <>\r\n                <tr>\r\n                    <td style={tableStyle}> <p style={{marginBottom:0,fontSize:12}}>{e.name}{e.creation_date}</p> {e.comments} </td>\r\n                    <td width=\"5%\" style={tableStyle}> <button type=\"button\" className=\"btn\" onClick={() => { deleteNotes(e.comment_id) }}><Icon.Trash2/> </button> </td>\r\n                </tr>\r\n            </>\r\n                })} */}\r\n      </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ViewNote;\r\n","import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Row, Col } from 'reactstrap';\r\nimport moment from 'moment';\r\nimport message from '../Message';\r\nimport api from '../../constants/api';\r\n\r\nfunction AddNote({ recordId,roomName }) {\r\n  AddNote.propTypes = {\r\n    recordId: PropTypes.string,\r\n    roomName:PropTypes.string\r\n  };\r\n\r\n  const [addNoteData, setAddNoteData] = useState({\r\n    comments: '',\r\n    room_name:roomName,\r\n    record_id: recordId,\r\n    creation_date: moment().format('DD-MM-YYYY'),\r\n  });\r\n\r\n  const handleData = (e) => {\r\n    setAddNoteData({ ...addNoteData, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  const SubmitNote = () => {\r\n    //setAddNoteData(console.log(addNoteData))\r\n    api.post('/note/addNote', addNoteData).then(() => {\r\n      message('Add Note Successfully', 'success');\r\n      setTimeout(() => {\r\n        window.location.reload();\r\n      }, 400);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n        <Row>\r\n          <textarea id=\"note\" name=\"comments\" rows=\"4\" cols=\"50\" onChange={handleData} />\r\n        </Row>\r\n        <Row className=\"mb-2\"></Row>\r\n        <Row className=\"mb-1\">\r\n          <Col md=\"1\">\r\n            <button\r\n              type=\"button\"\r\n              className=\"btn btn-primary btn-sm shadow-none\"\r\n              onClick={SubmitNote}\r\n            >\r\n              Submit\r\n            </button>\r\n          </Col>\r\n          <Col md=\"1\">\r\n            <button type=\"button\" className=\"btn btn-dark btn-sm shadow-none\">\r\n              Cancel\r\n            </button>\r\n          </Col>\r\n        </Row>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default AddNote;\r\n"],"names":["_ref","attachmentModal","setAttachmentModal","moduleId","roomName","fileTypes","altTagData","desc","file","setFile","useState","handleValue","setHandleValue","uploaded","setUploaded","_jsx","children","_jsxs","Modal","isOpen","ModalHeader","ModalBody","FormGroup","FileUploader","multiple","handleChange","fiels","arrayOfObj","Object","entries","map","e","console","log","name","types","className","role","style","width","concat","ModalFooter","Button","color","onClick","uploadFile","data","FormData","forEach","ele","append","api","post","onUploadProgress","filedata","Math","round","loaded","total","then","message","catch","window","location","reload","tableStyle","getFile","setGetFile","useEffect","record_id","room_name","res","_Fragment","href","target","rel","src","height","alt","type","fileId","media_id","Swal","title","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","Icon","CreationModification","details","CardTitle","tag","Row","Col","created_by","creation_date","modified_by","modification_date","subtitle","creationModificationDate","Card","CardBody","CardSubtitle","projectId","supplierId","addPurchaseOrderModal","setAddPurchaseOrderModal","PurchaseOrderId","addNewProductModal","setAddNewProductModal","getProductValue","setProductValue","productDetail","setProductDetail","category_id","sub_category_id","product_code","qty_in_stock","price","published","addMoreItem","setMoreItem","id","random","int","toString","itemId","unit","qty","mrp","gst","description","insertPurchaseOrderData","po_code","supplier_id","contact_id_supplier","delivery_terms","status","project_id","flag","Date","supplier_reference_no","our_reference_no","shipping_method","payment_terms","delivery_date","po_date","shipping_address_flat","shipping_address_street","shipping_address_country","shipping_address_po_code","expense_id","staff_id","purchase_order_date","payment_status","priority","follow_up_date","notes","supplier_inv_code","gst_percentage","delivery_to","contact","mobile","payment","project","getProduct","get","items","finaldat","item","push","value","product_id","label","getAllValues","oldArray","$","each","allValues","find","fieldName","attr","val","obj","foundObj","el","item_title","itemObj","purchase_order_id","quantity","amount","cost_price","selling_price","qty_updated","parseInt","damage_qty","brand","qty_requested","qty_delivered","setTimeout","updateState","index","property","copyDeliverOrderProducts","updatedObject","_objectSpread","size","md","scope","Select","defaultValue","onChange","onchangeItem","str","element","options","Input","uom","Link","to","ind","current","filter","Label","sm","insertedDataId","insertId","dataForPicture","dataForAttachment","pictureData","attachmentData","setRoomName","setFileTypes","Form","ComponentCard","xs","AttachmentModalV2","recordType","mediaType","modelType","ViewFileComponentV2","product","editModal","editPoProductData","setEditModal","handlePOInputs","onBlur","calculateTotal","po_product_id","viewHistoryModal","setViewHistoryModal","productId","fromSame","setFromSame","fromOthers","setFromOthers","supplierColumn","Table","cell","supplier_name","moment","format","deliveryOrderEditModal","setDeliveryOrderEditModal","deliveryOrderId","deliverOrderProducts","setDeliveryOrderProducts","delivery_order_id","remarks","purchaseDetails","handleInputs","supplier","righttitle","company_name","prirority","purchaseTableColumn","selector","grow","button","sortable","wrap","products","setProduct","getCheckedDeliverProducts","getCheckedPoProducts","deletePoProduct","setHistoryProduct","item_code","qty_balance","po_value","actual_value","date","hfdata","setHeaderFooterData","React","findCompany","key","key_text","GetPdf","productItems","border","dd","pageSize","header","PdfHeader","pageMargins","footer","PdfFooter","content","layout","defaultBorder","hLineWidth","vLineWidth","hLineColor","i","vLineColor","hLineStyle","paddingLeft","paddingRight","paddingTop","paddingBottom","fillColor","table","headerRows","widths","body","alignment","columns","margin","bold","stack","fontSize","canvas","x1","y1","x2","y2","lineWidth","styles","logo","address","invoice","invoiceAdd","textSize","textSize1","notesTitle","tableHead","tableBody","pdfMake","pdfFonts","vfs","open","Tab","toggle","tabs","searchParams","setSearchParams","useSearchParams","Nav","NavItem","NavLink","tab","editData","navigate","applyChanges","backToList","module","isAuthorized","isLoading","usePermify","xl","HasAccess","roles","permissions","renderAuthFailed","PurchaseOrderEdit","setPurchaseDetails","setSupplier","historyProduct","setProducts","setDataForAttachment","setDataForPicture","activeTab","setActiveTab","selectedPoProducts","setSelectedPoProducts","selectedPoDelivers","setSelectedPoDelivers","setDeliveryOrderId","deliveryOrders","setDeliveryOrders","setSupplierId","gTotal","setGtotal","grTotal","setGrTotal","useParams","useNavigate","editPurchaseData","grandTotal","grand","elem","BreadCrumbs","ToastContainer","ApiButton","PurchaseOrderDetailsPart","AddPoModal","parseFloat","alert","ProductLinkedTable","checkboxVal","Obj","checked","copyselectedPoDeliveries","splice","copyselectedPoProducts","poProductId","PurchaseOrderlineItemEdit","ViewHistoryModal","DeliveryOrderEditModal","TabContent","TabPane","tabId","PdfDeliveryOrderPO","AttachmentTab","AddNote","recordId","ViewNote","prop","useLocation","firstUrl","pathname","split","secondUrl","heading","Breadcrumb","BreadcrumbItem","active","marginBottom","getNote","setGetNote","deleteNotes","commentId","comment_id","marginTop","Media","left","object","img1","borderRadius","position","top","right","comments","img2","addNoteData","setAddNoteData","rows","cols","SubmitNote"],"sourceRoot":""}