{"version":3,"file":"static/js/2283.2836bac3.chunk.js","mappings":"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","sources":["../node_modules/react-feather/dist/icons/table.js","components/Report/ExportReport.js","views/Reports/StatementofAccountsReport.js","../node_modules/react-feather/dist/icons/file.js","layouts/breadcrumbs/BreadCrumbs.js"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Table = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9 3H5a2 2 0 0 0-2 2v4m6-6h10a2 2 0 0 1 2 2v4M9 3v18m0 0h10a2 2 0 0 0 2-2V9M9 21H5a2 2 0 0 1-2-2V9m0 0h18\"\n  }));\n});\nTable.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nTable.displayName = 'Table';\nexport default Table;","import React from 'react';\r\nimport * as Icon from 'react-feather';\r\nimport { Row, Col, Button } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport pdfMake from 'pdfmake';\r\nimport pdfFonts from 'pdfmake/build/vfs_fonts';\r\nimport PdfHeader from '../PDF/PdfHeader';\r\nimport PdfFooter from '../PDF/PdfFooter';\r\nimport api from '../../constants/api';\r\n\r\nconst ExportReport = ({ data, columns }) => {\r\n  ExportReport.propTypes = {\r\n    data: PropTypes.any,\r\n    columns: PropTypes.array,\r\n  };\r\n\r\n  const [hfdata, setHeaderFooterData] = React.useState();\r\n\r\n  React.useEffect(() => {\r\n    api.get('/setting/getSettingsForCompany').then((res) => {\r\n      setHeaderFooterData(res.data.data);\r\n    });\r\n  }, []);\r\n\r\n  const findCompany = (key) => {\r\n    const filteredResult = hfdata.find((e) => e.key_text === key);\r\n    return filteredResult.value;\r\n  };\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter = ',';\r\n    const lineDelimiter = '\\n';\r\n    const keys = [];\r\n    const selectors = [];\r\n    columns.forEach((singleColumn) => {\r\n      keys.push(singleColumn.name);\r\n      selectors.push(singleColumn.selector);\r\n    });\r\n\r\n    console.log(keys);\r\n    result = '';\r\n    result += keys.join(columnDelimiter);\r\n    result += lineDelimiter;\r\n\r\n    array.forEach((item,index) => {\r\n      let ctr = 0;\r\n      selectors.forEach((key) => {\r\n        if (ctr > 0) result += columnDelimiter;\r\n\r\n        result += key === 's_no' ?  index + 1 : (item[key] ? item[key] : '');\r\n\r\n        ctr++;\r\n      });\r\n      result += lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV() {\r\n    const link = document.createElement('a');\r\n    let csv = convertArrayOfObjectsToCSV(data);\r\n    if (csv == null) return;\r\n\r\n    const filename = 'export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv = `data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n  //Pdf\r\n  function buildTableBody() {\r\n    const body = [];\r\n\r\n    const selectors = [];\r\n    const header = [];\r\n    columns.forEach((singleColumn) => {\r\n      selectors.push(singleColumn.selector);\r\n      header.push( {\r\n        text: singleColumn.name,\r\n        style:'tableHead',\r\n      })\r\n    });\r\n    body.push(header);\r\n\r\n    data.forEach((row, index) => {\r\n      const dataRow = [];\r\n\r\n      selectors.forEach((column) => {\r\n\r\n        dataRow.push({text:column === 's_no' ? index + 1 : (row[column] !== undefined ? row[column] : ''),style:'tableBody',});\r\n      });\r\n\r\n      body.push(dataRow);\r\n    });\r\n\r\n    return body;\r\n  }\r\n  const getWidthOfColumns = () => {\r\n    const columnWidth = 100 / columns.length;\r\n    const LEN = columns.length;\r\n    const arry = [];\r\n    for (let i = 0; i < LEN; i++) {\r\n      arry.push(`${columnWidth}%`);\r\n    }\r\n    console.log(arry);\r\n    return arry;\r\n  };\r\n  function table() {\r\n    return {\r\n      table: {\r\n        headerRows: 1,\r\n        dontBreakRows: true,\r\n        widths: getWidthOfColumns(),\r\n        body: buildTableBody(),\r\n      },\r\n      layout: 'lightHorizontalLines'\r\n    };\r\n  }\r\n  const downloadPdf = () => {\r\n    const dd = {\r\n      pageSize: 'A4',\r\n      header: PdfHeader({ findCompany }),\r\n      pageMargins: [40, 110, 40, 80],\r\n      footer: PdfFooter,\r\n      content: [\r\n      //   { canvas: [\r\n      //         { type: 'line', x1: 0, y1: -35, x2: 510, y2: -35, lineWidth: 1 }, //Bottom line\r\n      //     ],\r\n      // },\r\n      table()],\r\n      styles:{\r\n        tableHead:{\r\n          border: [false, true, false, true],\r\n          fillColor: '#eaf2f5',\r\n          margin: [0, 5, 0, 5],\r\n          fontSize: 10,\r\n          bold:'true',\r\n    },\r\n    tableBody:{\r\n      border: [false, true, false, true],\r\n      margin: [0, 5, 0, 5],\r\n      fontSize: 10,\r\n},\r\n      }\r\n    };\r\n    pdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n    pdfMake.createPdf(dd, null, null, pdfFonts.pdfMake.vfs).open();\r\n  };\r\n  return (\r\n    <>\r\n      <Row >\r\n        <Col style={{display:'flex',justifyContent:'flex-end'}}>\r\n          <Button style={{background:'green',border:'none',marginRight:'10px'}} className=\"shadow-none\" onClick={downloadCSV}>\r\n          <Icon.Table /> Excel\r\n          </Button>\r\n          <Button style={{background:'#D11606',border:'none'}} className=\"shadow-none\" onClick={downloadPdf}>\r\n          <Icon.File /> PDF\r\n          </Button>\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExportReport;\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Row, Col, Label, Card, CardBody, Button, Input, FormGroup, Table } from 'reactstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport ReactPaginate from 'react-paginate';\r\nimport api from '../../constants/api';\r\nimport message from '../../components/Message';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport ExportReport from '../../components/Report/ExportReport';\r\n\r\nconst StatementofAccountsReport = () => {\r\n  const [report, setReport] = useState('');\r\n  const [company, setCompany] = useState();\r\n  const [userSearchData, setUserSearchData] = useState('');\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n  const [companyName, setCompanyName] = useState('');\r\n\r\n  //Get data from Reports table\r\n  const getAccountsReport = () => {\r\n    api\r\n      .get('/reports/getAccountReport')\r\n      .then((res) => {\r\n        setReport(res.data.data);\r\n        setUserSearchData(res.data.data);\r\n      })\r\n      .catch(() => {\r\n        message('Reports Data Not Found', 'info');\r\n      });\r\n  };\r\n  //Api call for getting company dropdown\r\n  const getCompany = () => {\r\n    api.get('/company/getCompany').then((res) => {\r\n      setCompany(res.data.data);\r\n    });\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    const newData = report\r\n      .filter((y) => y.company_name === (companyName === '' ? y.company_name : companyName))\r\n      .filter((x) =>\r\n        endDate && startDate\r\n          ? x.invoice_date <= (endDate === '' ? x.invoice_date : endDate) &&\r\n            x.invoice_date >= (startDate === '' ? x.invoice_date : startDate)\r\n          : startDate\r\n          ? x.invoice_date === (startDate === '' ? x.invoice_date : startDate)\r\n          : x.invoice_date === (endDate === '' ? x.invoice_date : endDate),\r\n      );\r\n    setUserSearchData(newData);\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAccountsReport();\r\n    getCompany();\r\n  }, []);\r\n\r\n  // Pagination\r\n\r\n  const [page, setPage] = useState(0);\r\n\r\n  const employeesPerPage = 20;\r\n  const numberOfEmployeesVistited = page * employeesPerPage;\r\n  const displayEmployees = userSearchData.slice(\r\n    numberOfEmployeesVistited,\r\n    numberOfEmployeesVistited + employeesPerPage,\r\n  );\r\n  const totalPages = Math.ceil(userSearchData.length / employeesPerPage);\r\n  const changePage = ({ selected }) => {\r\n    setPage(selected);\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      name: 'S.No',\r\n      selector:'s_no'\r\n    },\r\n\r\n    {\r\n      name: 'Date',\r\n      selector: 'invoice_date',\r\n      grow: 0,\r\n      wrap: true,\r\n      width: '4%',\r\n    },\r\n\r\n    {\r\n      name: 'Company Name',\r\n      selector: 'company_name',\r\n      sortable: true,\r\n      grow: 0,\r\n      wrap: true,\r\n    },\r\n    {\r\n      name: 'Code',\r\n      selector: 'invoice_code',\r\n      sortable: true,\r\n      grow: 10,\r\n      wrap: true,\r\n    },\r\n    {\r\n      name: 'Charges (Invoice Amount)',\r\n      selector: 'invoice_amount',\r\n      sortable: true,\r\n      grow: 0,\r\n      wrap: true,\r\n    },\r\n    {\r\n      name: 'Credits (Receipt Amount)',\r\n      selector: 'amount',\r\n      sortable: true,\r\n      grow: 0,\r\n      wrap: true,\r\n    },\r\n    {\r\n      name: 'Payment Mode',\r\n      selector: 'mode_of_payment',\r\n      sortable: true,\r\n      grow: 0,\r\n      wrap: true,\r\n    },\r\n    {\r\n      name: 'Account Balance',\r\n      selector: 'account',\r\n      sortable: true,\r\n      grow: 0,\r\n      wrap: true,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <BreadCrumbs />\r\n      <ToastContainer></ToastContainer>\r\n      <Card>\r\n        <CardBody>\r\n          <Row>\r\n            <Col>\r\n              <FormGroup>\r\n                <Label>Start Date</Label>\r\n                <Input\r\n                  type=\"date\"\r\n                  name=\"startDate\"\r\n                  onChange={(e) => setStartDate(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col>\r\n              <FormGroup>\r\n                <Label>End Date</Label>\r\n                <Input type=\"date\" name=\"endDate\" onChange={(e) => setEndDate(e.target.value)} />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col>\r\n              <FormGroup>\r\n                <Label>Select Company Name</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"company_id\"\r\n                  onChange={(e) => setCompanyName(e.target.value)}\r\n                >\r\n                  <option value=\"\">Please Select</option>\r\n                  {company &&\r\n                    company.map((ele) => {\r\n                      return (\r\n                        <option key={ele.company_id} value={ele.company_name}>\r\n                          {ele.company_name}\r\n                        </option>\r\n                      );\r\n                    })}\r\n                </Input>\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"1\">\r\n              <Button color=\"primary\" className=\"shadow-none mt-3\" onClick={() => handleSearch()}>Go</Button>\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n\r\n      <Card>\r\n        <CardBody>\r\n          <Row>\r\n            <Col md=\"3\">\r\n              <Label>\r\n                <b>Company:</b>\r\n                {companyName}\r\n              </Label>\r\n            </Col>\r\n            <Col md=\"3\">\r\n              <Label>\r\n                <b>Start Date:</b>\r\n                {startDate}\r\n              </Label>\r\n            </Col>\r\n            <Col md=\"3\">\r\n              <Label>\r\n                <b> End Date:</b>\r\n                {endDate}\r\n              </Label>\r\n            </Col>\r\n            <Col md=\"3\">\r\n              <Label>\r\n                <b>Total Outstanding Amount:</b>\r\n              </Label>\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n\r\n      <Card>\r\n        <CardBody>\r\n          <Row>\r\n            <Col>\r\n              <ExportReport columns={columns} data={userSearchData} /> \r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      \r\n        <CardBody>\r\n          <Table>\r\n            <thead>\r\n              <tr>\r\n                {columns.map((cell) => {\r\n                  return <td key={cell.name}>{cell.name}</td>;\r\n                })}\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {displayEmployees &&\r\n                displayEmployees.map((element, index) => {\r\n                  /* eslint-disable */\r\n                  const keyData = parseInt(element.invoice_id.toString() + index);\r\n                  return (\r\n                    <tr key={keyData}>\r\n                      <td>{index + 1}</td>\r\n                      <td>{element.invoice_date}</td>\r\n                      <td>{element.company_name}</td>\r\n                      <td>{element.invoice_code}</td>\r\n                      <td>{element.invoice_amount}</td>\r\n                      <td>{element.amount}</td>\r\n                      <td>{element.mode_of_payment}</td>\r\n                      <td></td>\r\n                    </tr>\r\n                  );\r\n                  /* eslint-disable */\r\n                })}\r\n            </tbody>\r\n          </Table>\r\n          <ReactPaginate\r\n            previousLabel=\"Previous\"\r\n            nextLabel=\"Next\"\r\n            pageCount={totalPages}\r\n            onPageChange={changePage}\r\n            containerClassName=\"navigationButtons\"\r\n            previousLinkClassName=\"previousButton\"\r\n            nextLinkClassName=\"nextButton\"\r\n            disabledClassName=\"navigationDisabled\"\r\n            activeClassName=\"navigationActive\"\r\n          />\r\n        </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default StatementofAccountsReport;","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar File = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M13 2H6a2 2 0 0 0-2 2v16a2 2 0 0 0 2 2h12a2 2 0 0 0 2-2V9z\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"13 2 13 9 20 9\"\n  }));\n});\nFile.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nFile.displayName = 'File';\nexport default File;","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Table","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","React","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","propTypes","PropTypes","displayName","data","columns","hfdata","setHeaderFooterData","api","get","then","res","findCompany","find","e","key_text","value","buildTableBody","body","selectors","header","forEach","singleColumn","push","selector","text","name","style","row","index","dataRow","column","undefined","getWidthOfColumns","columnWidth","LEN","arry","concat","console","log","_jsx","_Fragment","children","Row","_jsxs","Col","display","justifyContent","Button","background","border","marginRight","className","onClick","link","document","createElement","csv","array","result","join","item","ctr","convertArrayOfObjectsToCSV","match","setAttribute","encodeURI","click","Icon","downloadPdf","dd","pageSize","PdfHeader","pageMargins","footer","PdfFooter","content","table","headerRows","dontBreakRows","widths","layout","styles","tableHead","fillColor","margin","fontSize","bold","tableBody","pdfMake","pdfFonts","vfs","open","StatementofAccountsReport","report","setReport","useState","company","setCompany","userSearchData","setUserSearchData","startDate","setStartDate","endDate","setEndDate","companyName","setCompanyName","useEffect","catch","message","page","setPage","numberOfEmployeesVistited","displayEmployees","slice","totalPages","Math","ceil","grow","wrap","sortable","BreadCrumbs","ToastContainer","Card","CardBody","FormGroup","Label","Input","type","onChange","map","ele","company_name","company_id","md","handleSearch","newData","filter","y","x","invoice_date","ExportReport","cell","element","keyData","parseInt","invoice_id","toString","invoice_code","invoice_amount","amount","mode_of_payment","ReactPaginate","previousLabel","nextLabel","pageCount","onPageChange","selected","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","File","points","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","Breadcrumb","BreadcrumbItem","to","tag","Link","active"],"sourceRoot":""}