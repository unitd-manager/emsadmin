{"version":3,"file":"static/js/9800.23585217.chunk.js","mappings":"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","sources":["constants/creationdatetime.js","components/CreationModification.js","components/ComponentCard.js","components/Message.js","layouts/breadcrumbs/BreadCrumbs.js","views/detailTable/SectionDetails.js"],"sourcesContent":["import moment from \"moment\"\r\n\r\nconst creationdatetime = moment().format('DD-MM-YYYY h:mm:ss a')\r\nexport default creationdatetime \r\n","import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n                <small> Creation: {details && details.created_by} {details && details.creation_date}</small>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n                <small> Modified: {details && details.modified_by} {details && details.modification_date}</small>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n   );\r\n}","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      {/* <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n        <p tag='h2' className=\"float-end small fs-5\">{righttitle}</p>\r\n      </CardTitle> */}\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate:PropTypes.any\r\n};\r\n\r\nexport default ComponentCard;\r\n","import {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst message = (msg,type) => {\r\n    if(type === 'success'){\r\n       return toast.success(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n            });\r\n    } if(type === 'error'){\r\n        return toast.error(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n     } if(type === 'info'){\r\n        return toast.info(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n            }if(type === 'warning'){\r\n               return toast.warning(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"colored\",\r\n                    });\r\n                   }\r\n            return toast(msg);\r\n   \r\n  \r\n}\r\nexport default message\r\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n","import React, { useContext, useState, useEffect } from 'react';\r\nimport { Row, Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport message from '../../components/Message';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport ComponentCard from '../../components/ComponentCard';\r\nimport api from '../../constants/api';\r\nimport AppContext from '../../context/AppContext';\r\nimport creationdatetime from '../../constants/creationdatetime';\r\n\r\nconst SectionDetails = () => {\r\n  // Navigation and Parameter Constants\r\n  const navigate = useNavigate();\r\n  const { id } = useParams();\r\n  //Const Variables\r\n  const [sectionForms, setSectionForms] = useState({\r\n    section_title: '',\r\n  });\r\n  const { loggedInuser } = useContext(AppContext);\r\n  //Expense Functions/Methods\r\n  const handleSectionForms = (e) => {\r\n    setSectionForms({ ...sectionForms, [e.target.name]: e.target.value });\r\n  };\r\n  // Api // insertSection\r\n  const insertSection = () => {\r\n    if (sectionForms.section_title !== '') {\r\n      sectionForms.creation_date = creationdatetime;\r\n      sectionForms.created_by= loggedInuser.first_name; \r\n      api\r\n        .post('/section/insertSection', sectionForms)\r\n        .then((res) => {\r\n          const insertedDataId = res.data.data.insertId;\r\n          message('Section inserted successfully.', 'success');\r\n          setTimeout(() => {\r\n            navigate(`/SectionEdit/${insertedDataId}`);\r\n          }, 300);\r\n        })\r\n        .catch(() => {\r\n          message('Network connection error.', 'error');\r\n        });\r\n    } else {\r\n      message('Please fill all required fields', 'warning');\r\n    }\r\n  };\r\n  useEffect(() => {}, [id]);\r\n  return (\r\n    <div>\r\n      {/* Section Details */}\r\n      <BreadCrumbs />\r\n      <ToastContainer></ToastContainer>\r\n      <Row>\r\n        <Col md=\"6\" xs=\"12\">\r\n          <ComponentCard title=\"Key Details\">\r\n            <Form>\r\n              <FormGroup>\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <Label>\r\n                      Title<span className=\"required\"> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      name=\"section_title\"\r\n                      onChange={(e) => {\r\n                        handleSectionForms(e);\r\n                      }}\r\n                    ></Input>\r\n                  </Col>\r\n                </Row>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Row>\r\n                  <div className=\"pt-3 mt-3 d-flex align-items-center gap-2\">\r\n                    <Button\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        insertSection();\r\n                      }}\r\n                      type=\"button\"\r\n                      className=\"btn mr-2 shadow-none\"\r\n                    >\r\n                      Save & Continue\r\n                    </Button>\r\n                    <Button\r\n                      onClick={() => {\r\n                        navigate(-1);\r\n                      }}\r\n                      type=\"button\"\r\n                      className=\"btn btn-dark shadow-none\"\r\n                    >\r\n                      Go to List\r\n                    </Button>\r\n                  </div>\r\n                </Row>\r\n              </FormGroup>\r\n            </Form>\r\n          </ComponentCard>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SectionDetails;\r\n"],"names":["moment","format","CreationModification","_ref","details","title","_jsx","_Fragment","children","CardTitle","tag","className","_jsxs","Row","Col","created_by","creation_date","modified_by","modification_date","subtitle","creationModificationDate","Card","CardBody","CardSubtitle","message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","Breadcrumb","BreadcrumbItem","to","Link","active","SectionDetails","navigate","useNavigate","id","useParams","sectionForms","setSectionForms","useState","section_title","loggedInuser","useContext","AppContext","useEffect","BreadCrumbs","ToastContainer","md","xs","ComponentCard","Form","FormGroup","Label","Input","name","onChange","e","_objectSpread","target","value","handleSectionForms","Button","color","onClick","creationdatetime","first_name","api","post","then","res","insertedDataId","data","insertId","setTimeout","concat","catch"],"sourceRoot":""}