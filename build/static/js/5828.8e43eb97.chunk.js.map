{"version":3,"file":"static/js/5828.8e43eb97.chunk.js","mappings":"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","sources":["components/CreationModification.js","components/ComponentCard.js","views/detailTable/SupportDetails.js","components/Message.js","layouts/breadcrumbs/BreadCrumbs.js"],"sourcesContent":["import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n                <small> Creation: {details && details.created_by} {details && details.creation_date}</small>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n                <small> Modified: {details && details.modified_by} {details && details.modification_date}</small>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n   );\r\n}","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      {/* <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n        <p tag='h2' className=\"float-end small fs-5\">{righttitle}</p>\r\n      </CardTitle> */}\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate:PropTypes.any\r\n};\r\n\r\nexport default ComponentCard;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport ComponentCard from '../../components/ComponentCard';\r\nimport message from '../../components/Message';\r\nimport api from '../../constants/api';\r\n\r\nconst SupportDetails = () => {\r\n  const currentDate = moment().format('YYYY-MM-DD');\r\n\r\n  //All state variables\r\n  const [supportDetails, setSupportDetails] = useState({\r\n    support_id: '',\r\n    title: '',\r\n    date: currentDate,\r\n    value: 'new',\r\n    record_type: 'Change Request',\r\n    creation_date: moment(),\r\n  });\r\n\r\n  const [section, setSection] = useState();\r\n\r\n  //Navigation and parameters\r\n  const navigate = useNavigate();\r\n\r\n  // Api call for  getting Module  Name\r\n  const getModuleName = () => {\r\n    api\r\n      .get('/support/getSection')\r\n      .then((res) => {\r\n        setSection(res.data.data);\r\n      })\r\n      .catch(() => {\r\n        message('Support Data Not Found', 'info');\r\n      });\r\n  };\r\n  //support data in supportDetails\r\n  const handleInputs = (e) => {\r\n    const valueArray = e.target.value.split(',');\r\n    /*eslint-disable */\r\n    supportDetails.title = valueArray[0];\r\n    supportDetails.section_id = parseInt(valueArray[1]);\r\n    setSupportDetails(supportDetails);\r\n  };\r\n  //Insert support\r\n  const insertSupportData = () => {\r\n    if (supportDetails.section_id) {\r\n      api\r\n        .post('/support/insertSupport', supportDetails)\r\n        .then((res) => {\r\n          const insertedDataId = res.data.data.insertId;\r\n          message('Support inserted successfully.', 'success');\r\n          setTimeout(() => {\r\n            navigate(`/SupportEdit/${insertedDataId}`);\r\n          }, 300);\r\n        })\r\n        .catch(() => {\r\n          message('Unable to edit record.', 'error');\r\n        });\r\n    } else {\r\n      message('Please select module.', 'error');\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getModuleName();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <BreadCrumbs />\r\n      <Row>\r\n        <Col md=\"6\" xs=\"12\">\r\n          <ComponentCard title=\"Key Details\">\r\n            <Form>\r\n              <FormGroup>\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <Label>\r\n                      Module Name <span className=\"required\"> *</span>\r\n                    </Label>\r\n                    <Input type=\"select\" onChange={handleInputs} name=\"section_id\">\r\n                      <option defaultValue=\"selected\">Please Select</option>\r\n                      {section &&\r\n                        section.map((ele) => {\r\n                          return (\r\n                            <option\r\n                              key={ele.section_id}\r\n                              value={`${ele.section_title},${ele.section_id}`}\r\n                            >\r\n                              {ele.section_title}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                    </Input>\r\n                  </Col>\r\n                </Row>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Row>\r\n                  <div className=\"mt-3 d-flex align-items-center gap-2\">\r\n                    <Button\r\n                      className=\"shadow-none\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        insertSupportData();\r\n                        setTimeout(() => {\r\n                          navigate('/SupportEdit');\r\n                        }, 800);\r\n                      }}\r\n                    >\r\n                      Save & Continue\r\n                    </Button>\r\n\r\n                    <Button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-dark shadow-none\"\r\n                      onClick={(e) => {\r\n                        if (window.confirm('Are you sure you want to cancel? ')) {\r\n                          navigate('/Support');\r\n                        } else {\r\n                          e.preventDefault();\r\n                        }\r\n                      }}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </div>\r\n                </Row>\r\n              </FormGroup>\r\n            </Form>\r\n          </ComponentCard>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SupportDetails;\r\n","import {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst message = (msg,type) => {\r\n    if(type === 'success'){\r\n       return toast.success(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n            });\r\n    } if(type === 'error'){\r\n        return toast.error(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n     } if(type === 'info'){\r\n        return toast.info(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n            }if(type === 'warning'){\r\n               return toast.warning(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"colored\",\r\n                    });\r\n                   }\r\n            return toast(msg);\r\n   \r\n  \r\n}\r\nexport default message\r\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n"],"names":["CreationModification","_ref","details","title","_jsx","_Fragment","children","CardTitle","tag","className","_jsxs","Row","Col","created_by","creation_date","modified_by","modification_date","subtitle","creationModificationDate","Card","CardBody","CardSubtitle","SupportDetails","currentDate","moment","format","supportDetails","setSupportDetails","useState","support_id","date","value","record_type","section","setSection","navigate","useNavigate","useEffect","api","get","then","res","data","catch","message","BreadCrumbs","md","xs","ComponentCard","Form","FormGroup","Label","Input","type","onChange","e","valueArray","target","split","section_id","parseInt","name","defaultValue","map","ele","concat","section_title","Button","color","onClick","post","insertedDataId","insertId","setTimeout","window","confirm","preventDefault","msg","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","prop","location","useLocation","firstUrl","pathname","secondUrl","heading","Breadcrumb","BreadcrumbItem","to","Link","active"],"sourceRoot":""}