{"version":3,"file":"static/js/9778.15646388.chunk.js","mappings":"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","sources":["constants/creationdatetime.js","views/EditData/CategoryEdit.js","layouts/breadcrumbs/BreadCrumbs.js"],"sourcesContent":["import moment from \"moment\"\r\n\r\nconst creationdatetime = moment().format('DD-MM-YYYY h:mm:ss a')\r\nexport default creationdatetime \r\n","import React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport '../form-editor/editor.scss';\r\nimport * as Icon from 'react-feather';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { Button, Col, Form, FormGroup, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport message from '../../components/Message';\r\nimport api from '../../constants/api';\r\nimport CategoryButton from '../../components/CategoryTable/CategoryButton';\r\nimport CategoryDetailComp from '../../components/CategoryTable/CategoryDetailComp';\r\nimport creationdatetime from '../../constants/creationdatetime';\r\nimport ViewFileComponentV2 from '../../components/ProjectModal/ViewFileComponentV2';\r\nimport AttachmentModalV2 from '../../components/Tender/AttachmentModalV2';\r\nimport ComponentCard from '../../components/ComponentCard';\r\n\r\n\r\nconst CategoryEdit = () => {\r\n  //All state variables\r\n  const [categoryDetails, setCategoryDetails] = useState();\r\n  const [activeTab, setActiveTab] = useState('1');\r\n  const [attachmentModal, setAttachmentModal] = useState(false);\r\n  const [RoomName, setRoomName] = useState('');\r\n  const [fileTypes, setFileTypes] = useState('');\r\n  const [section, setSection] = useState();\r\n  const [valuelist, setValuelist] = useState();\r\n  const [pictureData, setDataForPicture] = useState({\r\n    modelType: '',\r\n  });\r\n  const [pictureupdate, setPictureUpdate] = useState(false);\r\n  //Navigation and Parameter Constants\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  // Abi for Picture attachment\r\n  const dataForPicture = () => {\r\n    setDataForPicture({\r\n      modelType: 'picture',\r\n    });\r\n  };\r\n  // Button Save Apply Back List\r\n  const applyChanges = () => {};\r\n  const saveChanges = () => {\r\n    if (categoryDetails.category_title !== '') {\r\n      navigate('/Category');\r\n    }\r\n  };\r\n  const backToList = () => {\r\n    navigate('/Category');\r\n  };\r\n\r\n  //Api call for getting section dropdown\r\n  const getSection = () => {\r\n    api\r\n      .get('/category/getSectionTitle')\r\n      .then((res) => {\r\n        setSection(res.data.data);\r\n      })\r\n      .catch(() => {\r\n        message('Section not found', 'info');\r\n      });\r\n  };\r\n\r\n  //Api call for getting valuelist dropdown\r\n  const getValuelist = () => {\r\n    api\r\n      .get('/category/get-ValueList')\r\n      .then((res) => {\r\n        setValuelist(res.data.data);\r\n      })\r\n      .catch(() => {\r\n        message('valuelist not found', 'info');\r\n      });\r\n  };\r\n\r\n  const handleInputs = (e) => {\r\n    setCategoryDetails({ ...categoryDetails, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Get Category By Id\r\n  const CategoryById = () => {\r\n    api\r\n      .post('/category/getCategoryById', { category_id: id })\r\n      .then((res) => {\r\n        setCategoryDetails(res.data.data[0]);\r\n      })\r\n      .catch(() => {\r\n        message('category Data Not Found', 'info');\r\n      });\r\n  };\r\n\r\n  //Category Edit function\r\n  const editCategoryData = () => {\r\n    categoryDetails.modification_date = creationdatetime;\r\n    if (categoryDetails.category_title !== '') {\r\n      api\r\n        .post('/category/editCategory', categoryDetails)\r\n        .then(() => {\r\n          message('Record editted successfully', 'success');\r\n        })\r\n        .catch(() => {\r\n          message('Unable to edit record.', 'error');\r\n        });\r\n    } else {\r\n      message('Please fill all required fields', 'warning');\r\n    }\r\n  };\r\n\r\n  //Delete Category Function\r\n  const deleteCategoryData = () => {\r\n    api\r\n      .post('/category/deleteCategory', { category_id: id })\r\n      .then(() => {\r\n        message('Record deteled successfully', 'success');\r\n      })\r\n      .catch(() => {\r\n        message('Unable to delete record.', 'error');\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    CategoryById();\r\n    getSection();\r\n    getValuelist();\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      <BreadCrumbs />\r\n      <ToastContainer></ToastContainer>\r\n\r\n      {/* Button */}\r\n      <CategoryButton\r\n        editCategoryData={editCategoryData}\r\n        navigate={navigate}\r\n        applyChanges={applyChanges}\r\n        saveChanges={saveChanges}\r\n        deleteCategoryData={deleteCategoryData}\r\n        backToList={backToList}\r\n        id={id}\r\n      ></CategoryButton>\r\n\r\n      {/* More details*/}\r\n      <CategoryDetailComp\r\n        categoryDetails={categoryDetails}\r\n        handleInputs={handleInputs}\r\n        section={section}\r\n        valuelist={valuelist}\r\n      ></CategoryDetailComp>\r\n       <ComponentCard>\r\n        <ToastContainer></ToastContainer>\r\n        <Nav tabs>\r\n          <NavItem>\r\n            <NavLink\r\n              className={activeTab === '1' ? 'active' : ''}\r\n              onClick={() => {\r\n                toggle('1');\r\n              }}\r\n            >\r\n              Picture\r\n            </NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n        <TabContent className=\"p-4\" activeTab={activeTab}>\r\n          <TabPane tabId=\"1\">\r\n            <Form>\r\n              <FormGroup>\r\n                <Row>\r\n                  <Col xs=\"12\" md=\"3\" className=\"mb-3\">\r\n                    <Button\r\n                      className=\"shadow-none\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        setRoomName('Category');\r\n                        setFileTypes(['JPG','JPEG','PNG', 'GIF', 'OGG', 'MP3', 'WAV', 'M4A']);\r\n                        dataForPicture();\r\n                        setAttachmentModal(true);\r\n                      }}\r\n                    >\r\n                      <Icon.Image className=\"rounded-circle\" width=\"20\" />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                <AttachmentModalV2\r\n                  moduleId={id}\r\n                  attachmentModal={attachmentModal}\r\n                  setAttachmentModal={setAttachmentModal}\r\n                  roomName={RoomName}\r\n                  fileTypes={fileTypes}\r\n                  altTagData=\"Category Data\"\r\n                  desc=\"Category Data\"\r\n                  recordType=\"Picture\"\r\n                  mediaType={pictureData.modelType}\r\n                  update={pictureupdate}\r\n                  setUpdate={setPictureUpdate}\r\n                />\r\n                <ViewFileComponentV2 moduleId={id} roomName=\"Category\" recordType=\"Picture\" update={pictureupdate}\r\n                    setUpdate={setPictureUpdate} />\r\n              </FormGroup>\r\n            </Form>\r\n          </TabPane>\r\n        </TabContent>\r\n      </ComponentCard>\r\n    </>\r\n  );\r\n};\r\nexport default CategoryEdit;\r\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n"],"names":["moment","format","CategoryEdit","categoryDetails","setCategoryDetails","useState","activeTab","setActiveTab","attachmentModal","setAttachmentModal","RoomName","setRoomName","fileTypes","setFileTypes","section","setSection","valuelist","setValuelist","pictureData","setDataForPicture","modelType","pictureupdate","setPictureUpdate","id","useParams","navigate","useNavigate","useEffect","api","post","category_id","then","res","data","catch","message","get","_jsxs","_Fragment","children","_jsx","BreadCrumbs","ToastContainer","CategoryButton","editCategoryData","modification_date","creationdatetime","category_title","applyChanges","saveChanges","deleteCategoryData","backToList","CategoryDetailComp","handleInputs","e","_objectSpread","target","name","value","ComponentCard","Nav","tabs","NavItem","NavLink","className","onClick","tab","TabContent","TabPane","tabId","Form","FormGroup","Row","Col","xs","md","Button","color","Icon","width","AttachmentModalV2","moduleId","roomName","altTagData","desc","recordType","mediaType","update","setUpdate","ViewFileComponentV2","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","Breadcrumb","BreadcrumbItem","to","tag","Link","active"],"sourceRoot":""}