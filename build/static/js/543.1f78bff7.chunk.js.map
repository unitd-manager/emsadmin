{"version":3,"file":"static/js/543.1f78bff7.chunk.js","mappings":"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","sources":["components/CreationModification.js","components/ComponentCard.js","views/cubosale/AddProjects.js","layouts/breadcrumbs/BreadCrumbs.js"],"sourcesContent":["import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n                <small> Creation: {details && details.created_by} {details && details.creation_date}</small>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n                <small> Modified: {details && details.modified_by} {details && details.modification_date}</small>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n   );\r\n}","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      {/* <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n        <p tag='h2' className=\"float-end small fs-5\">{righttitle}</p>\r\n      </CardTitle> */}\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate:PropTypes.any\r\n};\r\n\r\nexport default ComponentCard;\r\n","import React,{useState} from 'react';\r\n\r\nimport {\r\n  Row,\r\n  Col,\r\n  Form,\r\n  FormGroup,\r\n  Label,\r\n  Input,\r\n  Button,\r\n} from 'reactstrap';\r\nimport Swal from 'sweetalert2'\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport ComponentCard from '../../components/ComponentCard';\r\nimport api from '../../constants/api';\r\n\r\n\r\nconst AddProjects = () => {\r\n\r\n    const [projectname, setProjectName] = useState('')\r\n    const addProject = () =>{\r\n      if(projectname !== ''){\r\n        api\r\n        .post('/api/addProject',{\r\n          title:projectname\r\n        })\r\n        .then((res) => {\r\n          \r\n          if(res && res.data.status === '400'){\r\n            alert('Cannot add project.')\r\n          }else{\r\n            Swal.fire({\r\n              title: 'Success',\r\n              text: 'Project Added!',\r\n              icon: 'success'\r\n            })\r\n             window.location.reload()\r\n          }\r\n          //navigate('/dashboards/classic');\r\n          // setLoginData(res.data);\r\n        })\r\n        .catch((err) => {\r\n          console.log(err);\r\n        });\r\n      }else{\r\n        Swal.fire({\r\n          title: 'Error',\r\n          text: 'Project name is required!',\r\n          icon: 'warning'\r\n        })\r\n      }\r\n     \r\n    }\r\n  return (\r\n    <div>\r\n      <BreadCrumbs />\r\n      <Row>\r\n        <Col md=\"12\">\r\n          <ComponentCard title=\"Add Projects\">\r\n            <Form>\r\n              <FormGroup>\r\n                <Label htmlFor=\"exampleEmail12\">Project Name</Label>\r\n                <Input\r\n                  type=\"email\"\r\n                  name=\"email\"\r\n                  id=\"exampleEmail12\"\r\n                  onInput={e => setProjectName(e.target.value)}\r\n                />\r\n                \r\n              </FormGroup>\r\n             \r\n              <Button onClick={()=>{addProject()}} color=\"primary\">Submit</Button>\r\n            </Form>\r\n          </ComponentCard>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default AddProjects;\r\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n"],"names":["CreationModification","_ref","details","title","_jsx","_Fragment","children","CardTitle","tag","className","_jsxs","Row","Col","created_by","creation_date","modified_by","modification_date","subtitle","creationModificationDate","Card","CardBody","CardSubtitle","AddProjects","projectname","setProjectName","useState","BreadCrumbs","md","ComponentCard","Form","FormGroup","Label","htmlFor","Input","type","name","id","onInput","e","target","value","Button","onClick","api","post","then","res","data","status","alert","Swal","text","icon","window","location","reload","catch","err","console","log","color","prop","useLocation","firstUrl","pathname","split","secondUrl","heading","Breadcrumb","BreadcrumbItem","to","Link","active"],"sourceRoot":""}