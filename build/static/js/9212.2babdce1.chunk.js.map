{"version":3,"file":"static/js/9212.2babdce1.chunk.js","mappings":"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","sources":["../node_modules/react-feather/dist/icons/table.js","components/Report/ExportReport.js","views/Reports/ProjectReport.js","components/Message.js","layouts/breadcrumbs/BreadCrumbs.js"],"sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Table = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"path\", {\n    d: \"M9 3H5a2 2 0 0 0-2 2v4m6-6h10a2 2 0 0 1 2 2v4M9 3v18m0 0h10a2 2 0 0 0 2-2V9M9 21H5a2 2 0 0 1-2-2V9m0 0h18\"\n  }));\n});\nTable.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nTable.displayName = 'Table';\nexport default Table;","import React from 'react';\r\nimport * as Icon from 'react-feather';\r\nimport { Row, Col, Button } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n// import pdfMake from 'pdfmake';\r\n// import pdfFonts from 'pdfmake/build/vfs_fonts';\r\n// import PdfHeader from '../PDF/PdfHeader';\r\n// import PdfFooter from '../PDF/PdfFooter';\r\n// import api from '../../constants/api';\r\n\r\nconst ExportReport = ({ data, columns }) => {\r\n  ExportReport.propTypes = {\r\n    data: PropTypes.any,\r\n    columns: PropTypes.array,\r\n  };\r\n\r\n  // const [hfdata, setHeaderFooterData] = React.useState();\r\n\r\n  // React.useEffect(() => {\r\n  //   api.get('/setting/getSettingsForCompany').then((res) => {\r\n  //     setHeaderFooterData(res.data.data);\r\n  //   });\r\n  // }, []);\r\n\r\n  // const findCompany = (key) => {\r\n  //   const filteredResult = hfdata.find((e) => e.key_text === key);\r\n  //   return filteredResult.value;\r\n  // };\r\n\r\n  function convertArrayOfObjectsToCSV(array) {\r\n    let result;\r\n\r\n    const columnDelimiter = ',';\r\n    const lineDelimiter = '\\n';\r\n    const keys = [];\r\n    const selectors = [];\r\n    columns.forEach((singleColumn) => {\r\n      keys.push(singleColumn.name);\r\n      selectors.push(singleColumn.selector);\r\n    });\r\n\r\n    console.log(keys);\r\n    result = '';\r\n    result += keys.join(columnDelimiter);\r\n    result += lineDelimiter;\r\n\r\n    array.forEach((item,index) => {\r\n      let ctr = 0;\r\n      selectors.forEach((key) => {\r\n        if (ctr > 0) result += columnDelimiter;\r\n\r\n        result += key === 's_no' ?  index + 1 : (item[key] ? item[key] : '');\r\n\r\n        ctr++;\r\n      });\r\n      result += lineDelimiter;\r\n    });\r\n\r\n    return result;\r\n  }\r\n\r\n  function downloadCSV() {\r\n    const link = document.createElement('a');\r\n    let csv = convertArrayOfObjectsToCSV(data);\r\n    if (csv == null) return;\r\n\r\n    const filename = 'export.csv';\r\n\r\n    if (!csv.match(/^data:text\\/csv/i)) {\r\n      csv = `data:text/csv;charset=utf-8,${csv}`;\r\n    }\r\n\r\n    link.setAttribute('href', encodeURI(csv));\r\n    link.setAttribute('download', filename);\r\n    link.click();\r\n  }\r\n  //Pdf\r\n  // function buildTableBody() {\r\n  //   const body = [];\r\n\r\n  //   const selectors = [];\r\n  //   const header = [];\r\n  //   columns.forEach((singleColumn) => {\r\n  //     selectors.push(singleColumn.selector);\r\n  //     header.push( {\r\n  //       text: singleColumn.name,\r\n  //       style:'tableHead',\r\n  //     })\r\n  //   });\r\n  //   body.push(header);\r\n\r\n  //   data.forEach((row, index) => {\r\n  //     const dataRow = [];\r\n\r\n  //     selectors.forEach((column) => {\r\n\r\n  //       dataRow.push({text:column === 's_no' ? index + 1 : (row[column] !== undefined ? row[column] : ''),style:'tableBody',});\r\n  //     });\r\n\r\n  //     body.push(dataRow);\r\n  //   });\r\n\r\n  //   return body;\r\n  // }\r\n  // const getWidthOfColumns = () => {\r\n  //   const columnWidth = 100 / columns.length;\r\n  //   const LEN = columns.length;\r\n  //   const arry = [];\r\n  //   for (let i = 0; i < LEN; i++) {\r\n  //     arry.push(`${columnWidth}%`);\r\n  //   }\r\n  //   console.log(arry);\r\n  //   return arry;\r\n  // };\r\n  // function table() {\r\n  //   return {\r\n  //     table: {\r\n  //       headerRows: 1,\r\n  //       dontBreakRows: true,\r\n  //       widths: getWidthOfColumns(),\r\n  //       body: buildTableBody(),\r\n  //     },\r\n  //     layout: 'lightHorizontalLines'\r\n  //   };\r\n  // }\r\n//   const downloadPdf = () => {\r\n//     const dd = {\r\n//       pageSize: 'A4',\r\n//       header: PdfHeader({ findCompany }),\r\n//       pageMargins: [40, 110, 40, 80],\r\n//       footer: PdfFooter,\r\n//       content: [\r\n//       //   { canvas: [\r\n//       //         { type: 'line', x1: 0, y1: -35, x2: 510, y2: -35, lineWidth: 1 }, //Bottom line\r\n//       //     ],\r\n//       // },\r\n//       table()],\r\n//       styles:{\r\n//         tableHead:{\r\n//           border: [false, true, false, true],\r\n//           fillColor: '#eaf2f5',\r\n//           margin: [0, 5, 0, 5],\r\n//           fontSize: 10,\r\n//           bold:'true',\r\n//     },\r\n//     tableBody:{\r\n//       border: [false, true, false, true],\r\n//       margin: [0, 5, 0, 5],\r\n//       fontSize: 10,\r\n// },\r\n//       }\r\n//     };\r\n//     pdfMake.vfs = pdfFonts.pdfMake.vfs;\r\n//     pdfMake.createPdf(dd, null, null, pdfFonts.pdfMake.vfs).open();\r\n//   };\r\n  return (\r\n    <>\r\n      <Row >\r\n        <Col style={{display:'flex',justifyContent:'flex-end'}}>\r\n          <Button style={{background:'green',border:'none',marginRight:'10px'}} className=\"shadow-none\" onClick={downloadCSV}>\r\n          <Icon.Table /> Excel\r\n          </Button>\r\n          {/* <Button style={{background:'#D11606',border:'none'}} className=\"shadow-none\" onClick={downloadPdf}>\r\n          <Icon.File /> PDF\r\n          </Button> */}\r\n        </Col>\r\n      </Row>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExportReport;\r\n","import React, { useEffect, useState } from 'react';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport moment from 'moment';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { Button, Card, CardBody, Col, FormGroup, Input, Label, Row, Table } from 'reactstrap';\r\nimport ReactPaginate from 'react-paginate';\r\nimport api from '../../constants/api';\r\nimport message from '../../components/Message';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport ExportReport from '../../components/Report/ExportReport';\r\n\r\nconst ProjectReport = () => {\r\n  //All state variable\r\n  const [projectReport, setProjectReport] = useState(null);\r\n  const [userSearchData, setUserSearchData] = useState('');\r\n  const [startDate, setStartDate] = useState('');\r\n  const [endDate, setEndDate] = useState('');\r\n  const [companyName, setCompanyName] = useState('');\r\n  const [projectStatus, setProjectStatus] = useState('');\r\n \r\n  //Get data from Training table\r\n  const getProject = () => {\r\n    api\r\n      .get('/reports/getProjectReport')\r\n      .then((res) => {\r\n        setProjectReport(res.data.data);\r\n        setUserSearchData(res.data.data);\r\n      })\r\n      .catch(() => {\r\n        message('Project Data Not Found', 'info');\r\n      });\r\n  };\r\n\r\n  const handleSearch = () => {\r\n    const newData = projectReport\r\n      .filter((y) => y.category === (companyName === '' ? y.category : companyName))\r\n      .filter((z) => z.status === (projectStatus === '' ? z.status : projectStatus))\r\n      .filter(\r\n        (x) => endDate && startDate  ? (x.actual_finish_date <= (endDate === '' ? x.actual_finish_date : endDate) &&\r\n        x.start_date >= (startDate === '' ? x.start_date : startDate) ): startDate ? x.start_date === (startDate === '' ? x.start_date : startDate) :\r\n        x.actual_finish_date === (endDate === '' ? x.actual_finish_date : endDate ) \r\n      );\r\n    setUserSearchData(newData);\r\n\r\n  };\r\n  useEffect(() => {\r\n    getProject();\r\n  }, []);\r\n  const [page, setPage] = useState(0);\r\n\r\n  const employeesPerPage = 20;\r\n  const numberOfEmployeesVistited = page * employeesPerPage;\r\n  const displayEmployees = userSearchData.slice(\r\n    numberOfEmployeesVistited,\r\n    numberOfEmployeesVistited + employeesPerPage,\r\n  );\r\n  const totalPages = Math.ceil(userSearchData.length / employeesPerPage);\r\n  const changePage = ({ selected }) => {\r\n    setPage(selected);\r\n  };\r\n  //structure of Training list view\r\n  const columns = [\r\n    {\r\n      name: 'SN',\r\n      selector:'s_no',\r\n    },\r\n   \r\n    {\r\n      name: 'Project Code',\r\n      selector: 'project_code',\r\n      grow: 0,\r\n      wrap: true,\r\n      width: '4%',\r\n    },\r\n\r\n    {\r\n      name: 'Project Title',\r\n      selector: 'Project_name',\r\n      sortable: true,\r\n      grow: 0,\r\n      wrap: true,\r\n    },\r\n    {\r\n      name: 'Category',\r\n      selector: 'category',\r\n      sortable: true,\r\n      grow: 0,\r\n    },\r\n    {\r\n      name: 'Start Date',\r\n      selector: 'start_date',\r\n      sortable: true,\r\n      grow: 0,\r\n    },\r\n    {\r\n      name: 'End Date',\r\n      selector: 'actual_finish_date',\r\n      sortable: true,\r\n      grow: 0,\r\n    },\r\n    {\r\n      name: 'Client Company',\r\n      selector: 'company_name',\r\n      sortable: true,\r\n      grow: 0,\r\n    },\r\n    {\r\n      name: 'Contact',\r\n      selector: 'contact_name',\r\n      sortable: true,\r\n      grow: 0,\r\n    },\r\n    {\r\n      name: 'Status',\r\n      selector: 'status',\r\n      sortable: true,\r\n      grow: 0,\r\n    },\r\n  ];\r\n  return (\r\n    <>\r\n        <BreadCrumbs />\r\n        <ToastContainer></ToastContainer>\r\n        <Card>\r\n          <CardBody>\r\n            <Row>\r\n              <Col>\r\n              <FormGroup>\r\n                <Label>Start Date</Label>\r\n                <Input\r\n                  type=\"date\"\r\n                  name=\"start_date\"\r\n                  onChange={(e) => setStartDate(e.target.value)}\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col>\r\n              <FormGroup>\r\n                <Label>End Date</Label>\r\n                <Input type=\"date\" name=\"actual_finish_date\" onChange={(e) => setEndDate(e.target.value)} />\r\n              </FormGroup>\r\n            </Col>\r\n              <Col>\r\n              <FormGroup>\r\n                <Label>Select Category</Label>\r\n                <Input\r\n                  type=\"select\"\r\n                  name=\"project_type\"\r\n                  onChange={(e) => setCompanyName(e.target.value)}\r\n                >\r\n                  <option value=\"\">Select</option>\r\n                  <option value=\"Project\">Project</option>\r\n                  <option value=\"Tenancy Project\">Tenancy Project</option>\r\n                  <option value=\"Tenancy Work\">Tenancy Work</option>\r\n                  <option value=\"Maintenance\">Maintenance</option>\r\n                </Input>\r\n              </FormGroup>\r\n            </Col>\r\n              <Col>\r\n              <FormGroup>\r\n              <Label>Status</Label>\r\n                <Input type=\"select\"  name=\"status\"\r\n                  onChange={(e) => setProjectStatus(e.target.value)}>\r\n                <option value=\"\">Please Select</option>\r\n                    <option defaultValue=\"selected\" value=\"WIP\">\r\n                      WIP\r\n                    </option>\r\n                    <option value=\"Billable\">Billable</option>\r\n                    <option value=\"Billed\">Billed</option>\r\n                    <option value=\"Complete\">Complete</option>\r\n                    <option value=\"Cancelled\">Cancelled</option>\r\n                    <option value=\"On Hold\">On Hold</option>\r\n                    <option value=\"Latest\">Latest</option>\r\n                </Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"1\">\r\n              <Button color=\"primary\" className=\"shadow-none\" onClick={() => handleSearch()}>Go</Button>\r\n            </Col>\r\n            </Row>\r\n          </CardBody>\r\n        </Card>\r\n\r\n        <Card>\r\n        <CardBody>\r\n          <Row>\r\n            <Col md=\"3\">\r\n              <Label><b>Category:</b> {companyName}</Label>\r\n            </Col>\r\n            <Col md=\"3\">\r\n              <Label><b>Start Date:</b> {startDate}</Label>\r\n            </Col>\r\n            <Col md=\"3\">\r\n              <Label><b> End Date:</b> {endDate}</Label>\r\n            </Col>\r\n            <Col md=\"3\">\r\n              <Label><b> Status:</b> {projectStatus}</Label>\r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      </Card>\r\n\r\n         <Card>\r\n        <CardBody>\r\n          <Row>\r\n            <Col>\r\n              <ExportReport columns={columns} data={userSearchData} /> \r\n            </Col>\r\n          </Row>\r\n        </CardBody>\r\n      \r\n        <CardBody>\r\n          <Table>\r\n          <thead>\r\n            <tr>\r\n              {columns.map((cell) => {\r\n                return <td key={cell.name}>{cell.name}</td>;\r\n              })}\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {displayEmployees &&\r\n              displayEmployees.map((element, index) => {\r\n                return (\r\n                  <tr key={element.project_id}>\r\n                    <td>{index + 1}</td>\r\n                    <td>{element.project_code}</td>\r\n                    <td>{element.Project_name}</td>\r\n                    <td>{element.category}</td>\r\n                    <td>{moment(element.start_date).format('YYYY-MM-DD')}</td>\r\n                    <td>{moment(element.actual_finish_date).format('YYYY-MM-DD')}</td>\r\n                    <td>{element.company_name}</td>\r\n                    <td>{element.contact_name}</td>\r\n                    <td>{element.status}</td>\r\n                  </tr>\r\n                );\r\n              })}\r\n          </tbody>\r\n        </Table>\r\n        <ReactPaginate\r\n            previousLabel=\"Previous\"\r\n            nextLabel=\"Next\"\r\n            pageCount={totalPages}\r\n            onPageChange={changePage}\r\n            containerClassName=\"navigationButtons\"\r\n            previousLinkClassName=\"previousButton\"\r\n            nextLinkClassName=\"nextButton\"\r\n            disabledClassName=\"navigationDisabled\"\r\n            activeClassName=\"navigationActive\"\r\n          />\r\n       </CardBody>\r\n      </Card>\r\n    </>\r\n  );\r\n};\r\nexport default ProjectReport;","import {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst message = (msg,type) => {\r\n    if(type === 'success'){\r\n       return toast.success(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n            });\r\n    } if(type === 'error'){\r\n        return toast.error(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n     } if(type === 'info'){\r\n        return toast.info(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n            }if(type === 'warning'){\r\n               return toast.warning(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"colored\",\r\n                    });\r\n                   }\r\n            return toast(msg);\r\n   \r\n  \r\n}\r\nexport default message\r\n","import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Table","forwardRef","_ref","ref","_ref$color","color","_ref$size","size","rest","React","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","d","propTypes","PropTypes","displayName","data","columns","_jsx","_Fragment","children","Row","Col","style","display","justifyContent","_jsxs","Button","background","border","marginRight","className","onClick","link","document","createElement","csv","array","result","selectors","forEach","singleColumn","push","name","selector","console","log","join","item","index","ctr","convertArrayOfObjectsToCSV","match","concat","setAttribute","encodeURI","click","Icon","ProjectReport","projectReport","setProjectReport","useState","userSearchData","setUserSearchData","startDate","setStartDate","endDate","setEndDate","companyName","setCompanyName","projectStatus","setProjectStatus","useEffect","api","get","then","res","catch","message","page","setPage","numberOfEmployeesVistited","displayEmployees","slice","totalPages","Math","ceil","grow","wrap","sortable","BreadCrumbs","ToastContainer","Card","CardBody","FormGroup","Label","Input","type","onChange","e","value","defaultValue","md","handleSearch","newData","filter","y","category","z","status","x","actual_finish_date","start_date","ExportReport","map","cell","element","project_code","Project_name","moment","format","company_name","contact_name","project_id","ReactPaginate","previousLabel","nextLabel","pageCount","onPageChange","selected","containerClassName","previousLinkClassName","nextLinkClassName","disabledClassName","activeClassName","msg","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","Breadcrumb","BreadcrumbItem","to","tag","Link","active"],"sourceRoot":""}