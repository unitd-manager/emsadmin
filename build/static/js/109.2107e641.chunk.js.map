{"version":3,"sources":["layouts/breadcrumbs/BreadCrumbs.js","views/detailTable/SupportDetails.js","components/Message.js","components/CreationModification.js","components/ComponentCard.js"],"names":["BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","SupportDetails","currentDate","moment","format","useState","support_id","title","date","value","record_type","creation_date","supportDetails","setSupportDetails","section","setSection","navigate","useNavigate","useEffect","api","get","then","res","data","catch","message","md","xs","type","onChange","e","valueArray","target","section_id","parseInt","name","defaultValue","map","ele","section_title","color","onClick","post","insertedDataId","insertId","setTimeout","window","confirm","preventDefault","msg","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","CreationModification","details","modification_date","ComponentCard","children","subtitle","creationModificationDate"],"mappings":"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","file":"static/js/109.2107e641.chunk.js","sourcesContent":["import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport moment from 'moment';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport ComponentCard from '../../components/ComponentCard';\r\nimport message from '../../components/Message';\r\nimport api from '../../constants/api';\r\n\r\nconst SupportDetails = () => {\r\n  const currentDate = moment().format('YYYY-MM-DD');\r\n\r\n  //All state variables\r\n  const [supportDetails, setSupportDetails] = useState({\r\n    support_id: '',\r\n    title: '',\r\n    date: currentDate,\r\n    value: 'new',\r\n    record_type: 'Change Request',\r\n    creation_date: moment(),\r\n  });\r\n\r\n  const [section, setSection] = useState();\r\n\r\n  //Navigation and parameters\r\n  const navigate = useNavigate();\r\n\r\n  // Api call for  getting Module  Name\r\n  const getModuleName = () => {\r\n    api\r\n      .get('/support/getSection')\r\n      .then((res) => {\r\n        setSection(res.data.data);\r\n      })\r\n      .catch(() => {\r\n        message('Support Data Not Found', 'info');\r\n      });\r\n  };\r\n  //support data in supportDetails\r\n  const handleInputs = (e) => {\r\n    const valueArray = e.target.value.split(',');\r\n    /*eslint-disable */\r\n    supportDetails.title = valueArray[0];\r\n    supportDetails.section_id = parseInt(valueArray[1]);\r\n    setSupportDetails(supportDetails);\r\n  };\r\n  //Insert support\r\n  const insertSupportData = () => {\r\n    if (supportDetails.section_id) {\r\n      api\r\n        .post('/support/insertSupport', supportDetails)\r\n        .then((res) => {\r\n          const insertedDataId = res.data.data.insertId;\r\n          message('Support inserted successfully.', 'success');\r\n          setTimeout(() => {\r\n            navigate(`/SupportEdit/${insertedDataId}`);\r\n          }, 300);\r\n        })\r\n        .catch(() => {\r\n          message('Unable to edit record.', 'error');\r\n        });\r\n    } else {\r\n      message('Please select module.', 'error');\r\n    }\r\n  };\r\n  useEffect(() => {\r\n    getModuleName();\r\n  }, []);\r\n\r\n  return (\r\n    <div>\r\n      <BreadCrumbs />\r\n      <Row>\r\n        <Col md=\"6\" xs=\"12\">\r\n          <ComponentCard title=\"Key Details\">\r\n            <Form>\r\n              <FormGroup>\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <Label>\r\n                      Module Name <span className=\"required\"> *</span>\r\n                    </Label>\r\n                    <Input type=\"select\" onChange={handleInputs} name=\"section_id\">\r\n                      <option defaultValue=\"selected\">Please Select</option>\r\n                      {section &&\r\n                        section.map((ele) => {\r\n                          return (\r\n                            <option\r\n                              key={ele.section_id}\r\n                              value={`${ele.section_title},${ele.section_id}`}\r\n                            >\r\n                              {ele.section_title}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                    </Input>\r\n                  </Col>\r\n                </Row>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Row>\r\n                  <div className=\"mt-3 d-flex align-items-center gap-2\">\r\n                    <Button\r\n                      className=\"shadow-none\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        insertSupportData();\r\n                        setTimeout(() => {\r\n                          navigate('/SupportEdit');\r\n                        }, 800);\r\n                      }}\r\n                    >\r\n                      Save & Continue\r\n                    </Button>\r\n\r\n                    <Button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-dark shadow-none\"\r\n                      onClick={(e) => {\r\n                        if (window.confirm('Are you sure you want to cancel? ')) {\r\n                          navigate('/Support');\r\n                        } else {\r\n                          e.preventDefault();\r\n                        }\r\n                      }}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </div>\r\n                </Row>\r\n              </FormGroup>\r\n            </Form>\r\n          </ComponentCard>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SupportDetails;\r\n","import {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst message = (msg,type) => {\r\n    if(type === 'success'){\r\n       return toast.success(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n            });\r\n    } if(type === 'error'){\r\n        return toast.error(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n     } if(type === 'info'){\r\n        return toast.info(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n            }if(type === 'warning'){\r\n               return toast.warning(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"colored\",\r\n                    });\r\n                   }\r\n            return toast(msg);\r\n   \r\n  \r\n}\r\nexport default message\r\n","import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n                <small>Modification Date: {details && details.modification_date}</small>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n                <small>Creation Date: {details && details.creation_date}</small>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n  );\r\n}\r\n","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      {/* <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n        <p tag='h2' className=\"float-end small fs-5\">{righttitle}</p>\r\n      </CardTitle> */}\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate:PropTypes.any\r\n};\r\n\r\nexport default ComponentCard;\r\n"],"sourceRoot":""}