{"version":3,"sources":["layouts/breadcrumbs/BreadCrumbs.js","components/Message.js","components/CreationModification.js","components/ComponentCard.js","components/CategoryTable/CategoryButton.js","components/CategoryTable/CategoryDetailComp.js","views/EditData/CategoryEdit.js","constants/creationdatetime.js","components/ComponentCardV2.js","components/Tender/AttachmentModalV2.js","components/ProjectModal/ViewFileComponentV2.js","../node_modules/react-feather/dist/icons/image.js"],"names":["BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","message","msg","type","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","CreationModification","details","title","created_by","creation_date","modified_by","modification_date","ComponentCard","children","subtitle","creationModificationDate","CategoryButton","editCategoryData","applyChanges","saveChanges","backToList","navigate","useNavigate","ComponentCardV2","color","onClick","setTimeout","console","log","CategoryDetailComp","categoryDetails","handleInputs","section","valuelist","md","onChange","value","category_title","name","section_id","defaultValue","map","e","section_title","category_type","internal_link","defaultChecked","published","meta_title","meta_description","meta_keyword","seo_title","CategoryEdit","useState","setCategoryDetails","activeTab","setActiveTab","attachmentModal","setAttachmentModal","RoomName","setRoomName","fileTypes","setFileTypes","setSection","setValuelist","modelType","pictureData","setDataForPicture","pictureupdate","setPictureUpdate","id","useParams","useEffect","api","post","category_id","then","res","data","catch","get","creationdatetime","deleteCategoryData","target","tabs","tab","tabId","xs","width","AttachmentModalV2","moduleId","roomName","altTagData","desc","recordType","mediaType","update","setUpdate","ViewFileComponentV2","moment","format","pStyle","textAlign","marginRight","oStyle","outline","border","style","file","setFile","handleValue","setHandleValue","uploaded","setUploaded","isOpen","multiple","handleChange","fiels","arrayOfObj","Object","entries","types","role","FormData","forEach","ele","append","onUploadProgress","filedata","Math","round","loaded","total","uploadFile","window","reload","tableStyle","getFile","setGetFile","record_id","room_name","href","rel","fileId","media_id","Swal","fire","text","icon","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","isConfirmed","_extends","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","Image","forwardRef","_ref","ref","_ref$color","_ref$size","size","rest","React","createElement","xmlns","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","strokeLinejoin","x","y","rx","ry","cx","cy","r","points","propTypes","PropTypes","string","oneOfType","number","displayName"],"mappings":"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","file":"static/js/65.b50c2adc.chunk.js","sourcesContent":["import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n","import {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst message = (msg,type) => {\r\n    if(type === 'success'){\r\n       return toast.success(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n            });\r\n    } if(type === 'error'){\r\n        return toast.error(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n     } if(type === 'info'){\r\n        return toast.info(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n            }if(type === 'warning'){\r\n               return toast.warning(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"colored\",\r\n                    });\r\n                   }\r\n            return toast(msg);\r\n   \r\n  \r\n}\r\nexport default message\r\n","import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n                <small> Creation: {details && details.created_by} {details && details.creation_date}</small>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n                <small> Modified: {details && details.modified_by} {details && details.modification_date}</small>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n   );\r\n}","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      {/* <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n        <p tag='h2' className=\"float-end small fs-5\">{righttitle}</p>\r\n      </CardTitle> */}\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate:PropTypes.any\r\n};\r\n\r\nexport default ComponentCard;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Row, Col, Form, FormGroup, Button } from 'reactstrap';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport ComponentCardV2 from '../ComponentCardV2';\r\n\r\n// import DeleteButton from '../DeleteButton';\r\n\r\n\r\nexport default function CategoryButton({\r\n  editCategoryData,\r\n  // navigate,\r\n  applyChanges,\r\n  saveChanges,\r\n  // id,\r\n  backToList,\r\n}) {\r\n  CategoryButton.propTypes = {\r\n    editCategoryData: PropTypes.any,\r\n    // navigate: PropTypes.func,\r\n    applyChanges: PropTypes.func,\r\n    saveChanges: PropTypes.func,\r\n    // id: PropTypes.string,\r\n    backToList: PropTypes.func,\r\n  };\r\n  const navigate = useNavigate();\r\n  return (\r\n    <Form>\r\n      <FormGroup>\r\n        <ComponentCardV2>\r\n          <Row>\r\n            <Col>\r\n              <Button\r\n                className=\"shadow-none\"\r\n                color=\"primary\"\r\n                onClick={() => {\r\n                  editCategoryData();\r\n                  saveChanges();\r\n                  setTimeout(() => {\r\n                    navigate('/Category');\r\n                  }, 1100);\r\n                }}\r\n              >\r\n                Save\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n              <Button\r\n                color=\"primary\"\r\n                className=\"shadow-none\"\r\n                onClick={() => {\r\n                  editCategoryData();\r\n                  applyChanges();\r\n                  console.log('cancel process');\r\n                }}\r\n              >\r\n                Apply\r\n              </Button>\r\n            </Col>\r\n            {/* <Col>\r\n              <Button\r\n                type=\"submit\"\r\n                className=\"shadow-none\"\r\n                color=\"dark\"\r\n                onClick={(e) => {\r\n                  if (window.confirm('Are you sure you want to cancel? ')) {\r\n                    navigate('/Category');\r\n                  } else {\r\n                    e.preventDefault();\r\n                  }\r\n                }}\r\n              >\r\n                Cancel\r\n              </Button>\r\n            </Col>\r\n            <Col>\r\n            <DeleteButton\r\n              id={id} \r\n              columnname=\"category_id\"\r\n              tablename=\"category\"\r\n            ></DeleteButton>\r\n            </Col> */}\r\n            <Col>\r\n              <Button\r\n                color=\"dark\"\r\n                className=\"shadow-none\"\r\n                onClick={() => {\r\n                  backToList();\r\n                  console.log('back to list');\r\n                }}\r\n              >\r\n                Back to List\r\n              </Button>\r\n            </Col>\r\n          </Row>\r\n        </ComponentCardV2>\r\n      </FormGroup>\r\n    </Form>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Row, Col, Form, FormGroup, Label, Input } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport ComponentCard from '../ComponentCard';\r\n\r\nexport default function CategoryDetailComp({ categoryDetails, handleInputs, section, valuelist }) {\r\n  CategoryDetailComp.propTypes = {\r\n    categoryDetails: PropTypes.object,\r\n    handleInputs: PropTypes.func,\r\n    section: PropTypes.array,\r\n    valuelist: PropTypes.array,\r\n  };\r\n  return (\r\n    <>\r\n      <Form>\r\n        <FormGroup>\r\n        <ComponentCard title=\"Category Details\"\r\n         creationModificationDate={categoryDetails}>\r\n            <Row>\r\n              <Col md=\"4\">\r\n                <FormGroup>\r\n                  <Label>\r\n                    Title <span className=\"required\"> *</span>\r\n                  </Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    onChange={handleInputs}\r\n                    value={categoryDetails && categoryDetails.category_title}\r\n                    name=\"category_title\"\r\n                  />\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"4\">\r\n                <FormGroup>\r\n                  <Label>Section</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    onChange={handleInputs}\r\n                    value={categoryDetails && categoryDetails.section_id}\r\n                    name=\"section_id\"\r\n                  >\r\n                    <option defaultValue=\"selected\">\r\n                      Please Select\r\n                    </option>\r\n                    {section &&\r\n                      section.map((e) => {\r\n                        return <option key={e.section_id} value={e.section_id}>{e.section_title}</option>;\r\n                      })}\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"4\">\r\n                <FormGroup>\r\n                  <Label>Category Type</Label>\r\n                  <Input\r\n                    type=\"select\"\r\n                    onChange={handleInputs}\r\n                    value={categoryDetails && categoryDetails.category_type}\r\n                    name=\"category_type\"\r\n                  >\r\n                    <option defaultValue=\"selected\">\r\n                      Please Select\r\n                    </option>\r\n                    {valuelist &&\r\n                      valuelist.map((e) => {\r\n                        return <option key={e.value} value={e.value}>{e.value}</option>;\r\n                      })}\r\n                  </Input>\r\n                </FormGroup>\r\n              </Col>\r\n          </Row>\r\n          <Row>\r\n              <Col md=\"4\">\r\n                <FormGroup>\r\n                  <Label>Internal Link</Label>\r\n                  <Input\r\n                    type=\"text\"\r\n                    value={categoryDetails && categoryDetails.internal_link}\r\n                    onChange={handleInputs}\r\n                    name=\"internal_link\"\r\n                  ></Input>\r\n                </FormGroup>\r\n              </Col>\r\n              <Col md=\"4\">\r\n              <FormGroup>\r\n                \r\n                <Label>Published</Label>\r\n                <br></br>\r\n                <Input\r\n                  name=\"published\"\r\n                  value=\"1\"\r\n                  type=\"radio\"\r\n                  defaultChecked={categoryDetails && categoryDetails.published === 1 && true}\r\n                  onChange={handleInputs}\r\n                />\r\n                <Label> Yes </Label>\r\n                <Input\r\n                  name=\"published\"\r\n                  value=\"0\"\r\n                  type=\"radio\"\r\n                  defaultChecked={categoryDetails && categoryDetails.published === 0 && true}\r\n                  onChange={handleInputs}\r\n                />\r\n                <Label>No</Label>\r\n                \r\n              </FormGroup>\r\n              </Col>\r\n            </Row>\r\n          </ComponentCard>\r\n          <ComponentCard title=\"Page Meta Data\">\r\n            <Row>\r\n            <Col md=\"6\">\r\n              <FormGroup>\r\n                <Label>Page Title</Label>\r\n                <Input\r\n                  value={categoryDetails && categoryDetails.meta_title}\r\n                  type=\"text\"\r\n                  onChange={handleInputs}\r\n                  name=\"meta_title\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\">\r\n              <FormGroup>\r\n                <Label>Page Description</Label>\r\n                <Input\r\n                  value={categoryDetails && categoryDetails.meta_description}\r\n                  type=\"textarea\"\r\n                  onChange={handleInputs}\r\n                  name=\"meta_description\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            </Row>\r\n            <Row>\r\n            <Col md=\"6\">\r\n              <FormGroup>\r\n                <Label>Page Keywords</Label>\r\n                <Input\r\n                  value={categoryDetails && categoryDetails.meta_keyword}\r\n                  type=\"textarea\"\r\n                  onChange={handleInputs}\r\n                  name=\"meta_keyword\"\r\n                />\r\n              </FormGroup>\r\n            </Col>\r\n            <Col md=\"6\">\r\n        <FormGroup>\r\n          <Label>SEO Title</Label>\r\n          <Input\r\n            value={categoryDetails && categoryDetails.seo_title}\r\n            type=\"text\"\r\n            onChange={handleInputs}\r\n            name=\"seo_title\"\r\n          />\r\n        </FormGroup>\r\n      </Col>\r\n            </Row>\r\n          </ComponentCard>\r\n          <Row></Row>\r\n        </FormGroup>\r\n      </Form>\r\n     \r\n     \r\n    </>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport 'react-draft-wysiwyg/dist/react-draft-wysiwyg.css';\r\nimport '../form-editor/editor.scss';\r\nimport * as Icon from 'react-feather';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { Button, Col, Form, FormGroup, Nav, NavItem, NavLink, Row, TabContent, TabPane } from 'reactstrap';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport message from '../../components/Message';\r\nimport api from '../../constants/api';\r\nimport CategoryButton from '../../components/CategoryTable/CategoryButton';\r\nimport CategoryDetailComp from '../../components/CategoryTable/CategoryDetailComp';\r\nimport creationdatetime from '../../constants/creationdatetime';\r\nimport ViewFileComponentV2 from '../../components/ProjectModal/ViewFileComponentV2';\r\nimport AttachmentModalV2 from '../../components/Tender/AttachmentModalV2';\r\nimport ComponentCard from '../../components/ComponentCard';\r\n\r\n\r\nconst CategoryEdit = () => {\r\n  //All state variables\r\n  const [categoryDetails, setCategoryDetails] = useState();\r\n  const [activeTab, setActiveTab] = useState('1');\r\n  const [attachmentModal, setAttachmentModal] = useState(false);\r\n  const [RoomName, setRoomName] = useState('');\r\n  const [fileTypes, setFileTypes] = useState('');\r\n  const [section, setSection] = useState();\r\n  const [valuelist, setValuelist] = useState();\r\n  const [pictureData, setDataForPicture] = useState({\r\n    modelType: '',\r\n  });\r\n  const [pictureupdate, setPictureUpdate] = useState(false);\r\n  //Navigation and Parameter Constants\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n\r\n  const toggle = (tab) => {\r\n    if (activeTab !== tab) setActiveTab(tab);\r\n  };\r\n\r\n  // Abi for Picture attachment\r\n  const dataForPicture = () => {\r\n    setDataForPicture({\r\n      modelType: 'picture',\r\n    });\r\n  };\r\n  // Button Save Apply Back List\r\n  const applyChanges = () => {};\r\n  const saveChanges = () => {\r\n    if (categoryDetails.category_title !== '') {\r\n      navigate('/Category');\r\n    }\r\n  };\r\n  const backToList = () => {\r\n    navigate('/Category');\r\n  };\r\n\r\n  //Api call for getting section dropdown\r\n  const getSection = () => {\r\n    api\r\n      .get('/category/getSectionTitle')\r\n      .then((res) => {\r\n        setSection(res.data.data);\r\n      })\r\n      .catch(() => {\r\n        message('Section not found', 'info');\r\n      });\r\n  };\r\n\r\n  //Api call for getting valuelist dropdown\r\n  const getValuelist = () => {\r\n    api\r\n      .get('/category/get-ValueList')\r\n      .then((res) => {\r\n        setValuelist(res.data.data);\r\n      })\r\n      .catch(() => {\r\n        message('valuelist not found', 'info');\r\n      });\r\n  };\r\n\r\n  const handleInputs = (e) => {\r\n    setCategoryDetails({ ...categoryDetails, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  // Get Category By Id\r\n  const CategoryById = () => {\r\n    api\r\n      .post('/category/getCategoryById', { category_id: id })\r\n      .then((res) => {\r\n        setCategoryDetails(res.data.data[0]);\r\n      })\r\n      .catch(() => {\r\n        message('category Data Not Found', 'info');\r\n      });\r\n  };\r\n\r\n  //Category Edit function\r\n  const editCategoryData = () => {\r\n    categoryDetails.modification_date = creationdatetime;\r\n    if (categoryDetails.category_title !== '') {\r\n      api\r\n        .post('/category/editCategory', categoryDetails)\r\n        .then(() => {\r\n          message('Record editted successfully', 'success');\r\n        })\r\n        .catch(() => {\r\n          message('Unable to edit record.', 'error');\r\n        });\r\n    } else {\r\n      message('Please fill all required fields', 'warning');\r\n    }\r\n  };\r\n\r\n  //Delete Category Function\r\n  const deleteCategoryData = () => {\r\n    api\r\n      .post('/category/deleteCategory', { category_id: id })\r\n      .then(() => {\r\n        message('Record deteled successfully', 'success');\r\n      })\r\n      .catch(() => {\r\n        message('Unable to delete record.', 'error');\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    CategoryById();\r\n    getSection();\r\n    getValuelist();\r\n  }, [id]);\r\n\r\n  return (\r\n    <>\r\n      <BreadCrumbs />\r\n      <ToastContainer></ToastContainer>\r\n\r\n      {/* Button */}\r\n      <CategoryButton\r\n        editCategoryData={editCategoryData}\r\n        navigate={navigate}\r\n        applyChanges={applyChanges}\r\n        saveChanges={saveChanges}\r\n        deleteCategoryData={deleteCategoryData}\r\n        backToList={backToList}\r\n        id={id}\r\n      ></CategoryButton>\r\n\r\n      {/* More details*/}\r\n      <CategoryDetailComp\r\n        categoryDetails={categoryDetails}\r\n        handleInputs={handleInputs}\r\n        section={section}\r\n        valuelist={valuelist}\r\n      ></CategoryDetailComp>\r\n       <ComponentCard>\r\n        <ToastContainer></ToastContainer>\r\n        <Nav tabs>\r\n          <NavItem>\r\n            <NavLink\r\n              className={activeTab === '1' ? 'active' : ''}\r\n              onClick={() => {\r\n                toggle('1');\r\n              }}\r\n            >\r\n              Picture\r\n            </NavLink>\r\n          </NavItem>\r\n        </Nav>\r\n        <TabContent className=\"p-4\" activeTab={activeTab}>\r\n          <TabPane tabId=\"1\">\r\n            <Form>\r\n              <FormGroup>\r\n                <Row>\r\n                  <Col xs=\"12\" md=\"3\" className=\"mb-3\">\r\n                    <Button\r\n                      className=\"shadow-none\"\r\n                      color=\"primary\"\r\n                      onClick={() => {\r\n                        setRoomName('Category');\r\n                        setFileTypes(['JPG','JPEG','PNG', 'GIF', 'OGG', 'MP3', 'WAV', 'M4A']);\r\n                        dataForPicture();\r\n                        setAttachmentModal(true);\r\n                      }}\r\n                    >\r\n                      <Icon.Image className=\"rounded-circle\" width=\"20\" />\r\n                    </Button>\r\n                  </Col>\r\n                </Row>\r\n                <AttachmentModalV2\r\n                  moduleId={id}\r\n                  attachmentModal={attachmentModal}\r\n                  setAttachmentModal={setAttachmentModal}\r\n                  roomName={RoomName}\r\n                  fileTypes={fileTypes}\r\n                  altTagData=\"Category Data\"\r\n                  desc=\"Category Data\"\r\n                  recordType=\"Picture\"\r\n                  mediaType={pictureData.modelType}\r\n                  update={pictureupdate}\r\n                  setUpdate={setPictureUpdate}\r\n                />\r\n                <ViewFileComponentV2 moduleId={id} roomName=\"Category\" recordType=\"Picture\" update={pictureupdate}\r\n                    setUpdate={setPictureUpdate} />\r\n              </FormGroup>\r\n            </Form>\r\n          </TabPane>\r\n        </TabContent>\r\n      </ComponentCard>\r\n    </>\r\n  );\r\n};\r\nexport default CategoryEdit;\r\n","import moment from \"moment\"\r\n\r\nconst creationdatetime = moment().format('DD-MM-YYYY h:mm:ss a')\r\nexport default creationdatetime \r\n","import { Card, CardBody } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nconst pStyle = {\r\n  textAlign: 'right',\r\n  marginRight: '10px',\r\n};\r\nconst oStyle={\r\noutline:'none',\r\nborder:'none'\r\n};\r\n\r\nconst ComponentCardV2 = ({ children }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CardBody style={pStyle} >\r\n        <div className=\"btn btn-space text-nowrap shadow-none outline-none\" style={oStyle}>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCardV2.propTypes = {\r\n  children: PropTypes.node,\r\n};\r\n\r\nexport default ComponentCardV2;\r\n","import React,{useState} from 'react'\r\nimport { FormGroup,Button,Modal,ModalHeader,ModalBody, ModalFooter } from 'reactstrap';\r\nimport PropTypes from 'prop-types'\r\nimport { FileUploader } from \"react-drag-drop-files\";\r\nimport api from '../../constants/api';\r\nimport message from '../Message';\r\n\r\nconst AttachmentModalV2 = ({attachmentModal,setAttachmentModal,moduleId,roomName,fileTypes,altTagData, desc}) => {\r\n\r\n    AttachmentModalV2.propTypes = {\r\n        attachmentModal: PropTypes.bool,\r\n        setAttachmentModal: PropTypes.func,\r\n        moduleId:PropTypes.string,\r\n        roomName:PropTypes.string,\r\n        altTagData:PropTypes.string,\r\n        desc:PropTypes.string,\r\n        fileTypes:PropTypes.any,\r\n      }\r\n      \r\n        const [file, setFile] = useState([]);\r\n        const [ handleValue, setHandleValue ] = useState()\r\n       const[uploaded, setUploaded]=useState(null)\r\n\r\n        const handleChange = (fiels) => {\r\n          \r\n            const arrayOfObj = Object.entries(fiels).map((e) => ( e[1]  ));\r\n\r\n            setFile(fiels);\r\n            setHandleValue(arrayOfObj);\r\n            console.log(fiels)\r\n        };\r\n\r\n        const uploadFile = () =>{\r\n            \r\n            if(file){\r\n\r\n               // getFiles();\r\n            \r\n          \r\n                const data = new FormData() \r\n                const arrayOfObj = Object.entries(file).map((e) => (  e[1] ));\r\n\r\n                arrayOfObj.forEach((ele) => {\r\n                    data.append(`files`, ele);\r\n                  });\r\n                //data.append('file', file)\r\n                data.append('record_id', moduleId)\r\n                data.append('room_name', roomName)\r\n                data.append('alt_tag_data', altTagData)\r\n                data.append('description', desc)\r\n\r\n                api.post('/file/uploadFiles',data,{onUploadProgress:(filedata)=>{\r\n                    console.log( Math.round((filedata.loaded/filedata.total)*100))\r\n                    setUploaded( Math.round((filedata.loaded/filedata.total)*100))\r\n                   \r\n                }}).then(()=>{\r\n     \r\n                    // setAttachmentModal(false)\r\n                    message('Files Uploaded Successfully','success')\r\n                    \r\n                    // setTimeout(() => {\r\n                    //     window.location.reload()\r\n                    // }, 400);\r\n                }).catch(()=>{\r\n                    setAttachmentModal(false)\r\n                    message('Unable to upload File','error')\r\n                    // setTimeout(() => {\r\n                    //     window.location.reload()\r\n                    // }, 400);\r\n                })\r\n            }else{\r\n                message('No files selected','info')\r\n            }\r\n        }\r\n      \r\n    \r\n  return (\r\n\r\n    \r\n    <div>\r\n        \r\n        <Modal isOpen={attachmentModal} >\r\n            <ModalHeader>Upload Media</ModalHeader>\r\n            <ModalBody>\r\n                <FormGroup>\r\n                  \r\n                <FileUploader\r\n                        multiple\r\n                        handleChange={handleChange}\r\n                        name=\"file\"\r\n                        types={fileTypes}\r\n                    />\r\n                    \r\n\r\n                    {handleValue ? (\r\n                        handleValue.map((e) => (\r\n                        <div>\r\n                            <span> Name: {e.name} </span>\r\n                        </div>\r\n                        ))\r\n                    ) : (\r\n                        <span>No file selected</span>\r\n                    )}\r\n\r\n                </FormGroup>\r\n            { uploaded &&  <div className='progress mt-2'>\r\n                    <div className=\"progress-bar h-4\" role='progressbar'\r\n                    aria-valuenow={uploaded}\r\n                    aria-valuemin='0'\r\n                    aria-valuemax='100'\r\n                    style={{width:`${uploaded}%`}}>\r\n                      {`${uploaded}% uploaded`}\r\n                    </div>\r\n                </div>}\r\n            </ModalBody>\r\n            <ModalFooter>\r\n                <Button color=\"primary\" className='shadow-none' onClick={()=>{\r\n                    uploadFile()\r\n                }}>Upload</Button>\r\n                <Button color=\"secondary\" className='shadow-none' onClick={()=>{ window.location.reload();setAttachmentModal(false) }}>Cancel</Button>\r\n            </ModalFooter>\r\n        </Modal>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AttachmentModalV2","import React, { useEffect, useState } from 'react';\r\nimport Swal from 'sweetalert2';\r\nimport PropTypes from 'prop-types';\r\nimport * as Icon from 'react-feather';\r\nimport message from '../Message';\r\nimport api from '../../constants/api';\r\n\r\nfunction ViewFileComponentV2({ moduleId, roomName }) {\r\n  ViewFileComponentV2.propTypes = {\r\n    moduleId: PropTypes.string,\r\n    roomName: PropTypes.string,\r\n  };\r\n\r\n  const tableStyle = {};\r\n\r\n  const [getFile, setGetFile] = useState(null);\r\n\r\n  const getFiles = () => {\r\n    api.post('/file/getListOfFiles', { record_id: moduleId, room_name: roomName }).then((res) => {\r\n      setGetFile(res.data);\r\n    });\r\n  };\r\n\r\n  const deleteFile = (fileId) => {\r\n    Swal.fire({\r\n      title: `Are you sure?`,\r\n      text: \"You won't be able to revert this!\",\r\n      icon: 'warning',\r\n      showCancelButton: true,\r\n      confirmButtonColor: '#3085d6',\r\n      cancelButtonColor: '#d33',\r\n      confirmButtonText: 'Yes, delete it!',\r\n    }).then((result) => {\r\n      if (result.isConfirmed) {\r\n        api\r\n          .post('/file/deleteFile', { media_id: fileId })\r\n          .then((res) => {\r\n            console.log(res);\r\n            Swal.fire('Deleted!', 'Media has been deleted.', 'success');\r\n            //setViewLineModal(false)\r\n\r\n            window.location.reload();\r\n          })\r\n          .catch(() => {\r\n            message('Unable to Delete Media', 'info');\r\n          });\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    getFiles();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <table style={tableStyle}>\r\n        <thead>\r\n          <tr style={tableStyle}>\r\n            <th style={tableStyle}>\r\n             File Name\r\n            </th>\r\n            <th width=\"5%\"></th>\r\n          </tr>\r\n        </thead>\r\n        <tbody>\r\n        {getFile ? (\r\n          getFile.map((res) => {\r\n            return (\r\n                <tr key={res.media_id}>\r\n                  <td style={tableStyle}>\r\n                      <a\r\n                        href={`http://43.228.126.245/EMS-API/storage/uploads/${res.name}`}\r\n                        target=\"_blank\"\r\n                        rel=\"noreferrer\"\r\n                      >\r\n                        {res.name}\r\n                      </a>\r\n                  </td>\r\n                  <td style={tableStyle}>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"btn shadow-none\"\r\n                      onClick={() => {\r\n                        deleteFile(res.media_id);\r\n                      }}\r\n                    >\r\n                      <Icon.Trash2 />{' '}\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n            );\r\n          })\r\n        ) : (\r\n          <tr><td><p>no files uploaded yet</p></td></tr>\r\n        )}\r\n        </tbody>\r\n        \r\n      </table>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ViewFileComponentV2;\r\n","function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nvar Image = forwardRef(function (_ref, ref) {\n  var _ref$color = _ref.color,\n      color = _ref$color === void 0 ? 'currentColor' : _ref$color,\n      _ref$size = _ref.size,\n      size = _ref$size === void 0 ? 24 : _ref$size,\n      rest = _objectWithoutProperties(_ref, [\"color\", \"size\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    ref: ref,\n    xmlns: \"http://www.w3.org/2000/svg\",\n    width: size,\n    height: size,\n    viewBox: \"0 0 24 24\",\n    fill: \"none\",\n    stroke: color,\n    strokeWidth: \"2\",\n    strokeLinecap: \"round\",\n    strokeLinejoin: \"round\"\n  }, rest), /*#__PURE__*/React.createElement(\"rect\", {\n    x: \"3\",\n    y: \"3\",\n    width: \"18\",\n    height: \"18\",\n    rx: \"2\",\n    ry: \"2\"\n  }), /*#__PURE__*/React.createElement(\"circle\", {\n    cx: \"8.5\",\n    cy: \"8.5\",\n    r: \"1.5\"\n  }), /*#__PURE__*/React.createElement(\"polyline\", {\n    points: \"21 15 16 10 5 21\"\n  }));\n});\nImage.propTypes = {\n  color: PropTypes.string,\n  size: PropTypes.oneOfType([PropTypes.string, PropTypes.number])\n};\nImage.displayName = 'Image';\nexport default Image;"],"sourceRoot":""}