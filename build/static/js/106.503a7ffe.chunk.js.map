{"version":3,"sources":["layouts/breadcrumbs/BreadCrumbs.js","views/detailTable/ValuelistDetails.js","components/Message.js","components/CreationModification.js","components/ComponentCard.js","constants/creationdatetime.js"],"names":["BreadCrumbs","prop","location","useLocation","firstUrl","pathname","split","secondUrl","heading","to","tag","Link","className","active","ValueListDetails","useState","valuelistname","setValueListName","key_text","value","valuelistdetails","setValueListDetails","id","useParams","navigate","useNavigate","handleInputs","e","target","name","useEffect","api","get","then","res","data","catch","message","md","xs","title","type","onChange","defaultValue","map","ele","color","onClick","creation_date","creationdatetime","post","insertedDataId","insertId","setTimeout","window","confirm","preventDefault","msg","toast","success","position","autoClose","hideProgressBar","closeOnClick","pauseOnHover","draggable","progress","undefined","theme","error","info","warning","CreationModification","details","created_by","modified_by","modification_date","ComponentCard","children","subtitle","creationModificationDate","moment","format"],"mappings":"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","file":"static/js/106.503a7ffe.chunk.js","sourcesContent":["import { Breadcrumb, BreadcrumbItem } from 'reactstrap';\r\nimport { useLocation, Link } from 'react-router-dom';\r\n//import SidebarData from '../sidebars/sidebardata/SidebarData';\r\n\r\nconst BreadCrumbs = (prop) => {\r\n  const location = useLocation();\r\n  const firstUrl = location.pathname.split('/')[1];\r\n  const secondUrl = location.pathname.split('/')[2];\r\n  \r\n  return (\r\n    <>\r\n      {/* <h4 className=\"text-capitalize\">{secondUrl ? `${secondUrl}` : `${firstUrl}`}</h4> */}\r\n      <h4>{prop.heading}</h4>\r\n      <Breadcrumb>\r\n        <BreadcrumbItem to=\"/\" tag={Link} className=\"text-decoration-none\">\r\n          Home\r\n        </BreadcrumbItem>\r\n        {firstUrl ? <BreadcrumbItem active>{firstUrl}</BreadcrumbItem> : ''}\r\n        {secondUrl ? <BreadcrumbItem active>{secondUrl}</BreadcrumbItem> : ''}\r\n      </Breadcrumb>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default BreadCrumbs;\r\n","import React, { useState, useEffect } from 'react';\r\nimport { Row, Col, Form, FormGroup, Label, Input, Button } from 'reactstrap';\r\nimport { ToastContainer } from 'react-toastify';\r\nimport { useNavigate, useParams } from 'react-router-dom';\r\nimport BreadCrumbs from '../../layouts/breadcrumbs/BreadCrumbs';\r\nimport ComponentCard from '../../components/ComponentCard';\r\nimport api from '../../constants/api';\r\nimport message from '../../components/Message';\r\nimport creationdatetime from '../../constants/creationdatetime';\r\n\r\nconst ValueListDetails = () => {\r\n  // All state variables\r\n  const [valuelistname, setValueListName] = useState();\r\n  const [valuelistdetails, setValueListDetails] = useState({ key_text: '', value: '' });\r\n\r\n  // Navigation and Parameter Constants\r\n  const { id } = useParams();\r\n  const navigate = useNavigate();\r\n\r\n  //All Functions/Methods\r\n\r\n  //Setting Data in ValueList Details\r\n  const handleInputs = (e) => {\r\n    setValueListDetails({ ...valuelistdetails, [e.target.name]: e.target.value });\r\n  };\r\n\r\n  //Api call for getting Valuelist dropdown\r\n  const getValueListName = () => {\r\n    api\r\n      .get('/valuelist/getValueListDropdown')\r\n      .then((res) => {\r\n        setValueListName(res.data.data);\r\n      })\r\n      .catch(() => {\r\n        message('Unable to edit record.', 'error');\r\n      });\r\n  };\r\n\r\n  //Api call for Insert Valuelist Details\r\n  const insertValueListData = () => {\r\n    if (valuelistdetails.key_text !== '' && valuelistdetails.value !== '') {\r\n      valuelistdetails.creation_date = creationdatetime;\r\n      api\r\n        .post('/valuelist/insertValueList', valuelistdetails)\r\n        .then((res) => {\r\n          const insertedDataId = res.data.data.insertId;\r\n          message('Valuelist inserted successfully.', 'success');\r\n          setTimeout(() => {\r\n            navigate(`/ValueListEdit/${insertedDataId}`);\r\n          }, 300);\r\n        })\r\n        .catch(() => {\r\n          message('Unable to edit record.', 'error');\r\n        });\r\n    } else {\r\n      message('Please fill all required fields', 'warning');\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getValueListName();\r\n  }, [id]);\r\n\r\n  return (\r\n    <div>\r\n      <BreadCrumbs />\r\n      <ToastContainer></ToastContainer>\r\n      <Row>\r\n        <Col md=\"6\" xs=\"12\">\r\n          {/* Key Details */}\r\n          <ComponentCard title=\"Key Details\">\r\n            <Form>\r\n              <FormGroup>\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <Label>\r\n                      Value List Name <span className=\"required\"> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"select\"\r\n                      onChange={handleInputs}\r\n                      value={valuelistdetails && valuelistdetails.key_text}\r\n                      name=\"key_text\"\r\n                    >\r\n                      <option defaultValue=\"selected\">Please Select</option>\r\n                      {valuelistname &&\r\n                        valuelistname.map((ele) => {\r\n                          return (\r\n                            <option key={ele.name} value={ele.name}>\r\n                              {ele.name}\r\n                            </option>\r\n                          );\r\n                        })}\r\n                    </Input>\r\n                  </Col>\r\n                </Row>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Row>\r\n                  <Col md=\"12\">\r\n                    <Label>\r\n                      Value<span className=\"required\"> *</span>\r\n                    </Label>\r\n                    <Input\r\n                      type=\"text\"\r\n                      onChange={handleInputs}\r\n                      value={valuelistdetails && valuelistdetails.value}\r\n                      name=\"value\"\r\n                    />\r\n                  </Col>\r\n                </Row>\r\n              </FormGroup>\r\n              <FormGroup>\r\n                <Row>\r\n                  <div className=\"pt-3 mt-3 d-flex align-items-center gap-2\">\r\n                    <Button\r\n                      color=\"primary\"\r\n                      type=\"button\"\r\n                      className=\"btn mr-2 shadow-none\"\r\n                      onClick={() => {\r\n                        insertValueListData();\r\n                      }}\r\n                    >\r\n                      Save & Continue\r\n                    </Button>\r\n                    <Button\r\n                      type=\"submit\"\r\n                      className=\"btn btn-dark shadow-none\"\r\n                      onClick={(e) => {\r\n                        if (window.confirm('Are you sure you want to cancel? ')) {\r\n                          navigate('/Valuelist');\r\n                        } else {\r\n                          e.preventDefault();\r\n                        }\r\n                      }}\r\n                    >\r\n                      Cancel\r\n                    </Button>\r\n                  </div>\r\n                </Row>\r\n              </FormGroup>\r\n            </Form>\r\n          </ComponentCard>\r\n        </Col>\r\n      </Row>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ValueListDetails;\r\n","import {toast} from 'react-toastify';\r\nimport 'react-toastify/dist/ReactToastify.css';\r\n\r\nconst message = (msg,type) => {\r\n    if(type === 'success'){\r\n       return toast.success(msg, {\r\n            position: \"top-right\",\r\n            autoClose: 5000,\r\n            hideProgressBar: false,\r\n            closeOnClick: true,\r\n            pauseOnHover: true,\r\n            draggable: true,\r\n            progress: undefined,\r\n            theme: \"colored\",\r\n            });\r\n    } if(type === 'error'){\r\n        return toast.error(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n     } if(type === 'info'){\r\n        return toast.info(msg, {\r\n             position: \"top-right\",\r\n             autoClose: 5000,\r\n             hideProgressBar: false,\r\n             closeOnClick: true,\r\n             pauseOnHover: true,\r\n             draggable: true,\r\n             progress: undefined,\r\n             theme: \"colored\",\r\n             });\r\n            }if(type === 'warning'){\r\n               return toast.warning(msg, {\r\n                    position: \"top-right\",\r\n                    autoClose: 5000,\r\n                    hideProgressBar: false,\r\n                    closeOnClick: true,\r\n                    pauseOnHover: true,\r\n                    draggable: true,\r\n                    progress: undefined,\r\n                    theme: \"colored\",\r\n                    });\r\n                   }\r\n            return toast(msg);\r\n   \r\n  \r\n}\r\nexport default message\r\n","import React from 'react';\r\nimport { CardTitle, Row, Col } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport default function CreationModification({ details = null, title }) {\r\n  CreationModification.propTypes = {\r\n    details: PropTypes.object,\r\n    title: PropTypes.string,\r\n  };\r\n  return (\r\n    <>\r\n      <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        <Row>\r\n          <Col>{title}</Col>\r\n          {details && (\r\n            <Col>\r\n              <Row>\r\n                <small> Creation: {details && details.created_by} {details && details.creation_date}</small>\r\n              </Row>\r\n              <Row className=\"d-flex\">\r\n                <small> Modified: {details && details.modified_by} {details && details.modification_date}</small>\r\n              </Row>\r\n            </Col>\r\n          )}\r\n        </Row>\r\n      </CardTitle>\r\n    </>\r\n   );\r\n}","import { Card, CardBody, CardSubtitle } from 'reactstrap';\r\nimport PropTypes from 'prop-types';\r\nimport CreationModification from './CreationModification';\r\n\r\nconst ComponentCard = ({ children, title, subtitle,creationModificationDate }) => {\r\n  return (\r\n    <Card className='shadow-none'>\r\n      <CreationModification details={creationModificationDate} title={title}></CreationModification>\r\n      {/* <CardTitle tag=\"h4\" className=\"border-bottom px-4 py-3 mb-0\">\r\n        {title}\r\n        <p tag='h2' className=\"float-end small fs-5\">{righttitle}</p>\r\n      </CardTitle> */}\r\n      <CardBody className=\"p-4\">\r\n        <CardSubtitle className=\"text-muted mb-3\">{subtitle || ''}</CardSubtitle>\r\n        <div>{children}</div>\r\n      </CardBody>\r\n    </Card>\r\n  );\r\n};\r\n\r\nComponentCard.propTypes = {\r\n  children: PropTypes.node,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.node,\r\n  creationModificationDate:PropTypes.any\r\n};\r\n\r\nexport default ComponentCard;\r\n","import moment from \"moment\"\r\n\r\nconst creationdatetime = moment().format('DD-MM-YYYY h:mm:ss a')\r\nexport default creationdatetime \r\n"],"sourceRoot":""}